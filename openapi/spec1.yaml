openapi: 3.0.1
info:
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  title: TuCuota API
  description: >
    # Introduction


    TuCuota serves a REST API. Our API has predictable resource-oriented URLs,
    accepts form-encoded request bodies, returns JSON-encoded responses, and
    uses standard HTTP response codes, authentication, and verbs.


    The base URLs for the TuCuota API is: `https://api.tucuota.com`.


    ### Content types


    TuCuota API supports only `JSON` content types. Make sure to include the
    following header on your requests.


    #### Content-Type Header


    ```

    Content-Type: "application/json"

    ```

    # Authentication


    The API is only available over HTTPS. Attempting to access the API over an
    unsecured HTTP connection will return a tls_required error.


    ### Get an API key


    To create new API keys, please visit the [developers
    section](https:///dashboard.tucuota.com/developers) of our site.


    For each environment (live and test) yo'll find two types of API Keys:


    - Publishable (`pk_...`): can be publicly-accessible in your web client-side
    code to tokenize payment information.

    - Secret (`sk_...`): To be used on the server-side. Must be secret and
    stored securely in your application's code to call TuCuota APIs.


    To authenticate you must provide the API key in an Authorization request
    header (using the Bearer authentication scheme) when making API requests.


    ### Example Authentication Header


    ```

    Authorization: Bearer REPLACE_BEARER_TOKEN

    ```


    All API requests must be made over HTTPS. Calls made over plain HTTP will
    fail. API requests without authentication will also fail.

    # Errors


    This API uses HTTP status codes to communicate with the API consumer.


    - `200 OK` - Response to a successful GET, PUT, PATCH or DELETE.

    - `201 Created` - Response to a POST that results in a creation.

    - `204 No Content` - Response to a successful request that won't be
    returning a body (like a DELETE request).

    - `400 Bad Request` - Malformed request.

    - `401 Unauthorized` - When no or invalid authentication details are
    provided.

    - `403 Forbidden` - When authentication succeeded but authenticated user
    doesn't have access to the resource.

    - `404 Not Found` - When a non-existent resource is requested.

    - `405 Method Not Allowed` - Method not allowed.

    - `406 Not Acceptable` - Could not satisfy the request Accept header.

    - `415 Unsupported Media Type` - Unsupported media type in request.

    - `422 Unprocessable Entity` - Form validation errors.


    #### Error response


    This API returns both, machine-readable error codes and human-readable error
    messages when there's an error.


    ##### Example


    ###### Validation Error


    ```json

    {
      "message": "The given data was invalid.",
      "errors": {
        "organization_name": ["El campo debe tener algún valor."],
        "mobile_number": ["El campo debe tener algún valor."],
        "province": ["El campo debe tener algún valor."],
        "locality": ["El campo debe tener algún valor."],
        "address": ["El campo debe tener algún valor."]
      }
    }

    ```


    ###### Generic Error


    ```json

    {
      "message": "Unauthenticated."
    }

    ```

    # Idempotent Requests


    The API supports idempotency for safely retrying requests without
    accidentally performing the same operation twice. This is useful when an API
    call is disrupted in transit and you do not receive a response. For example,
    if a request to create a payment does not respond due to a network
    connection error, you can retry the request with the same idempotency key to
    guarantee that no more than one charge is created.


    To perform an idempotent request, provide an additional `Idempotency-Key:
    <key>` header to the request.


    Idempotency works by saving the resulting status code and body of the first
    request made for any given idempotency key, regardless of whether it
    succeeded or failed. Subsequent requests with the same key return the same
    result, including 500 errors.


    An idempotency key is a unique value generated by the client which the
    server uses to recognize subsequent retries of the same request. How you
    create unique keys is up to you, but we suggest using V4 UUIDs, or another
    random string with enough entropy to avoid collisions.


    Keys are eligible to be removed from the system after they're at least 24
    hours old, and a new request is generated if a key is reused after the
    original has been pruned. The idempotency layer compares incoming parameters
    to those of the original request and errors unless they're the same to
    prevent accidental misuse.


    Results are only saved if an API endpoint started executing. If incoming
    parameters failed validation, or the request conflicted with another that
    was executing concurrently, no idempotent result is saved because no API
    endpoint began execution. It is safe to retry these requests.


    All `POST` requests accept idempotency keys. Sending idempotency keys in
    `GET` and `DELETE` requests has no effect and should be avoided, as these
    requests are idempotent by definition.

    # Metadata


    The following objects have a metadata parameter that you can use this
    parameter to attach key-value data:


    - [Customer](#tag/Customers)

    - [Mandate](#tag/Mandates)

    - [Payment](#tag/Payments)

    - [Payment Method](#tag/Payment-Methods)

    - [Subscription](#tag/Subscriptions)


    Metadata is useful for storing additional, structured information on an
    object.


    Do not store any sensitive information (bank account numbers, card details,
    etc.) as metadata.

    # Pagination


    This API uses the [Link header - RFC
    5988](http://tools.ietf.org/html/rfc5988#page-6) to include pagination
    details.


    An example of a Link header is described in [GitHub
    documentation](https://developer.github.com/guides/traversing-with-pagination/).


    By default, each page contains `25` elements. It can be requested up to
    `100` elements per page by adding the `limit` parameter. For example adding
    `?limit=100&page=2` will return the second page of `100` elements.

    # Request IDs


    Each API request has an associated request identifier. You can find this
    value in the response headers, under `Request-Id`. You can also find request
    identifiers in the URLs of individual request logs in your
    [Dashboard](https://dashboard.tucuota.com/developer/logs).

    # Conventions


    ### Notational Conventions


    The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
    "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
    document are to be interpreted as described in
    [RFC2119](https://www.ietf.org/rfc/rfc2119).


    ### HTTP Methods


    This API uses HTTP verbs (methods) as following:


    - `GET` - _Read_ - used to **read** (or retrieve) a representation of a
    resource,

    - `POST` - _Create_ - used to **create** new resources. In particular, it's
    used to create subordinate resources.

    - `PUT` - _Update/Replace_ - used for **update** capabilities, PUT-ing to a
    known resource URI with the request body containing the newly-updated
    representation of the original resource. On successful request, replaces
    identified resource with the request body.

    - `PATCH` - _Update/Modify_ - used for **modify** capabilities. The PATCH
    request only needs to contain the changes to the resource, not the complete
    resource.

    - `DELETE` - _Delete_ - used to **delete** a resource identified by a URI.


    ### Representation of Date and Time


    All exchange of date and time-related data MUST be done according to [RFC339
    standard](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8).


    ### Versioning


    This API uses `Api-Version` header to identify requested version. Every
    **minor** version SHOULD be backward compatible. However, **major** versions
    MAY introduce _breaking changes_.


    `Api-Version: `


    This header SHOULD be present in every request. If not, API MUST use the
    newest available major release.


    If requested version is not available, API SHOULD try to fall back to the
    next available minor release.


    When backwards-incompatible changes are made to the API, a new, dated
    version is released. The current version of the API is `2022-02-14`.


    ### Resource IDs


    This API uses short non-sequential url-friendly unique ids. Every resource
    id MUST consists of 12 url-friendly characters: `A-Z`, `a-z`, `0-9`, `_` and
    `-`.


    #### Example


    `PY6b3Rr6nRMo`

    # Testing


    ### Testing Card and CBU numbers


    In sandbox mode the following test cards and CBUs can be used to create
    payments that produce specific responses useful for testing different
    scenarios.


    | Brand      | Number                 | Result     |

    | ---------- | ---------------------- | ---------- |

    | cbu        | 2859363672283668188432 | approved   |

    | cbu        | 2852656051819605126406 | rejected   |

    | cbu        | 2858814288841490615567 | failed     |

    | cbu        | 0110022831266917230013 | will_retry |

    | mastercard | 5447651834106668       | approved   |

    | mastercard | 5457948807868523       | rejected   |

    | mastercard | 5292525121482410       | failed     |

    | visa       | 4024007127322104       | approved   |

    | visa       | 4556854712355908       | rejected   |

    | visa       | 4485388690536078       | failed     |

    | amex       | 377539501632477        | approved   |

    | amex       | 341400508811411        | rejected   |

    | amex       | 372974912152697        | failed     |

    # Webhooks


    To start receiving webhooks, you’ll need to add webhook endpoints from your
    [Dashboard](/dashboard/developers).


    <blockquote>
        Example webhook:
    </blockquote>


    ```json

    {
      "id": "EVPYeJeyeJ7r",
      "created_at": "2019-05-23T20:18:28-0300",
      "data": {
        "object": {
          "id": "CS9PL8eeo8aB",
          "paid": false,
          "amount": 1600,
          "status": "pending_submission",
          "gateway": "GWd1e9nQwK7v",
          "currency": "ARS",
          "customer": {
            "id": "CS9PL8eeo8aB",
            "name": "Máximo Irizarry",
            "email": "mirrizarry@paez.com",
            "livemode": true,
            "metadata": [],
            "created_at": "2018-05-01T11:45:14-0300",
            "updated_at": "2018-05-01T11:45:14-0300",
            "gateway_identifier": "001234",
            "mobile_number": "+5493812596655",
            "identification_type": "",
            "identification_number": ""
          },
          "livemode": true,
          "metadata": [],
          "retryable": false,
          "created_at": "2018-05-01T11:45:14-0300",
          "updated_at": "2018-05-01T11:45:14-0300",
          "charge_date": "2019-05-15",
          "description": "Pago extra",
          "subscription": null,
          "name": "Máximo Irizarry",
          "email": "mirrizarry@paez.com",
          "gateway_identifier": "456700",
          "mobile_number": "+5493812596655",
          "identification_type": "",
          "identification_number": ""
        }
      },
      "livemode": true,
      "resource": "payment",
      "resource_id": "PY6b3Rr6nRMo",
      "type": "payment.retrying"
    }

    ```


    When an event occurs in your account, we’ll send it to every enabled webhook
    endpoint as a POST request.


    ### Webhooks types


    - `customer.created`

    - `customer.disabled`

    - `customer.restored`

    - `customer.updated`

    - `gateway.created`

    - `gateway.disabled`

    - `gateway.updated`

    - `payment.cancelled`

    - `payment.created`

    - `payment.retrying`

    - `payment.updated`

    - `payment_method.automatically_updated`

    - `payment_method.created`

    - `payment_method.updated`

    - `subscription.cancelled`

    - `subscription.created`

    - `subscription.finished`

    - `subscription.paused`

    - `subscription.resumed`

    - `subscription.updated`

    - `user.updated_available_brands`


    ### Testing the webhooks in local environments


    You can easy create test webhooks using https://webhook.site/ With that you
    will be able to see what we are sending to our API consumers.


    Also, to start integrating the webhooks, your code will need to be
    accessible from the internet so TuCuota can reach it with HTTP requests. If
    you’re working locally, the easiest way to do this is with
    [ngrok](https://ngrok.com/).
  termsOfService: http://swagger.io/terms/
  contact:
    name: TuCuota Devs
    email: devs@tucuota.com
    url: https://tucuota.com/docs/api
  x-logo:
    url: https://tucuota.com/img/TuCuota.svg
    altText: TuCuota
  version: '2022-02-14'
externalDocs:
  description: TuCuota Docs.
  url: https://tucuota.com/docs
servers:
  - url: https://api.tucuota.com
    description: API server
security:
  - bearerAuth: []
components:
  schemas:
    '401':
      title: Unauthorized
      description: Unauthorized response
      type: object
      properties: &ref_12
        message:
          type: string
          example: Unauthorized
    '404':
      title: Not Found
      description: Not Found response
      type: object
      properties: &ref_13
        message:
          type: string
          example: Record not found
    id:
      description: Unique identifier for the object.
      maxLength: 5000
      type: string
    name:
      description: The customer's full name or business name.
      type: string
      example: Jorgelina Castro
    email:
      description: The customer's email address.
      type: string
      example: asd@asd.com
    livemode:
      description: >-
        Has the value `true` if the object exists in live mode or the value
        `false` if the object exists in test mode.
      type: boolean
    metadata:
      example: &ref_0
        some: metadata
      anyOf: &ref_1
        - additionalProperties:
            type: string
          type: object
        - type: 'null'
      description: |
        Set of [key-value pairs](#section/Metadata) that you can attach
        to an object. This can be useful for storing additional
        information about the object in a structured format.
        All keys can be unset by posting `null` value to `metadata`.
    gateway_identifier:
      description: The customer's reference for bank account statements.
      type: integer
      format: int32
      example: 383473
    identification_number:
      description: Customer's Document ID number.
      oneOf: &ref_2
        - type: 'null'
        - type: string
      example: 15.555.324
    identification_type:
      description: Customer's Document type.
      oneOf: &ref_3
        - type: 'null'
        - type: string
      example: DNI
    created_at:
      type: string
      format: date-time
      example: '2022-02-11T23:19:22-03:00'
      description: >-
        Time at which the object was created. Formatting follows
        [RFC339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8).
    updated_at:
      type: string
      format: date-time
      example: '2022-02-11T23:19:22-03:00'
      description: >-
        Time at which the object was last updated. Formatting follows
        [RFC339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8).
    deleted_at:
      oneOf: &ref_4
        - type: 'null'
        - type: string
      format: date-time
      example: '2022-02-11T23:19:22-03:00'
      description: >-
        Time at which the object was deleted. Formatting follows
        [RFC339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8).
    customer:
      title: Customer
      description: This object represents a customer of your organization.
      type: object
      properties: &ref_8
        id:
          example: CSljikas98
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        name:
          description: The customer's full name or business name.
          type: string
          example: Jorgelina Castro
        email:
          description: The customer's email address.
          type: string
          example: asd@asd.com
        object:
          type: string
          enum:
            - customer
        livemode:
          description: >-
            Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        metadata:
          example: *ref_0
          anyOf: *ref_1
          description: |
            Set of [key-value pairs](#section/Metadata) that you can attach
            to an object. This can be useful for storing additional
            information about the object in a structured format.
            All keys can be unset by posting `null` value to `metadata`.
        mobile_number:
          description: Customer's phone number.
          oneOf:
            - type: 'null'
            - type: string
          example: '5491164531234'
        gateway_identifier:
          description: The customer's reference for bank account statements.
          type: integer
          format: int32
          example: 383473
        identification_number:
          description: Customer's Document ID number.
          oneOf: *ref_2
          example: 15.555.324
        identification_type:
          description: Customer's Document type.
          oneOf: *ref_3
          example: DNI
        created_at:
          type: string
          format: date-time
          example: '2022-02-11T23:19:22-03:00'
          description: >-
            Time at which the object was created. Formatting follows
            [RFC339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8).
        updated_at:
          type: string
          format: date-time
          example: '2022-02-11T23:19:22-03:00'
          description: >-
            Time at which the object was last updated. Formatting follows
            [RFC339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8).
        deleted_at:
          oneOf: *ref_4
          format: date-time
          example: '2022-02-11T23:19:22-03:00'
          description: >-
            Time at which the object was deleted. Formatting follows
            [RFC339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8).
        active_subscriptions_count:
          description: Active Subscriptions Count
          type: integer
          format: int32
          example: 0
        active_subscriptions_sum:
          description: Active Subscriptions Sum
          type: integer
          format: int32
          example: 0
        approved_payments_count:
          description: Approved Payments Count
          type: integer
          format: int32
          example: 0
        approved_payments_sum:
          description: Approved Payments Sum
          type: integer
          format: int32
          example: 0
        cancelled_subscriptions_count:
          description: Cancelled Subscriptions Count
          type: integer
          format: int32
          example: 0
        paused_subscriptions_count:
          description: Paused Subscriptions Count
          type: integer
          format: int32
          example: 0
        rejected_payments_count:
          description: Rejected Payments Count
          type: integer
          format: int32
          example: 0
        rejected_payments_sum:
          description: Rejected Payments Sum
          type: integer
          format: int32
          example: 0
        finished_subscriptions_count:
          description: Finished Subscriptions Count
          type: integer
          format: int32
          example: 0
    links:
      title: Response Meta
      description: Pagination metadata
      type: object
      properties: &ref_10
        first:
          type: string
          nullable: true
          example: https://api.tucuota.test/v1/customers
        last:
          type: string
          nullable: true
          example: https://api.tucuota.test/v1/customers
        next:
          type: string
          nullable: true
          example: https://api.tucuota.test/v1/customers
        prev:
          type: string
          nullable: true
          example: https://api.tucuota.test/v1/customers
    meta:
      title: Response Meta
      description: Pagination metadata
      type: object
      properties: &ref_11
        current_page:
          type: number
          example: 1
        from:
          type: number
          example: 1
        last_page:
          type: number
          example: 28
        per_page:
          type: number
          example: 1
        to:
          type: number
          example: 1
        total:
          type: number
          example: 2
        path:
          type: string
          example: https://api.tucuota.test/v1/customers
    delivered_at:
      oneOf: &ref_5
        - type: 'null'
        - type: string
      format: date-time
      example: '2022-02-11T23:19:22-03:00'
      description: >-
        Time at which the event was delivered. Formatting follows
        [RFC339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8).
    event:
      title: Event
      description: This object represents an event on your account.
      type: object
      properties: &ref_14
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        object:
          type: string
          enum:
            - event
        created_at:
          type: string
          format: date-time
          example: '2022-02-11T23:19:22-03:00'
          description: >-
            Time at which the object was created. Formatting follows
            [RFC339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8).
        data:
          type: object
          required:
            - object
          properties:
            object:
              type: object
              description: Event object.
        delivered_at:
          oneOf: *ref_5
          format: date-time
          example: '2022-02-11T23:19:22-03:00'
          description: >-
            Time at which the event was delivered. Formatting follows
            [RFC339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8).
        livemode:
          description: >-
            Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        resource:
          type: string
          example: customer
          enum:
            - customer
            - gateway
            - import
            - mandate
            - payment
            - payment_method
            - subscription
          description: Resource attached to the event.
        resource_id:
          type: string
          example: CS12312d1d1dl
          description: ID for the resource attached to the event.
        type:
          type: string
          description: Event type.
          example: customer.created
          enum:
            - customer.created
            - customer.disabled
            - customer.restored
            - customer.updated
            - gateway.created
            - gateway.disabled
            - gateway.enabled
            - gateway.updated
            - import.processed
            - mandate.created
            - mandate.restored
            - mandate.revoked
            - payment.cancelled
            - payment.created
            - payment.retrying
            - payment.updated
            - payment_method.automatically_updated
            - payment_method.created
            - payment_method.updated
            - subscription.cancelled
            - subscription.created
            - subscription.finished
            - subscription.paused
            - subscription.resumed
            - subscription.updated
    cancelled_at:
      type: string
      format: date-time
      example: '2022-02-11T23:19:22-03:00'
      description: >-
        Time at which the import was marked as cancelled. Formatting follows
        [RFC339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8).
    invalid_at:
      type: string
      format: date-time
      example: '2022-02-11T23:19:22-03:00'
      description: >-
        Time at which the import was marked as invalid. Formatting follows
        [RFC339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8).
    processed_at:
      type: string
      format: date-time
      example: '2022-02-11T23:19:22-03:00'
      description: >-
        Time at which the import was marked as processed. Formatting follows
        [RFC339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8).
    ready_at:
      type: string
      format: date-time
      example: '2022-02-11T23:19:22-03:00'
      description: >-
        Time at which the import was marked as ready. Formatting follows
        [RFC339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8).
    import:
      title: Import
      description: This object represents an import of your account.
      type: object
      properties: &ref_15
        id:
          example: IM129038120h
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        batch_job:
          type: object
        cancelled_at:
          type: string
          format: date-time
          example: '2022-02-11T23:19:22-03:00'
          description: >-
            Time at which the import was marked as cancelled. Formatting follows
            [RFC339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8).
        invalid_at:
          type: string
          format: date-time
          example: '2022-02-11T23:19:22-03:00'
          description: >-
            Time at which the import was marked as invalid. Formatting follows
            [RFC339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8).
        processed_at:
          type: string
          format: date-time
          example: '2022-02-11T23:19:22-03:00'
          description: >-
            Time at which the import was marked as processed. Formatting follows
            [RFC339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8).
        ready_at:
          type: string
          format: date-time
          example: '2022-02-11T23:19:22-03:00'
          description: >-
            Time at which the import was marked as ready. Formatting follows
            [RFC339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8).
        invalid_rows_count:
          description: Invalid Rows Count
          type: number
          example: 0
        valid_rows_count:
          description: Valid Rows Count
          type: number
          example: 0
        rows_count:
          description: Rows Count
          type: number
          example: 0
        livemode:
          description: >-
            Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        original_filename:
          type: string
          example: subscriptions-import-template.csv
        type:
          description: Import Type
          type: string
          example: subscriptions
        status:
          description: Import Status
          type: string
          example: processed
        created_at:
          type: string
          format: date-time
          example: '2022-02-11T23:19:22-03:00'
          description: >-
            Time at which the object was created. Formatting follows
            [RFC339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8).
        updated_at:
          type: string
          format: date-time
          example: '2022-02-11T23:19:22-03:00'
          description: >-
            Time at which the object was last updated. Formatting follows
            [RFC339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8).
    link:
      title: Link
      description: This object represents a public link of your organization.
      type: object
      properties: &ref_16
        id:
          example: 43751655-7580-4bd7-8bad-3c54ed1c4abc
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        livemode:
          description: >-
            Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        metadata:
          example: *ref_0
          anyOf: *ref_1
          description: |
            Set of [key-value pairs](#section/Metadata) that you can attach
            to an object. This can be useful for storing additional
            information about the object in a structured format.
            All keys can be unset by posting `null` value to `metadata`.
        created_at:
          type: string
          format: date-time
          example: '2022-02-11T23:19:22-03:00'
          description: >-
            Time at which the object was created. Formatting follows
            [RFC339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8).
        updated_at:
          type: string
          format: date-time
          example: '2022-02-11T23:19:22-03:00'
          description: >-
            Time at which the object was last updated. Formatting follows
            [RFC339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8).
        deleted_at:
          oneOf: *ref_4
          format: date-time
          example: '2022-02-11T23:19:22-03:00'
          description: >-
            Time at which the object was deleted. Formatting follows
            [RFC339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8).
    card:
      title: Credit Card
      description: This object represents a credit card on your account.
      type: object
      properties: &ref_6
        bank:
          description: Credit card's bank or financial institution.
          type: string
          example: Banco Santander Río
        brand:
          description: Credit card's brand.
          type: string
          example: visa-credito
          enum:
            - amex
            - argencard
            - cabal
            - cabal-debito
            - cbu
            - cencosud
            - cmr-falabella
            - cordobesa
            - diners-club
            - discover
            - jcb
            - lider
            - maestro
            - mastercard
            - mastercard-debit
            - naranja
            - naranja-visa
            - nativa
            - visa-credito
            - visa-debito
            - favacard
        country:
          description: >-
            Credit card's [ISO_3166-1_alpha-2 country
            code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).
          type: string
          example: AR
        expiration_month:
          description: Expiration month.
          type: number
          example: 11
        expiration_year:
          description: Expiration year.
          type: number
          example: 2030
        fingerprint:
          description: Unique fingerprint for this credit card number on your account.
          type: string
          example: 8712yh2uihiu1123sxas
        last_four_digits:
          description: Credit's card last four digits.
          type: string
          example: '9876'
    cbu:
      title: CBU
      description: This object represents a CBU bak account on your account.
      type: object
      properties: &ref_7
        bank:
          description: Bank.
          type: string
        country:
          description: Bank account country.
          type: string
          enum:
            - AR
        fingerprint:
          description: Unique fingerprint for this bank account number on your account.
          type: string
          example: 8712yh2uihiu1123sxas
        last_four_digits:
          description: Bank account last four digits.
          type: string
          example: '9876'
    payment_method:
      type: object
      properties: &ref_9
        type:
          type: string
          description: 'One of: cbu, card.'
          enum:
            - card
            - cbu
        card:
          title: Credit Card
          description: This object represents a credit card on your account.
          type: object
          properties: *ref_6
        cbu:
          title: CBU
          description: This object represents a CBU bak account on your account.
          type: object
          properties: *ref_7
        created_at:
          type: string
          format: date-time
          example: '2022-02-11T23:19:22-03:00'
          description: >-
            Time at which the object was created. Formatting follows
            [RFC339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8).
        id:
          example: PM1982h3129
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        livemode:
          description: >-
            Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        object:
          type: string
          enum:
            - payment_method
        updated_at:
          type: string
          format: date-time
          example: '2022-02-11T23:19:22-03:00'
          description: >-
            Time at which the object was last updated. Formatting follows
            [RFC339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8).
    mandate:
      title: Mandate
      description: This object represents a mandate of your organization.
      type: object
      properties: &ref_17
        id:
          example: 43751655-7580-4bd7-8bad-3c54ed1c4abc
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        livemode:
          description: >-
            Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        metadata:
          example: *ref_0
          anyOf: *ref_1
          description: |
            Set of [key-value pairs](#section/Metadata) that you can attach
            to an object. This can be useful for storing additional
            information about the object in a structured format.
            All keys can be unset by posting `null` value to `metadata`.
        created_at:
          type: string
          format: date-time
          example: '2022-02-11T23:19:22-03:00'
          description: >-
            Time at which the object was created. Formatting follows
            [RFC339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8).
        updated_at:
          type: string
          format: date-time
          example: '2022-02-11T23:19:22-03:00'
          description: >-
            Time at which the object was last updated. Formatting follows
            [RFC339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8).
        deleted_at:
          oneOf: *ref_4
          format: date-time
          example: '2022-02-11T23:19:22-03:00'
          description: >-
            Time at which the object was deleted. Formatting follows
            [RFC339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8).
        customer:
          title: Customer
          description: This object represents a customer of your organization.
          type: object
          properties: *ref_8
        payment_method:
          type: object
          properties: *ref_9
        object:
          type: string
          enum:
            - mandate
    subscription:
      title: Subscription
      description: This object represents a subscription of your organization.
      type: object
      properties: &ref_18
        created_at:
          type: string
          format: date-time
          example: '2022-02-11T23:19:22-03:00'
          description: >-
            Time at which the object was created. Formatting follows
            [RFC339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8).
        currency:
          type: string
        approved_payments_count:
          type: number
        approved_payments_sum:
          type: number
        customer:
          title: Customer
          description: This object represents a customer of your organization.
          type: object
          properties: *ref_8
        first_date:
          type: string
        id:
          type: string
        livemode:
          description: >-
            Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        metadata:
          example: *ref_0
          anyOf: *ref_1
          description: |
            Set of [key-value pairs](#section/Metadata) that you can attach
            to an object. This can be useful for storing additional
            information about the object in a structured format.
            All keys can be unset by posting `null` value to `metadata`.
        object:
          type: string
        payment_method:
          type: object
          properties: *ref_9
        rejected_payments_count:
          type: number
        rejected_payments_sum:
          type: number
        start_date:
          type: string
        status:
          type: string
        upcoming_dates:
          type: array
          items:
            type: object
        updated_at:
          type: string
          format: date-time
          example: '2022-02-11T23:19:22-03:00'
          description: >-
            Time at which the object was last updated. Formatting follows
            [RFC339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8).
    payment:
      type: object
    completed_at:
      type: string
      format: date-time
      example: '2022-02-11T23:19:22-03:00'
      description: >-
        Time at which the sessions was completed. Formatting follows
        [RFC339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8).
    uuid:
      description: UUID identifier for the object.
      type: string
      example: 43751655-7580-4bd7-8bad-3c54ed1c4abc
    session:
      title: Session
      description: This object represents a session of your organization.
      type: object
      properties: &ref_19
        amount:
          type: number
          description: Amount to be collected
          example: '12.5'
        brands:
          type: array
        completed_at:
          type: string
          format: date-time
          example: '2022-02-11T23:19:22-03:00'
          description: >-
            Time at which the sessions was completed. Formatting follows
            [RFC339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8).
        count:
          type: number
        created_at:
          type: string
          format: date-time
          example: '2022-02-11T23:19:22-03:00'
          description: >-
            Time at which the object was created. Formatting follows
            [RFC339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8).
        id:
          description: UUID identifier for the object.
          type: string
          example: 43751655-7580-4bd7-8bad-3c54ed1c4abc
        name:
          description: The customer's full name or business name.
          type: string
          example: Jorgelina Castro
        email:
          description: The customer's email address.
          type: string
          example: asd@asd.com
        livemode:
          description: >-
            Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        metadata:
          example: *ref_0
          anyOf: *ref_1
          description: |
            Set of [key-value pairs](#section/Metadata) that you can attach
            to an object. This can be useful for storing additional
            information about the object in a structured format.
            All keys can be unset by posting `null` value to `metadata`.
        mobile_number:
          oneOf:
            - type: 'null'
            - type: string
          example: '5491164531234'
        gateway_identifier:
          type: integer
          format: int32
          example: 383473
        identification_number:
          oneOf:
            - type: 'null'
            - type: string
          example: 15.555.324
        identification_type:
          oneOf:
            - type: 'null'
            - type: string
          example: DNI
        updated_at:
          type: string
          format: date-time
          example: '2022-02-11T23:19:22-03:00'
          description: >-
            Time at which the object was last updated. Formatting follows
            [RFC339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8).
        active_subscriptions_count:
          type: integer
          format: int32
          example: 0
        active_subscriptions_sum:
          type: integer
          format: int32
          example: 0
        approved_payments_count:
          type: integer
          format: int32
          example: 0
        approved_payments_sum:
          type: integer
          format: int32
          example: 0
        cancelled_subscriptions_count:
          type: integer
          format: int32
          example: 0
        paused_subscriptions_count:
          type: integer
          format: int32
          example: 0
        rejected_payments_count:
          type: integer
          format: int32
          example: 0
        rejected_payments_sum:
          type: integer
          format: int32
          example: 0
        finished_subscriptions_count:
          type: integer
          format: int32
          example: 0
        deleted_at:
          oneOf: *ref_4
          format: date-time
          example: '2022-02-11T23:19:22-03:00'
          description: >-
            Time at which the object was deleted. Formatting follows
            [RFC339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8).
    webhook:
      title: Webhook
      description: >-
        You can configure [webhook
        endpoints](https://tucuota.com/docs/webhooks/) via the API to be

        notified about events that happen in your TuCuota account or connected

        accounts.


        Most users configure webhooks from [the
        dashboard](https://dashboard.tucuota.com/webhooks), which provides a
        user interface for registering and testing your webhook endpoints.
      type: object
      properties: &ref_20
        id:
          description: Unique identifier for the object.
          maxLength: 5000
          type: string
        object:
          type: string
          enum:
            - webhook
        url:
          type: string
          description: The URL of the webhook endpoint.
          maxLength: 5000
          example: https://tucuota.com/webhook/200
        enabled:
          description: Whether the webhook is enabled.
          type: boolean
        enabled_events:
          description: >
            One of: `customer.created`, `customer.disabled`,
            `customer.restored`, `customer.updated`, `gateway.created`,
            `gateway.disabled`, `gateway.updated`, `payment.cancelled`,
            `payment.created`, `payment.retrying`, `payment.updated`,
            `payment_method.automatically_updated`, `payment_method.created`,
            `payment_method.updated`, `subscription.cancelled`,
            `subscription.created`, `subscription.finished`,
            `subscription.paused`, `subscription.resumed`,
            `subscription.updated`, `user.updated_available_brands`
          type: array
          example:
            - customer.created
            - customer.updated
            - payment.created
          items:
            type: string
        secret:
          description: >-
            The endpoint's secret, used to generate [webhook
            signatures](https://tucuota.com/docs/webhooks/signatures).
          maxLength: 5000
          type: string
          example: Rrdm41mW4x54uUS2A6QnHhm7hXwpuR
        failed_lately_count:
          type: integer
          format: int32
          example: 0
        success_lately_count:
          type: integer
          format: int32
          example: 0
        livemode:
          description: >-
            Has the value `true` if the object exists in live mode or the value
            `false` if the object exists in test mode.
          type: boolean
        created_at:
          type: string
          format: date-time
          example: '2022-02-11T23:19:22-03:00'
          description: >-
            Time at which the object was created. Formatting follows
            [RFC339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8).
        updated_at:
          type: string
          format: date-time
          example: '2022-02-11T23:19:22-03:00'
          description: >-
            Time at which the object was last updated. Formatting follows
            [RFC339](https://datatracker.ietf.org/doc/html/rfc3339#section-5.8).
      example: &ref_21
        created_at: '2022-02-11T23:19:22-03:00'
        enabled: true
        enabled_events:
          - '*'
        id: WHq4VzyAzDgB
        livemode: false
        object: webhook
        secret: DmUeH9E9yJ7ax9IYQVm9HpQ3VWvIx0
        updated_at: '2022-02-11T23:19:22-03:00'
        url: https://site.com/webhook
    validation-error:
      title: Validation Error
      description: asd
      type: object
      properties:
        message:
          type: string
        errors:
          type: array
          items:
            type: string
    api-response:
      description: A better exclusion of the two groups of properties, using oneOf.
      oneOf:
        - properties:
            data:
              description: The matching data
              type: array
            meta:
              description: Any relevant metadata
              type: object
        - properties:
            errors:
              description: ''
              type: array
      type: object
  examples:
    customer:
      summary: Sample Customer
      value:
        active_subscriptions_count: 0
        active_subscriptions_sum: 0
        approved_payments_count: 0
        approved_payments_sum: 0
        cancelled_subscriptions_count: 0
        created_at: '2022-02-05T01:42:13-03:00'
        deleted_at: null
        email: john@doe.com
        finished_subscriptions_count: 0
        gateway_identifier: 383473
        id: CSnlZxyY3jwr
        identification_number: null
        identification_type: null
        livemode: false
        metadata:
          hello: world
        mobile_number: '5491154876503'
        name: John Doe
        paused_subscriptions_count: 0
        rejected_payments_count: 0
        rejected_payments_sum: 0
        updated_at: '2022-02-05T01:42:13-03:00'
    event:
      summary: Sample Subscription
      value:
        created_at: '2022-02-05T01:42:13-03:00'
        data:
          object:
            created_at: '2022-02-05T01:42:13-03:00'
            deleted_at: null
            email: john@doe.com
            gateway_identifier: 383473
            id: CSnlZxyY3jwr
            identification_number: null
            identification_type: null
            livemode: false
            metadata: null
            mobile_number: '5491154876503'
            name: John Doe
            updated_at: '2022-02-05T01:42:13-03:00'
        delivered_at: '2022-02-11T20:11:38-03:00'
        id: EVaX3JagwR6x
        livemode: false
        object: event
        resource: customer
        resource_id: CSnlZxyY3jwr
        type: customer.created
    export:
      summary: Sample Subscription
      value:
        created_at: '2022-01-25T14:10:01-03:00'
        created_from: manual
        filename: exports/payments_monthly-2022-01-25-LiB4e3h4C1CBlmGK.xlsx
        id: EXaxk4p1DkXd
        livemode: false
        status: ready
        type: payments_monthly
        updated_at: '2022-01-26T15:36:57-03:00'
    gateway:
      summary: Sample Gateway
      value:
        brand_list:
          - visa-debito
        brands:
          visa-debito: true
        code_length: null
        created_at: '2021-06-07T17:51:37-03:00'
        disabled: false
        gatewaykind: visaD
        id: GWOa6APJMKze
        livemode: false
        number: '12111'
        number_bank_retries: null
        object: gateway
        updated_at: '2021-06-07T17:51:37-03:00'
        username: DEMENTIRITA
    import:
      summary: Sample Import
      value:
        batch_job:
          created_at: '2021-06-08T12:49:06-03:00'
          failed_jobs: 0
          finished_at: '2021-06-08T12:49:06-03:00'
          pending_jobs: 0
          progress: 100
          total_jobs: 2
        cancelled_at: null
        created_at: '2021-06-08T09:49:04-03:00'
        id: IMB1rRDqkM5X
        invalid_at: null
        invalid_rows_count: 0
        livemode: false
        original_filename: subscriptions-import-template.csv
        processed_at: '2021-06-08T09:49:06-03:00'
        ready_at: '2021-06-08T09:49:05-03:00'
        rows_count: 2
        status: processed
        type: subscriptions
        updated_at: '2021-06-08T09:49:06-03:00'
        valid_rows_count: 2
    link:
      summary: Sample Link
      value:
        body: hoiadsad ad sad
        brands: []
        button_text: null
        created_at: '2022-02-02T02:06:22.00-03:00'
        deleted_at: null
        enabled: true
        extra_fields: []
        extra_fields_customer: []
        id: b7fba990-83cc-11ec-8c7b-5b2fd150abb2
        kind: payment
        livemode: false
        metadata: null
        name_text: null
        object: link
        options:
          - amount: '100'
            count: null
            description: mucho
            editable_amount: false
            editable_count: false
            installments: 1
            interval: '1'
            interval_unit: monthly
            max_installments: null
            show_count: false
            show_installments: false
          - amount: '75'
            count: null
            description: poco
            editable_amount: false
            editable_count: false
            installments: 1
            interval: '1'
            interval_unit: monthly
            max_installments: null
            show_count: false
            show_installments: false
        public_uri: https://tucuota.com/link/b7fba990-83cc-11ec-8c7b-5b2fd150abb2
        success_url: null
        title: Test options
        updated_at: '2022-02-02T02:06:22.00-03:00'
        user:
          country: AR
          currency: ARS
          email: juandelperal@gmail.com
          organization_name: TuCuota
          preference_color1: '#ffffff'
          preference_color2: '#d10000'
          preference_logo: >-
            https://tucuota-user-uploads.s3.amazonaws.com/production/e8d7c19b93dec70b352b68e16fcb066e.png
    mandate:
      summary: Sample Mandate
      value:
        created_at: '2022-02-01T19:06:37-03:00'
        customer:
          created_at: '2022-02-05T01:42:13-03:00'
          deleted_at: null
          email: john@doe.com
          gateway_identifier: 383473
          id: CSnlZxyY3jwr
          identification_number: null
          identification_type: null
          livemode: false
          metadata: null
          mobile_number: '5491154876503'
          name: John Doe
          updated_at: '2022-02-05T01:42:13-03:00'
        deleted_at: null
        id: 3990a740-83ab-11ec-8651-cde6203c968e
        livemode: false
        metadata:
          dni: '1231232131'
        object: mandate
        payment_method:
          $ref: ./payment_method.yaml
        status: active
        updated_at: '2022-02-01T19:06:37-03:00'
    payment:
      summary: Sample Payment
      value:
        amount: 75
        auto_retries_max_attempts: null
        can_auto_retry_until: null
        charge_date: '2022-02-01'
        created_at: '2022-02-01T23:13:05-03:00'
        currency: ARS
        customer:
          $ref: '#/components/examples/customer'
        description: poco
        effective_charged_date: null
        estimated_accreditation_date: null
        gateway: GWZYpKR8bA0W
        gateway_identifier: null
        id: PYa6k6LlypzP
        livemode: false
        metadata: []
        object: payment
        paid: false
        payment_method:
          $ref: '#/components/examples/payment_method'
        response_message: ''
        retryable: false
        status: pending_submission
        submissions_count: 0
        subscription: null
        subscription_payment_number: null
        updated_at: '2022-02-01T23:13:05-03:00'
        updated_status: null
    payment_method:
      summary: Sample Payment Method
      value:
        bank: Visa
        brand: visa-credito
        card:
          bank: Visa
          brand: visa-credito
          country: AR
          expiration_month: null
          expiration_year: null
          fingerprint: 0sZQikKp4lImAgIo
          funding: credit
          last_four_digits: '4242'
        created_at: '2022-02-01T23:13:04-03:00'
        id: PMBja4YZ2GDR
        livemode: false
        metadata: null
        object: payment_method
        type: card
        updated_at: '2022-02-01T23:13:04-03:00'
    session:
      summary: Sample Session
      value:
        amount: '100.00'
        brands: []
        completed_at: null
        count: null
        created_at: '2022-02-11T23:17:54.00-03:00'
        customer_email: null
        customer_id: null
        customer_name: null
        day_of_month: null
        day_of_week: null
        deleted_at: null
        description: mucho
        editable_amount: false
        editable_count: false
        extra_fields: []
        extra_fields_customer: []
        id: d6fe7bf0-8b90-11ec-9bb7-ad20fd301d81
        installments: 1
        interval: 1
        interval_unit: monthly
        kind: payment
        link_id: b7fba990-83cc-11ec-8c7b-5b2fd150abb2
        livemode: false
        max_installments: null
        name_text: null
        object: session
        public_uri: https://tucuota.com/checkout/d6fe7bf0-8b90-11ec-9bb7-ad20fd301d81
        updated_at: '2022-02-11T23:17:55.00-03:00'
        user:
          country: AR
          currency: ARS
          email: juandelperal@gmail.com
          organization_name: TuCuota
          preference_color1: '#ffffff'
          preference_color2: '#d10000'
          preference_logo: >-
            https://tucuota-user-uploads.s3.amazonaws.com/production/e8d7c19b93dec70b352b68e16fcb066e.png
    subscription:
      summary: Sample Subscription
      value:
        amount: 900
        approved_payments_count: 0
        approved_payments_sum: 0
        count: null
        created_at: '2021-06-08T09:49:06-03:00'
        currency: ARS
        customer:
          $ref: '#/components/examples/customer'
        day_of_month: 14
        day_of_week: null
        description: Expensas
        first_date: '2022-02-14'
        id: SBawNMWW2AMlWZ
        interval: 1
        interval_unit: monthly
        livemode: false
        metadata:
          additional_data: null
          more_data: null
        object: subscription
        payment_method:
          $ref: '#/components/examples/payment_method'
        payments_created: 4
        rejected_payments_count: 0
        rejected_payments_sum: 0
        start_date: null
        status: active
        upcoming_dates:
          - '2022-02-14'
          - '2022-03-14'
          - '2022-04-14'
          - '2022-05-14'
          - '2022-06-14'
        updated_at: '2021-06-08T09:49:06-03:00'
    webhook:
      summary: Sample Webhook
      value:
        created_at: '2022-02-11T23:19:22-03:00'
        enabled: true
        enabled_events:
          - '*'
        id: WHq4VzyAzDgB
        livemode: false
        object: webhook
        secret: DmUeH9E9yJ7ax9IYQVm9HpQ3VWvIx0
        updated_at: '2022-02-11T23:19:22-03:00'
        url: https://site.com/webhook
  securitySchemes:
    bearerAuth:
      description: >-
        Bearer HTTP authentication. Allowed headers-- Authorization: Bearer
        <api_key>
      scheme: bearer
      type: http
      bearerFormat: auth-scheme
    basicAuth:
      description: >-
        Basic HTTP authentication. Allowed headers-- Authorization: Basic
        <api_key> | Authorization: Basic <base64 hash of `api_key:`>
      scheme: basic
      type: http
tags:
  - name: Customers
    description: >
      A Customer is Lorem ipsum dolor sit amet, consectetur adipisicing elit,
      sed do eiusmod

      tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim
      veniam,

      quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo

      consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse

      cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat
      non

      proident, sunt in culpa qui officia deserunt mollit anim id est laborum.


      <SchemaDefinition schemaRef="#/components/schemas/customer"
      exampleRef="#/components/examples/customer" showReadOnly={true}
      showWriteOnly={true} />
  - name: Events
    description: >
      An Event is Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed
      do eiusmod

      tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim
      veniam,

      quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo

      consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse

      cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat
      non

      proident, sunt in culpa qui officia deserunt mollit anim id est laborum.


      <SchemaDefinition schemaRef="#/components/schemas/event"
      exampleRef="#/components/examples/event" showReadOnly={true}
      showWriteOnly={true} />
  - name: Imports
    description: >
      An Import is Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed
      do eiusmod

      tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim
      veniam,

      quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo.


      <SchemaDefinition schemaRef="#/components/schemas/import"
      exampleRef="#/components/examples/import" showReadOnly={true}
      showWriteOnly={true} />
  - name: Links
    description: >
      A Link is Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do
      eiusmod

      tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim
      veniam,

      quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo.


      <SchemaDefinition schemaRef="#/components/schemas/link"
      exampleRef="#/components/examples/link" showReadOnly={true}
      showWriteOnly={true} />
  - name: Mandates
    description: >
      A Mandate is Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed
      do eiusmod

      tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim
      veniam,

      quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo.


      <SchemaDefinition schemaRef="#/components/schemas/mandate"
      exampleRef="#/components/examples/mandate" showReadOnly={true}
      showWriteOnly={true} />
  - name: Payment Methods
    description: >
      A Payment Method is Lorem ipsum dolor sit amet, consectetur adipisicing
      elit, sed do eiusmod

      tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim
      veniam,

      quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo.


      <SchemaDefinition schemaRef="#/components/schemas/payment_method"
      exampleRef="#/components/examples/payment_method" showReadOnly={true}
      showWriteOnly={true} />
  - name: Payments
    description: >
      A Payment is Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed
      do eiusmod

      tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim
      veniam,

      quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo

      consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse

      cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat
      non

      proident, sunt in culpa qui officia deserunt mollit anim id est laborum.


      | Status                 |
      Meaning                                                                           
      |

      | ---------------------- |
      ----------------------------------------------------------------------------------
      |

      | **pending_submission** | The payment has been issued, but still not
      submitted to the finnancial entity      |

      | **cancelled**          | The payment has been manually
      cancelled                                            |

      | **submitted**          | The payment is succesfully submitted and being
      processing in the finnancial entity |

      | **failed**             | Couldn't be submitted to the finnancial entity.
      There is an error in the request   |

      | **will_retry**         | The attempt failed, but the finnancial entity
      will make a new attempt              |

      | **approved**           | Submitted OK and
      approved                                                          |

      | **rejected**           | Submitted OK but couldn't make the
      collection                                      |

      | **charged_back**       | The payment has been returned to the
      customer                                      |


      <SchemaDefinition schemaRef="#/components/schemas/payment"
      exampleRef="#/components/examples/payment" showReadOnly={true}
      showWriteOnly={true} />
  - name: Sessions
    description: >
      A Session is Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed
      do eiusmod

      tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim
      veniam,

      quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo

      consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse

      cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat
      non

      proident, sunt in culpa qui officia deserunt mollit anim id est laborum.


      |  Status       |
      Meaning                                                                                 
      |

      | ------------- |
      ----------------------------------------------------------------------------------------
      |

      | **active**    | The subscription is active and generating
      payments                                       |

      | **paused**    | The subscription have been manually paused and won't
      generate payments until is resumed. |

      | **cancelled** | The subscription have been manually
      cancelled.                                           |

      | **finished**  | The subscription is completed: all the payments were
      collected succesfully.              |


      <SchemaDefinition schemaRef="#/components/schemas/subscription"
      exampleRef="#/components/examples/subscription" showReadOnly={true}
      showWriteOnly={true} />
  - name: Subscriptions
    description: >
      A Subscription is Lorem ipsum dolor sit amet, consectetur adipisicing
      elit, sed do eiusmod

      tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim
      veniam,

      quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo

      consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse

      cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat
      non

      proident, sunt in culpa qui officia deserunt mollit anim id est laborum.


      | Status        |
      Meaning                                                                                 
      |

      | ------------- |
      ----------------------------------------------------------------------------------------
      |

      | **active**    | The subscription is active and generating
      payments                                       |

      | **paused**    | The subscription have been manually paused and won't
      generate payments until is resumed. |

      | **cancelled** | The subscription have been manually
      cancelled.                                           |

      | **finished**  | The subscription is completed: all the payments were
      collected succ                      |


      <SchemaDefinition schemaRef="#/components/schemas/subscription"
      exampleRef="#/components/examples/subscription" showReadOnly={true}
      showWriteOnly={true} />
  - name: Webhooks
    description: >
      A Webhook is Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed
      do eiusmod

      tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim
      veniam,

      quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo

      consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse

      cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat
      non

      proident, sunt in culpa qui officia deserunt mollit anim id est laborum.


      <SchemaDefinition schemaRef="#/components/schemas/webhook"
      exampleRef="#/components/examples/webhook" showReadOnly={true}
      showWriteOnly={true} />
paths:
  /v1/customers:
    get:
      tags:
        - Customers
      summary: List all customers
      description: By default newest customers will be first on the list.
      operationId: GetCustomers
      parameters:
        - name: page
          in: query
          description: Cursor value to paginate response.
          required: false
          schema:
            type: number
          example: 1
        - name: limit
          in: query
          description: Number of records to return.
          required: false
          schema:
            type: number
          example: 20
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    type: array
                    items:
                      title: Customer
                      description: This object represents a customer of your organization.
                      type: object
                      properties: *ref_8
                  links:
                    title: Response Meta
                    description: Pagination metadata
                    type: object
                    properties: *ref_10
                  meta:
                    title: Response Meta
                    description: Pagination metadata
                    type: object
                    properties: *ref_11
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    title: Unauthorized
                    description: Unauthorized response
                    properties: *ref_12
    post:
      tags:
        - Customers
      summary: Create a customer
      description: Create a customer
      operationId: PostCustomer
      x-codegen-request-body-name: body
      requestBody:
        content:
          application/json:
            encoding:
              metadata:
                explode: true
                style: deepObject
            example:
              name: Pedro Lombardo
              email: pedrolombardo@email.com
              gateway_identifier: 1234
              identification_type: DNI
              identification_number: '237767265'
              metadata:
                some: value
            schema:
              additionalProperties: false
              type: object
              properties:
                name:
                  description: The customer's full name or business name.
                  type: string
                  example: Jorgelina Castro
                email:
                  description: The customer's email address.
                  type: string
                  example: asd@asd.com
                gateway_identifier:
                  description: The customer's reference for bank account statements.
                  type: integer
                  format: int32
                  example: 383473
                identification_type:
                  description: Customer's Document type.
                  oneOf: *ref_3
                  example: DNI
                identification_number:
                  description: Customer's Document ID number.
                  oneOf: *ref_2
                  example: 15.555.324
                metadata:
                  example: *ref_0
                  anyOf: *ref_1
                  description: >
                    Set of [key-value pairs](#section/Metadata) that you can
                    attach

                    to an object. This can be useful for storing additional

                    information about the object in a structured format.

                    All keys can be unset by posting `null` value to `metadata`.
        required: true
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    title: Customer
                    description: This object represents a customer of your organization.
                    properties: *ref_8
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              example:
                errors:
                  email:
                    - El email es inválido.
                message: The given data was invalid.
  /v1/customers/{id}:
    get:
      tags:
        - Customers
      summary: Retrieve a customer
      description: Retrieve a customer.
      operationId: CustomersGetCustomer
      parameters:
        - name: id
          in: path
          description: Customer ID.
          required: true
          schema:
            type: string
          example: CS9PL8eeo8aB
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    title: Customer
                    description: This object represents a customer of your organization.
                    properties: *ref_8
        '404':
          description: Object not found
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    title: Not Found
                    description: Not Found response
                    properties: *ref_13
    put:
      tags:
        - Customers
      summary: Update a customer
      description: Update a customer.
      operationId: CustomersUpdateCustomer
      x-codegen-request-body-name: body
      parameters:
        - name: id
          in: path
          description: Gateway ID.
          required: true
          schema:
            type: string
          example: CS9PL8eeo8aB
      requestBody:
        content:
          application/json:
            encoding:
              metadata:
                explode: true
                style: deepObject
            example:
              name: Pedro Lombardo
              email: pedrolombardo@email.com
            schema:
              additionalProperties: false
              type: object
              properties:
                name:
                  description: The customer's full name or business name.
                  type: string
                  example: Jorgelina Castro
                email:
                  description: The customer's email address.
                  type: string
                  example: asd@asd.com
                gateway_identifier:
                  description: The customer's reference for bank account statements.
                  type: integer
                  format: int32
                  example: 383473
                identification_type:
                  description: Customer's Document type.
                  oneOf: *ref_3
                  example: DNI
                identification_number:
                  description: Customer's Document ID number.
                  oneOf: *ref_2
                  example: 15.555.324
                metadata:
                  example: *ref_0
                  anyOf: *ref_1
                  description: >
                    Set of [key-value pairs](#section/Metadata) that you can
                    attach

                    to an object. This can be useful for storing additional

                    information about the object in a structured format.

                    All keys can be unset by posting `null` value to `metadata`.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    title: Customer
                    description: This object represents a customer of your organization.
                    properties: *ref_8
        '404':
          description: Object not found
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    title: Not Found
                    description: Not Found response
                    properties: *ref_13
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              example:
                errors:
                  email:
                    - El email es inválido.
                message: The given data was invalid.
  /v1/customers/{id}/actions/archive:
    post:
      tags:
        - Customers
      summary: Archive a customer
      description: Archive the customer and cancel subscriptions and payments in process.
      operationId: CustomersArchiveCustomer
      parameters:
        - name: id
          in: path
          description: Hash or external ID.
          required: true
          schema:
            type: string
          example: CS9PL8eeo8aB
      responses:
        '200':
          description: OK
          content:
            application/json:
              example:
                message: Archived successfully
        '404':
          description: Object not found
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    title: Not Found
                    description: Not Found response
                    properties: *ref_13
  /v1/customers/{id}/actions/restore:
    post:
      tags:
        - Customers
      summary: Restore a customer
      description: Immediately restore the customer.
      operationId: CustomersRestoreCustomer
      parameters:
        - name: id
          in: path
          description: Hash or external ID.
          required: true
          schema:
            type: string
          example: CS9PL8eeo8aB
      responses:
        '200':
          description: OK
          content:
            application/json:
              example:
                message: Restored successfully
        '404':
          description: Object not found
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    title: Not Found
                    description: Not Found response
                    properties: *ref_13
  /v1/events:
    get:
      tags:
        - Events
      summary: List events
      description: Returns a cursor-paginated list of your events.
      operationId: GetEvents
      parameters:
        - name: page
          in: query
          description: Cursor value to paginate response.
          required: false
          schema:
            type: number
          example: 10
        - name: limit
          in: query
          description: Number of records to return.
          required: false
          schema:
            type: number
          example: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              example:
                data:
                  - created_at: '2022-02-05T01:42:13-03:00'
                    data:
                      object:
                        created_at: '2022-02-05T01:42:13-03:00'
                        deleted_at: null
                        email: john@doe.com
                        gateway_identifier: 383473
                        id: CSnlZxyY3jwr
                        identification_number: null
                        identification_type: null
                        livemode: false
                        metadata: null
                        mobile_number: '5491154876503'
                        name: John Doe
                        updated_at: '2022-02-05T01:42:13-03:00'
                    delivered_at: '2022-02-11T20:11:38-03:00'
                    id: EVaX3JagwR6x
                    livemode: false
                    object: event
                    resource: customer
                    resource_id: CSnlZxyY3jwr
                    type: customer.created
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      title: Event
                      description: This object represents an event on your account.
                      type: object
                      properties: *ref_14
                  links:
                    title: Response Meta
                    description: Pagination metadata
                    type: object
                    properties: *ref_10
                  meta:
                    title: Response Meta
                    description: Pagination metadata
                    type: object
                    properties: *ref_11
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    title: Unauthorized
                    description: Unauthorized response
                    properties: *ref_12
  /v1/imports:
    get:
      tags:
        - Imports
      summary: List Imports
      description: Returns a list of all your imports.
      operationId: GetImports
      parameters:
        - name: page
          in: query
          description: Cursor value to paginate response.
          required: false
          schema:
            type: number
          example: '10'
        - name: limit
          in: query
          description: Number of records to return.
          required: false
          schema:
            type: number
          example: '1'
        - name: search
          in: query
          description: Search.
          required: false
          schema:
            type: string
          example: foo@bar.com
        - name: status
          in: query
          required: false
          description: >-
            Allowed values (`pending`, `ready`, `invalid`, `cancelled`,
            `processing`, `processed`).
          schema:
            type: string
          example: ready
      responses:
        '200':
          description: OK
          content:
            application/json:
              example:
                data:
                  - id: IMKd7zlGJAna
                    type: customers
                    status: invalid
                    livemode: false
                    rows_count: 2
                    valid_rows_count: 0
                    invalid_rows_count: 2
                    created_at: 2020-11-20T02:38:14-0300
                    updated_at: 2020-11-20T02:38:14-0300
                    invalid_at: 2020-11-20T02:38:14-0300
                  - id: IMGdOz9vReVZ
                    type: customers
                    status: ready
                    livemode: false
                    rows_count: 2
                    valid_rows_count: 2
                    invalid_rows_count: 0
                    created_at: 2020-11-20T02:37:48-0300
                    updated_at: 2020-11-20T02:37:49-0300
                    ready_at: 2020-11-20T02:37:49-0300
                links:
                  first: https://tucuota.com/api/imports?page=1
                  last: https://tucuota.com/api/imports?page=1
                meta:
                  current_page: 1
                  from: 1
                  last_page: 1
                  path: https://tucuota.com/api/imports
                  per_page: 25
                  to: 2
                  total: 2
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    title: Unauthorized
                    description: Unauthorized response
                    properties: *ref_12
    post:
      tags:
        - Imports
      summary: Create a import
      description: Create a import
      operationId: PostImport
      x-codegen-request-body-name: body
      requestBody:
        content:
          application/json:
            encoding:
              metadata:
                explode: true
                style: deepObject
            example:
              type: customers
              filename: a.csv
              original_filename: a.csv
              auto: true
            schema:
              additionalProperties: false
              type: object
              properties:
                type:
                  type: string
                  example: customers
                filename:
                  type: string
                  example: a.csv
                original_filename:
                  type: string
                  example: a.csv
                auto:
                  type: boolean
                  example: true
                metadata:
                  example: *ref_0
                  anyOf: *ref_1
                  description: >
                    Set of [key-value pairs](#section/Metadata) that you can
                    attach

                    to an object. This can be useful for storing additional

                    information about the object in a structured format.

                    All keys can be unset by posting `null` value to `metadata`.
        required: true
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    title: Import
                    description: This object represents an import of your account.
                    properties: *ref_15
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              example:
                errors:
                  email:
                    - El email es inválido.
                message: The given data was invalid.
  /v1/imports/{id}:
    get:
      tags:
        - Imports
      summary: Retrieve a import
      description: Retrieve a import.
      operationId: ImportsGetImport
      parameters:
        - name: id
          in: path
          description: Import ID.
          required: true
          schema:
            type: string
          example: IMKd7zlGJAna
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    title: Import
                    description: This object represents an import of your account.
                    properties: *ref_15
        '404':
          description: Object not found
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    title: Not Found
                    description: Not Found response
                    properties: *ref_13
  /v1/imports/{id}/rows:
    get:
      tags:
        - Imports
      summary: List Import Rows
      description: List Import Rows.
      operationId: ImportsListImportRows
      parameters:
        - name: id
          in: path
          description: Import ID.
          required: true
          schema:
            type: string
          example: IMKd7zlGJAna
        - name: page
          in: query
          description: Cursor value to paginate response.
          schema:
            type: number
          example: 1
        - name: limit
          in: query
          description: Number of records to return.
          schema:
            type: number
          example: 20
        - name: filter
          in: query
          description: |
            **Validation**. _Example: valid_. Allows values: valid, invalid.
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              example:
                data: []
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    title: Unauthorized
                    description: Unauthorized response
                    properties: *ref_12
  /v1/links:
    get:
      tags:
        - Links
      summary: List links
      description: Returns a list of all your links.
      operationId: LinksGetLinks
      parameters:
        - name: page
          in: query
          description: Cursor value to paginate response.
          required: false
          schema:
            type: number
          example: '10'
        - name: limit
          in: query
          description: Number of records to return.
          required: false
          schema:
            type: number
          example: '1'
        - name: search
          in: query
          description: Search.
          required: false
          schema:
            type: string
          example: foo@bar.com
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    type: array
                    items:
                      title: Link
                      description: >-
                        This object represents a public link of your
                        organization.
                      type: object
                      properties: *ref_16
                  links:
                    title: Response Meta
                    description: Pagination metadata
                    type: object
                    properties: *ref_10
                  meta:
                    title: Response Meta
                    description: Pagination metadata
                    type: object
                    properties: *ref_11
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    title: Unauthorized
                    description: Unauthorized response
                    properties: *ref_12
    post:
      tags:
        - Links
      summary: Create a link
      description: Create a link.
      operationId: LinksCreateLink
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    title: Link
                    description: This object represents a public link of your organization.
                    properties: *ref_16
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    title: Unauthorized
                    description: Unauthorized response
                    properties: *ref_12
  /v1/links/{id}:
    get:
      tags:
        - Links
      summary: Retrieve a link
      description: Retrieve a link.
      operationId: LinksGetLink
      parameters:
        - name: id
          in: path
          description: Link ID.
          required: true
          schema:
            type: string
          example: 43751655-7580-4bd7-8bad-3c54ed1c4abc
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    title: Link
                    description: This object represents a public link of your organization.
                    properties: *ref_16
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    title: Unauthorized
                    description: Unauthorized response
                    properties: *ref_12
    put:
      tags:
        - Links
      summary: Update a link
      description: Updates a link.
      operationId: LinksUpdateLink
      parameters:
        - name: id
          in: path
          description: Link ID.
          required: true
          schema:
            type: string
          example: 43751655-7580-4bd7-8bad-3c54ed1c4abc
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    title: Link
                    description: This object represents a public link of your organization.
                    properties: *ref_16
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    title: Unauthorized
                    description: Unauthorized response
                    properties: *ref_12
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              example:
                errors:
                  title:
                    - title is required.
                message: The given data was invalid.
  /v1/mandates:
    get:
      tags:
        - Mandates
      summary: List all mandates
      description: By default newest mandates will be first on the list.
      operationId: GetMandates
      parameters:
        - name: page
          in: query
          description: Cursor value to paginate response.
          schema:
            type: number
          example: '10'
        - name: limit
          in: query
          description: Number of records to return.
          schema:
            type: number
          example: '1'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    type: array
                    items:
                      title: Mandate
                      description: This object represents a mandate of your organization.
                      type: object
                      properties: *ref_17
                  links:
                    title: Response Meta
                    description: Pagination metadata
                    type: object
                    properties: *ref_10
                  meta:
                    title: Response Meta
                    description: Pagination metadata
                    type: object
                    properties: *ref_11
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    title: Unauthorized
                    description: Unauthorized response
                    properties: *ref_12
    post:
      tags:
        - Mandates
      summary: Create a mandate
      description: Create a mandate
      operationId: MandatesPostMandate
      x-codegen-request-body-name: body
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                customer_id:
                  type: string
                  description: |
                    [Customer ID](#tag/Customers).
                  example: CSgaZlLaPMZO.
                payment_method_number:
                  type: string
              example:
                customer_id: CS3oDRqz9wzB
                payment_method_number: '4024007127322104'
        required: false
      responses:
        '201':
          description: Created
          content:
            application/json:
              example:
                data:
                  id: 3d48eb80-a5a3-11ea-8439-bdd053d1a65b
                  object: mandate
                  livemode: false
                  status: active
                  created_at: 2020-06-03T11:05:11-0300
                  updated_at: 2020-06-03T11:05:11-0300
                  customer:
                    id: CS3oDRqz9wzB
                    object: customer
                    gateway_identifier: '1234'
                    name: John
                    email: john@doe.com
                    identification_type: ''
                    identification_number: ''
                    mobile_number: ''
                    livemode: false
                    updated_at: 2020-06-03T11:05:11-0300
                    created_at: 2020-06-03T11:05:11-0300
                  payment_method:
                    id: PMyYW9rJ3alN
                    object: payment_method
                    last_four_digits: '2104'
                    brand: visa-credito
                    bank: ''
                    livemode: false
                    updated_at: 2020-06-03T11:05:11-0300
                    created_at: 2020-06-03T11:05:11-0300
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    title: Unauthorized
                    description: Unauthorized response
                    properties: *ref_12
  /v1/mandates/{id}:
    get:
      tags:
        - Mandates
      summary: Retrieve a mandate
      description: Retrieve a mandate
      operationId: MandatesGetMandate
      parameters:
        - name: id
          in: path
          description: Mandate ID.
          required: true
          schema:
            type: string
          example: 85641980-8a28-11ea-a926-d51efa41533d
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    title: Mandate
                    description: This object represents a mandate of your organization.
                    properties: *ref_17
        '404':
          description: Object not found
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    title: Not Found
                    description: Not Found response
                    properties: *ref_13
  /v1/mandates/{id}/actions/revoke:
    post:
      tags:
        - Mandates
      summary: Revoke mandate
      description: >-
        This action will revoke the mandate and also cancel all the cancellable
        subscriptions attached to the same `customer` and `payment method`.
      operationId: MandatesRevokeMandate
      parameters:
        - name: id
          in: path
          description: Mandate ID.
          required: true
          schema:
            type: string
          example: 85641980-8a28-11ea-a926-d51efa41533d
      responses:
        '202':
          description: Mandate revoked
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    title: Unauthorized
                    description: Unauthorized response
                    properties: *ref_12
  /v1/mandates/{id}/actions/restore:
    post:
      tags:
        - Mandates
      summary: Restore mandate
      description: This action will restore the revoked mandate.
      operationId: MandatesRestoreMandate
      parameters:
        - name: id
          in: path
          description: Mandate ID.
          required: true
          schema:
            type: string
          example: 85641980-8a28-11ea-a926-d51efa41533d
      responses:
        '202':
          description: Mandate restored
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    title: Unauthorized
                    description: Unauthorized response
                    properties: *ref_12
  /v1/payment_methods:
    get:
      tags:
        - Payment Methods
      summary: List all payment methods
      description: Returns a list of payment methods.
      operationId: PaymentsMethodsGetPaymentMethods
      parameters:
        - name: page
          in: query
          required: false
          description: Cursor value to paginate response.
          schema:
            type: number
          example: 1
        - name: limit
          in: query
          required: false
          description: Number of records to return.
          schema:
            type: number
          example: 20
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties: *ref_9
                  links:
                    title: Response Meta
                    description: Pagination metadata
                    type: object
                    properties: *ref_10
                  meta:
                    title: Response Meta
                    description: Pagination metadata
                    type: object
                    properties: *ref_11
              example:
                data:
                  - type: card
                    card:
                      bank: Santander
                      brand: visa-debito
                      fingerprint: 782uy3h1983gy7sl
                      last_four_digits: '1481'
                    created_at: 2019-01-28T15:27:29-0300
                    id: PMVdYaYwkqOw
                    livemode: false
                    object: payment_method
                    updated_at: 2019-05-23T20:30:01-0300
                links:
                  first: https://api.tucuota.com/v1/payment_methods?page=1
                  last: https://tucuota.com/api/payment_methods?page=2
                  next: https://api.tucuota.com/v1/payment_methods?page=2
                meta:
                  current_page: 1
                  from: 1
                  last_page: 2
                  path: https://api.tucuota.com/v1/payment_methods
                  per_page: 25
                  to: 25
                  total: 34
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    title: Unauthorized
                    description: Unauthorized response
                    properties: *ref_12
    post:
      tags:
        - Payment Methods
      summary: Create a payment method
      description: Create a payment method
      operationId: PaymentsMethodsCreatePaymentMethod
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                card:
                  type: object
                  properties:
                    number:
                      type: string
                      description: Credit's card number.
                    expiration_year:
                      type: number
                      description: Credit's card expiration year.
                    expiration_month:
                      type: number
                      description: Credit's card expiration month.
              example:
                type: card
                card:
                  number: '4242424242424242'
                  expiration_year: 5
                  expiration_month: 2027
        required: false
      responses:
        '201':
          description: Payment Method Created
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    properties: *ref_9
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    title: Unauthorized
                    description: Unauthorized response
                    properties: *ref_12
  /v1/payment_methods/{id}:
    get:
      tags:
        - Payment Methods
      summary: Retrieve a payment method
      description: Retrieve a payment method.
      operationId: PaymentMethodsGetPaymentMethod
      parameters:
        - name: id
          in: path
          description: Payment method ID.
          required: true
          schema:
            type: string
          example: PMVA0W8y1aQO
      responses:
        '200':
          description: Retrieve a payment method
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    properties: *ref_9
        '404':
          description: Payment method not found
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    title: Not Found
                    description: Not Found response
                    properties: *ref_13
  /v1/payments:
    get:
      tags:
        - Payments
      summary: List payments
      description: Newest payments will be first on the list.
      operationId: PaymentsGetPayments
      parameters:
        - name: page
          in: query
          description: Cursor value to paginate response.
          required: false
          schema:
            type: number
          example: '10'
        - name: limit
          in: query
          description: Number of records to return.
          required: false
          schema:
            type: number
          example: '1'
        - name: search
          in: query
          description: Search.
          schema:
            type: string
          example: foo@bar.com
        - name: customer_id
          in: query
          description: Show only payment methods from a given customer.
          required: false
          schema:
            type: string
          example: CS9PL8eeo8aB
        - name: subscription_id
          in: query
          description: Show only payment methods from a given subscription.
          required: false
          schema:
            type: string
          example: SBmX1MrZ77Mwq3
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    type: array
                    items:
                      title: Subscription
                      description: >-
                        This object represents a subscription of your
                        organization.
                      type: object
                      properties: *ref_18
                  links:
                    title: Response Meta
                    description: Pagination metadata
                    type: object
                    properties: *ref_10
                  meta:
                    title: Response Meta
                    description: Pagination metadata
                    type: object
                    properties: *ref_11
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    title: Unauthorized
                    description: Unauthorized response
                    properties: *ref_12
    post:
      tags:
        - Payments
      summary: Create a payment
      description: Create a payment.
      x-codegen-request-body-name: body
      operationId: PaymentsCreatePayment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - amount
                - description
                - customer_id
                - payment_method_id
              properties:
                amount:
                  type: number
                  description: The amount of the payment.
                description:
                  type: string
                  description: The title of the payment.
                customer_id:
                  type: string
                  description: |
                    [Customer ID](#tag/Customers).
                  example: CSgaZlLaPMZO.
                payment_method_id:
                  type: string
                  description: >-
                    The [token of the card or cbu](#tag/PaymentMethods) for this
                    payment.
                charge_date:
                  type: string
                  format: date
                  description: >-
                    A future date on which the payment should be collected. If
                    not specified, the payment will be collected as soon as
                    possible.
                can_auto_retry_until:
                  type: string
                  format: date
                  description: The maximum date the payment could be retried automatically.
                auto_retries_max_attempts:
                  type: integer
                  description: >-
                    The maximum amount of times the payment could be retried
                    automatically.
                gateway_identifier:
                  type: string
                  description: Gateway identifier for your payment.
                metadata:
                  example: *ref_0
                  anyOf: *ref_1
                  description: >
                    Set of [key-value pairs](#section/Metadata) that you can
                    attach

                    to an object. This can be useful for storing additional

                    information about the object in a structured format.

                    All keys can be unset by posting `null` value to `metadata`.
              example:
                amount: 100
                description: Unique payment
                gateway_identifier: '001234'
                customer_id: CSr7Dg3LkDP2
                payment_method_number: '4024007127322104'
        required: false
      responses:
        '201':
          description: Payment created.
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    title: Unauthorized
                    description: Unauthorized response
                    properties: *ref_12
  /v1/payments/{id}:
    get:
      tags:
        - Payments
      summary: Retrieve a payment
      description: Retrieve a payment.
      operationId: PaymentsGetPayment
      parameters:
        - name: id
          in: path
          description: Payment ID.
          required: true
          schema:
            type: string
          example: PYdOz9bgVReV
      responses:
        '200':
          description: Retrieve a payment.
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
        '404':
          description: Payment not found
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    title: Not Found
                    description: Not Found response
                    properties: *ref_13
    put:
      tags:
        - Payments
      summary: Update a payment
      description: Update a payment.
      x-codegen-request-body-name: body
      operationId: PaymentsUpdatePayment
      parameters:
        - name: id
          in: path
          description: Payment ID.
          required: true
          schema:
            type: string
          example: PYdOz9bgVReV
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  description: The new amount of the payment.
                auto_retries_max_attempts:
                  type: integer
                  description: >-
                    The maximum amount of times the payment could be retried
                    automatically.
                can_auto_retry_until:
                  type: string
                  format: date
                  description: The maximum date the payment could be retried automatically.
                charge_date:
                  type: string
                  format: date
                  description: A future date on which the payment should be collected.
                description:
                  type: string
                  description: The new title of the payment.
                payment_method_id:
                  type: string
                  description: The token of the card or cbu for the payment.
                metadata:
                  example: *ref_0
                  anyOf: *ref_1
                  description: >
                    Set of [key-value pairs](#section/Metadata) that you can
                    attach

                    to an object. This can be useful for storing additional

                    information about the object in a structured format.

                    All keys can be unset by posting `null` value to `metadata`.
              example:
                description: New payment title
        required: true
      responses:
        '200':
          description: Payment updated
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    title: Unauthorized
                    description: Unauthorized response
                    properties: *ref_12
  /v1/payments/{id}/actions/cancel:
    post:
      tags:
        - Payments
      summary: Cancel payment
      description: Cancel payment.
      operationId: PaymentsCancelPayment
      parameters:
        - name: id
          in: path
          description: Payment ID.
          required: true
          schema:
            type: string
          example: PYdOz9bgVReV
      responses:
        '201':
          description: Created
          content:
            application/json:
              example:
                message: Cancelled successfully
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    title: Unauthorized
                    description: Unauthorized response
                    properties: *ref_12
  /v1/payments/{id}/actions/retry:
    post:
      tags:
        - Payments
      summary: Retry a payment
      description: Retry a payment.
      operationId: PaymentsRetryPayment
      parameters:
        - name: id
          in: path
          description: Payment ID.
          required: true
          schema:
            type: string
          example: PYdOz9bgVReV
      responses:
        '201':
          description: Created
          content:
            application/json:
              example:
                message: Retried successfully
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    title: Unauthorized
                    description: Unauthorized response
                    properties: *ref_12
  /v1/sessions:
    post:
      tags:
        - Sessions
      summary: Create a sesssion
      description: Create a session
      operationId: SessionsCreateSession
      x-codegen-request-body-name: body
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                kind:
                  type: string
                  description: One of payment, subscription or mandate.
                  enum:
                    - payment
                    - subscription
                    - mandate
                success_url:
                  type: string
                  description: >-
                    The uri on which your customer will be redirected after
                    completing the checkout.
                amount:
                  type: string
                  description: The amount of the payment or subscription.
                description:
                  type: string
                  description: The title of the payment or subscription.
                customer_id:
                  type: string
                  description: |
                    [Customer ID](#tag/Customers).
                  example: CSgaZlLaPMZO.
                customer_name:
                  type: string
                  description: >
                    Name of your customer. You can fill it or ask the customer
                    to fill this field in the checkout process.
                customer_email:
                  type: string
                  description: >
                    Email of your customer. You can fill it or ask the customer
                    to fill this field in the checkout process.
                editable_amount:
                  type: boolean
                  description: |
                    Allow the customer to set the amount, useful for donations.
                installments:
                  type: integer
                  description: >
                    Only for payments, quantity of payments on which the amount
                    will be splitted.
                max_installments:
                  type: integer
                  description: >
                    Only for payments, allow the customer to choose how many
                    installments can split the payment.
                interval_unit:
                  type: string
                  enum:
                    - weekly
                    - monthly
                    - yearly
                  description: >
                    Only for subscriptions, the unit of time between customer
                    charge dates. One of weekly, monthly or yearly.
                interval:
                  type: integer
                  description: >
                    Only for subscriptions, the number of interval_units between
                    customer charge dates. Must be greater than to 1. If
                    interval_unit is weekly and interval is 2, then the customer
                    will be charged every two weeks. Defaults to 1.
                day_of_month:
                  type: integer
                  description: >
                    Only for subscriptions, the day of month, from 1 to 28. Use
                    only if you need the subscription to start in a specyfic
                    date. In most cases this should be null, therefore TuCuota
                    will use the date of the moment when the user completes the
                    checkout.
                day_of_week:
                  type: integer
                  description: >
                    Only for subscriptions, the day of week number, from 0
                    (Sunday) to 6 (Saturday). Use only if you need the
                    subscription to start in a specyfic date. In most cases this
                    should be null, therefore TuCuota will use the date of the
                    moment when the user completes the checkout.
                metadata:
                  example: *ref_0
                  anyOf: *ref_1
                  description: >
                    Set of [key-value pairs](#section/Metadata) that you can
                    attach

                    to an object. This can be useful for storing additional

                    information about the object in a structured format.

                    All keys can be unset by posting `null` value to `metadata`.
                count:
                  type: integer
                  description: >
                    Only for subscriptions, the total number of payments that
                    should

                    be taken by this subscription. If not specified the
                    subscription

                    will continue until you cancel it.
                editable_count:
                  description: >
                    Only for subscriptions, allow the customer to set the
                    duration

                    of the subscriptions, useful for donations.
                  type: number
              example:
                kind: payment
                success_url: http://example.com/success
                amount: '200.50'
                description: Summer school
        required: false
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    title: Session
                    description: This object represents a session of your organization.
                    properties: *ref_19
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              example:
                errors:
                  email:
                    - El email es inválido.
                message: The given data was invalid.
  /v1/sessions/{id}:
    get:
      tags:
        - Sessions
      summary: Retrieve a session
      description: Retrieve a session
      operationId: SessionsGetSession
      parameters:
        - name: id
          in: path
          description: Session UUID.
          required: true
          schema:
            type: string
          example: 58fa2240-d996-11e9-a698-09ff9b98c35f
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    title: Session
                    description: This object represents a session of your organization.
                    properties: *ref_19
        '404':
          description: Session not found
          content:
            application/json:
              example:
                message: Session not found
  /v1/subscriptions:
    get:
      tags:
        - Subscriptions
      summary: List all subscriptions
      description: By default newest subscriptions will be first on the list.
      operationId: SubscriptionsGetSubscriptions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    type: array
                    items:
                      title: Subscription
                      description: >-
                        This object represents a subscription of your
                        organization.
                      type: object
                      properties: *ref_18
                  links:
                    title: Response Meta
                    description: Pagination metadata
                    type: object
                    properties: *ref_10
                  meta:
                    title: Response Meta
                    description: Pagination metadata
                    type: object
                    properties: *ref_11
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    title: Unauthorized
                    description: Unauthorized response
                    properties: *ref_12
    post:
      tags:
        - Subscriptions
      summary: Create a subscription
      description: Create a subscription
      operationId: SubscriptionsCreateSubscription
      requestBody:
        content:
          application/json:
            encoding:
              metadata:
                explode: true
                style: deepObject
            schema:
              required:
                - amount
                - customer_id
                - description
                - interval
                - interval_unit
              type: object
              properties:
                amount:
                  type: number
                  description: |
                    The amount of each payment of the subscription.
                description:
                  type: string
                  description: |
                    The title of each payment of the subscription.
                  maxLength: 255
                count:
                  type: number
                  description: >
                    The total number of payments that should be taken by this
                    subscription. If not specified the

                    subscription will continue until you cancel it.
                customer_id:
                  type: string
                  description: |
                    [Customer ID](#tag/Customers).
                  example: CSgaZlLaPMZO.
                payment_method_id:
                  type: string
                  description: >
                    The token of the card or cbu for each payment of the
                    subscription. This field is required if

                    payment_method_number is not given.
                start_date:
                  type: string
                  description: >-
                    A future date on which the first payment of the subscription
                    should be collected. If not specified, the first payment
                    will be collected as soon as possible.
                interval_unit:
                  type: string
                  description: >-
                    The unit of time between customer charge dates. One of
                    weekly, monthly or yearly. Example monthly
                interval:
                  type: number
                  description: >-
                    Number of interval_units between customer charge dates. Must
                    be greater than to 1. If interval_unit is weekly and
                    interval is 2, then the customer will be charged every two
                    weeks. Defaults to 1. Example 1
                day_of_month:
                  type: number
                  description: >-
                    Day of month, from 1 to 28. This field is required if
                    interval_unit is set to monthly. Defaults to 1.
                day_of_week:
                  type: number
                  description: >-
                    Day of week number, from 0 (Sunday) to 6 (Saturday). This
                    field is required if interval_unit is set to weekly.
                metadata:
                  example: *ref_0
                  anyOf: *ref_1
                  description: >
                    Set of [key-value pairs](#section/Metadata) that you can
                    attach

                    to an object. This can be useful for storing additional

                    information about the object in a structured format.

                    All keys can be unset by posting `null` value to `metadata`.
              example:
                amount: 100
                description: Some subscription description
                customer_id: CS9PL8eeo8aB
                payment_method_number: '4024007127322104'
                interval_unit: monthly
                day_of_month: 1
                metadata:
                  some: metadata
        required: false
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    title: Subscription
                    description: >-
                      This object represents a subscription of your
                      organization.
                    properties: *ref_18
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              example:
                errors:
                  email:
                    - El email es inválido.
                message: The given data was invalid.
  /v1/subscriptions/{id}:
    get:
      tags:
        - Subscriptions
      summary: Retrieve a subscription
      description: Retrieve a subscription.
      operationId: SubscriptionsGetSubscription
      parameters:
        - name: id
          in: path
          description: Subscription ID.
          required: true
          schema:
            type: string
          example: SBmX1MrZ77Mwq3
      responses:
        '200':
          description: Retrieve a subscription
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    title: Subscription
                    description: >-
                      This object represents a subscription of your
                      organization.
                    properties: *ref_18
        '404':
          description: Object not found
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    title: Not Found
                    description: Not Found response
                    properties: *ref_13
    put:
      tags:
        - Subscriptions
      summary: Update a subscription
      description: Update a subscription.
      operationId: SubscriptionsUpdateSubscription
      parameters:
        - name: id
          in: path
          description: Subscription ID.
          required: true
          schema:
            type: string
          example: SBmX1MrZ77Mwq3
      requestBody:
        content:
          application/json:
            encoding:
              metadata:
                explode: true
                style: deepObject
            schema:
              required:
                - amount
                - customer_id
                - description
                - interval
                - interval_unit
              type: object
              properties:
                amount:
                  type: number
                  description: |
                    The amount of each payment of the subscription.
                description:
                  type: string
                  description: |
                    The title of each payment of the subscription.
                  maxLength: 255
                count:
                  type: number
                  description: >
                    The total number of payments that should be taken by this
                    subscription. If not specified the

                    subscription will continue until you cancel it.
                customer_id:
                  type: string
                  description: |
                    [Customer ID](#tag/Customers).
                  example: CSgaZlLaPMZO.
                payment_method_id:
                  type: string
                  description: >
                    The token of the card or cbu for each payment of the
                    subscription. This field is required if

                    payment_method_number is not given.
                start_date:
                  type: string
                  description: >-
                    A future date on which the first payment of the subscription
                    should be collected. If not specified, the first payment
                    will be collected as soon as possible.
                interval_unit:
                  type: string
                  description: >-
                    The unit of time between customer charge dates. One of
                    weekly, monthly or yearly. Example monthly
                interval:
                  type: number
                  description: >-
                    Number of interval_units between customer charge dates. Must
                    be greater than to 1. If interval_unit is weekly and
                    interval is 2, then the customer will be charged every two
                    weeks. Defaults to 1. Example 1
                day_of_month:
                  type: number
                  description: >-
                    Day of month, from 1 to 28. This field is required if
                    interval_unit is set to monthly. Defaults to 1.
                day_of_week:
                  type: number
                  description: >-
                    Day of week number, from 0 (Sunday) to 6 (Saturday). This
                    field is required if interval_unit is set to weekly.
                metadata:
                  example: *ref_0
                  anyOf: *ref_1
                  description: >
                    Set of [key-value pairs](#section/Metadata) that you can
                    attach

                    to an object. This can be useful for storing additional

                    information about the object in a structured format.

                    All keys can be unset by posting `null` value to `metadata`.
              example:
                amount: 100
                description: Some subscription description
                customer_id: CS9PL8eeo8aB
                payment_method_number: '4024007127322104'
                interval_unit: monthly
                day_of_month: 1
                metadata:
                  some: metadata
        required: false
      responses:
        '200':
          description: Subscription updated successfuly.
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    title: Subscription
                    description: >-
                      This object represents a subscription of your
                      organization.
                    properties: *ref_18
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              example:
                errors:
                  email:
                    - El email es inválido.
                message: The given data was invalid.
  /v1/subscriptions/{id}/actions/pause:
    post:
      tags:
        - Subscriptions
      summary: Pause a subscription
      description: Pause a subscription.
      operationId: SubscriptionsPauseSubscription
      parameters:
        - name: id
          in: path
          description: Subscription ID.
          required: true
          schema:
            type: string
          example: SBmX1MrZ77Mwq3
      responses:
        '201':
          description: Subscription paused succesfully
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    title: Subscription
                    description: >-
                      This object represents a subscription of your
                      organization.
                    properties: *ref_18
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              example:
                message: Subscription cannot be paused.
  /v1/subscriptions/{id}/actions/resume:
    post:
      tags:
        - Subscriptions
      summary: Resume a subscription
      description: Resume a subscription.
      operationId: SubscriptionsResumeSubscription
      parameters:
        - name: id
          in: path
          description: Subscription ID.
          required: true
          schema:
            type: string
          example: SBmX1MrZ77Mwq3
      responses:
        '201':
          description: Resumed succesfully
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    title: Subscription
                    description: >-
                      This object represents a subscription of your
                      organization.
                    properties: *ref_18
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              example:
                errors:
                  amount:
                    - Amount cannot be changed.
                message: The given data was invalid.
  /v1/subscriptions/{id}/actions/cancel:
    post:
      tags:
        - Subscriptions
      summary: Cancel a subcription
      description: >
        This action cancels and archive the subscription. Also cancel the
        payments

        related to it.
      operationId: SubscriptionsCancelSubscription
      parameters:
        - name: id
          in: path
          description: Subscription ID.
          required: true
          schema:
            type: string
          example: SBmX1MrZ77Mwq3
      responses:
        '201':
          description: Subscription cancelled succesfully
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    title: Subscription
                    description: >-
                      This object represents a subscription of your
                      organization.
                    properties: *ref_18
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              example:
                message: Subscription cannot be cancelled.
  /v1/webhooks:
    get:
      tags:
        - Webhooks
      summary: List all webhooks
      description: Returns a list of your webhooks.
      operationId: WebhooksGetWebhooks
      parameters:
        - name: page
          in: query
          description: Cursor value to paginate response.
          schema:
            type: number
          example: '10'
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - data
                type: object
                properties:
                  data:
                    type: array
                    items:
                      title: Webhook
                      description: >-
                        You can configure [webhook
                        endpoints](https://tucuota.com/docs/webhooks/) via the
                        API to be

                        notified about events that happen in your TuCuota
                        account or connected

                        accounts.


                        Most users configure webhooks from [the
                        dashboard](https://dashboard.tucuota.com/webhooks),
                        which provides a user interface for registering and
                        testing your webhook endpoints.
                      type: object
                      properties: *ref_20
                      example: *ref_21
                  links:
                    title: Response Meta
                    description: Pagination metadata
                    type: object
                    properties: *ref_10
                  meta:
                    title: Response Meta
                    description: Pagination metadata
                    type: object
                    properties: *ref_11
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    title: Unauthorized
                    description: Unauthorized response
                    properties: *ref_12
    post:
      tags:
        - Webhooks
      summary: Create a webhook
      description: Create a webhook.
      operationId: WebhooksCreateWebhook
      x-codegen-request-body-name: body
      requestBody:
        content:
          application/json:
            encoding:
              enabled_events:
                explode: true
                style: deepObject
              metadata:
                explode: true
                style: deepObject
            example:
              url: https://my_domain/my_webhook_endpoint
            schema:
              additionalProperties: false
              properties:
                enabled_events:
                  description: >-
                    The list of events to enable for this endpoint. You may
                    specify `['*']` to enable all events, except those that
                    require explicit selection.
                  items:
                    enum:
                      - '*'
                      - customer.created
                      - customer.deleted
                    type: string
                  type: array
                metadata:
                  example: *ref_0
                  anyOf: *ref_1
                  description: >
                    Set of [key-value pairs](#section/Metadata) that you can
                    attach

                    to an object. This can be useful for storing additional

                    information about the object in a structured format.

                    All keys can be unset by posting `null` value to `metadata`.
                url:
                  description: The URL of the webhook endpoint.
                  type: string
              required:
                - url
              type: object
        required: true
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    title: Webhook
                    description: >-
                      You can configure [webhook
                      endpoints](https://tucuota.com/docs/webhooks/) via the API
                      to be

                      notified about events that happen in your TuCuota account
                      or connected

                      accounts.


                      Most users configure webhooks from [the
                      dashboard](https://dashboard.tucuota.com/webhooks), which
                      provides a user interface for registering and testing your
                      webhook endpoints.
                    properties: *ref_20
                    example: *ref_21
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              example:
                errors:
                  url:
                    - El formato del campo es inválido.
                message: The given data was invalid.
  /v1/webhooks/{id}:
    get:
      tags:
        - Webhooks
      summary: Retrieve a webhook
      description: Retrieves a webhook.
      operationId: WebhooksGetWebhook
      parameters:
        - name: id
          in: path
          description: Webhook ID.
          required: true
          schema:
            type: string
          example: WHq4VzyAzDgB
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    title: Webhook
                    description: >-
                      You can configure [webhook
                      endpoints](https://tucuota.com/docs/webhooks/) via the API
                      to be

                      notified about events that happen in your TuCuota account
                      or connected

                      accounts.


                      Most users configure webhooks from [the
                      dashboard](https://dashboard.tucuota.com/webhooks), which
                      provides a user interface for registering and testing your
                      webhook endpoints.
                    properties: *ref_20
                    example: *ref_21
          description: Successful response.
        '404':
          content:
            application/json:
              schema:
                title: Not Found
                description: Not Found response
                type: object
                properties: *ref_13
          description: Not Found
    put:
      tags:
        - Webhooks
      summary: Update a webhook
      description: Updates a webhook.
      operationId: WebhooksUpdateWebhook
      parameters:
        - name: id
          in: path
          description: Webhook ID.
          required: true
          schema:
            type: string
          example: WHq4VzyAzDgB
      x-codegen-request-body-name: body
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
              example:
                url: http://somesite.com
        required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    title: Webhook
                    description: >-
                      You can configure [webhook
                      endpoints](https://tucuota.com/docs/webhooks/) via the API
                      to be

                      notified about events that happen in your TuCuota account
                      or connected

                      accounts.


                      Most users configure webhooks from [the
                      dashboard](https://dashboard.tucuota.com/webhooks), which
                      provides a user interface for registering and testing your
                      webhook endpoints.
                    properties: *ref_20
                    example: *ref_21
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              example:
                errors:
                  url:
                    - El campo es obligatorio.
                message: The given data was invalid.
    delete:
      tags:
        - Webhooks
      summary: Delete a webhook
      description: Delete a webhook.
      operationId: WebhooksDeleteWebhook
      parameters:
        - name: id
          in: path
          description: Webhook ID.
          required: true
          schema:
            type: string
          example: WHq4VzyAzDgB
      responses:
        '201':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    title: Unauthorized
                    description: Unauthorized response
                    properties: *ref_12
