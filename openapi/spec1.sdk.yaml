{"openapi":"3.0.1","info":{"title":"TuCuota API","description":"## Endpoints and authentication\n\nThe base URLs for the TuCuota API is: `https://api.tucuota.com`.\n\nThe API is only available over HTTPS. Attempting to access the API over an unsecured HTTP connection will return a tls_required error.\n\n### Get an API key\n\nTo create new API keys please login and go to the [developers section](https:///dashboard.tucuota.com/developers) of the dashboard.\n\nFor each environment (live and test) yo'll find two types of API Keys:\n\n-   Publishable (`pk_...`): can be publicly-accessible in your web client-side code to tokenize payment information.\n-   Secret (`sk_...`): To be used on the server-side. Must be secret and stored securely in your application's code to call TuCuota APIs.\n\nTo authenticate you must provide the API key in an Authorization request header (using the Bearer authentication scheme) when making API requests.\n\n#### Example Authentication Header\n\n```\nAuthorization: Bearer sk_test_yE210wKyhcu8ygGajWt...\n```\n\nAll API requests must be made over HTTPS. Calls made over plain HTTP will fail. API requests without authentication will also fail.### Content types\n\nTuCuota API only supports `json`. Make sure to include the following header on your requests.\n\n#### Content-Type Header\n\n```\nContent-Type: \"application/json\"\n```\n### Idempotent Requests\n\nThe API supports idempotency for safely retrying requests without accidentally performing the same operation twice. This is useful when an API call is disrupted in transit and you do not receive a response. For example, if a request to create a payment does not respond due to a network connection error, you can retry the request with the same idempotency key to guarantee that no more than one charge is created.\n\nTo perform an idempotent request, provide an additional `Idempotency-Key: <key>` header to the request.\n\nIdempotency works by saving the resulting status code and body of the first request made for any given idempotency key, regardless of whether it succeeded or failed. Subsequent requests with the same key return the same result, including 500 errors.\n\nAn idempotency key is a unique value generated by the client which the server uses to recognize subsequent retries of the same request. How you create unique keys is up to you, but we suggest using V4 UUIDs, or another random string with enough entropy to avoid collisions.\n\nKeys are eligible to be removed from the system after they're at least 24 hours old, and a new request is generated if a key is reused after the original has been pruned. The idempotency layer compares incoming parameters to those of the original request and errors unless they're the same to prevent accidental misuse.\n\nResults are only saved if an API endpoint started executing. If incoming parameters failed validation, or the request conflicted with another that was executing concurrently, no idempotent result is saved because no API endpoint began execution. It is safe to retry these requests.\n\nAll `POST` requests accept idempotency keys. Sending idempotency keys in `GET` and `DELETE` requests has no effect and should be avoided, as these requests are idempotent by definition.\n## Webhooks\n\nTo start receiving webhooks, you’ll need to add webhook endpoints from your [Dashboard](/dashboard/developers).\n\n<blockquote>\n    Example webhook:\n</blockquote>\n\n```json\n{\n    \"id\": \"EVPYeJeyeJ7r\",\n    \"created_at\": \"2019-05-23T20:18:28-0300\",\n    \"data\": {\n        \"object\": {\n            \"id\": \"CS9PL8eeo8aB\",\n            \"paid\": false,\n            \"amount\": 1600,\n            \"status\": \"pending_submission\",\n            \"gateway\": \"GWd1e9nQwK7v\",\n            \"currency\": \"ARS\",\n            \"customer\": {\n                \"id\": \"CS9PL8eeo8aB\",\n                \"name\": \"Máximo Irizarry\",\n                \"email\": \"mirrizarry@paez.com\",\n                \"livemode\": true,\n                \"metadata\": [],\n                \"created_at\": \"2018-05-01T11:45:14-0300\",\n                \"updated_at\": \"2018-05-01T11:45:14-0300\",\n                \"gateway_identifier\": \"001234\",\n                \"mobile_number\": \"+5493812596655\",\n                \"identification_type\": \"\",\n                \"identification_number\": \"\"\n            },\n            \"livemode\": true,\n            \"metadata\": [],\n            \"retryable\": false,\n            \"created_at\": \"2018-05-01T11:45:14-0300\",\n            \"updated_at\": \"2018-05-01T11:45:14-0300\",\n            \"charge_date\": \"2019-05-15\",\n            \"description\": \"Pago extra\",\n            \"subscription\": null,\n            \"name\": \"Máximo Irizarry\",\n            \"email\": \"mirrizarry@paez.com\",\n            \"gateway_identifier\": \"456700\",\n            \"mobile_number\": \"+5493812596655\",\n            \"identification_type\": \"\",\n            \"identification_number\": \"\"\n        }\n    },\n    \"livemode\": true,\n    \"resource\": \"payment\",\n    \"resource_id\": \"PY6b3Rr6nRMo\",\n    \"type\": \"payment.retrying\"\n}\n```\n\nWhen an event occurs in your account, we’ll send it to every enabled webhook endpoint as a POST request.\n\n### Webhooks types\n\n-   `customer.created`\n-   `customer.disabled`\n-   `customer.restored`\n-   `customer.updated`\n-   `gateway.created`\n-   `gateway.disabled`\n-   `gateway.updated`\n-   `payment.cancelled`\n-   `payment.created`\n-   `payment.retrying`\n-   `payment.updated`\n-   `payment_method.automatically_updated`\n-   `payment_method.created`\n-   `payment_method.updated`\n-   `subscription.cancelled`\n-   `subscription.created`\n-   `subscription.finished`\n-   `subscription.paused`\n-   `subscription.resumed`\n-   `subscription.updated`\n-   `user.updated_available_brands`\n\n### Testing the webhooks in local environments\n\nYou can easy create test webhooks using https://webhook.site/ With that you will be able to see what we are sending to our API consumers.\n\nAlso, to start integrating the webhooks, your code will need to be accessible from the internet so TuCuota can reach it with HTTP requests. If you’re working locally, the easiest way to do this is with [ngrok](https://ngrok.com/).\n### Testing Card and CBU numbers\n\nIn sandbox mode the following test cards and CBUs can be used to create payments that produce specific responses useful for testing different scenarios.\n\n| Brand      | Number                 | Result     |\n| ---------- | ---------------------- | ---------- |\n| cbu        | 2859363672283668188432 | approved   |\n| cbu        | 2852656051819605126406 | rejected   |\n| cbu        | 2858814288841490615567 | failed     |\n| cbu        | 0110022831266917230013 | will_retry |\n| mastercard | 5447651834106668       | approved   |\n| mastercard | 5457948807868523       | rejected   |\n| mastercard | 5292525121482410       | failed     |\n| visa       | 4024007127322104       | approved   |\n| visa       | 4556854712355908       | rejected   |\n| visa       | 4485388690536078       | failed     |\n| amex       | 377539501632477        | approved   |\n| amex       | 341400508811411        | rejected   |\n| amex       | 372974912152697        | failed     |\n## Statuses reference\n\n### Payments statuses\n\n| Status               | Meaning                                                                            |\n| -------------------- | ---------------------------------------------------------------------------------- |\n| `pending_submission` | The payment has been issued, but still not submitted to the finnancial entity      |\n| `cancelled`          | The payment has been manually cancelled                                            |\n| `submitted`          | The payment is succesfully submitted and being processing in the finnancial entity |\n| `failed`             | Couldn't be submitted to the finnancial entity. There is an error in the request   |\n| `will_retry`         | The attempt failed, but the finnancial entity will make a new attempt              |\n| `approved`           | Submitted OK and approved                                                          |\n| `rejected`           | Submitted OK but couldn't make the collection                                      |\n| `charged_back`       | The payment has been returned to the customer                                      |\n\n### Subscriptions statuses\n\n| Status      | Meaning                                                                                  |\n| ----------- | ---------------------------------------------------------------------------------------- |\n| `active`    | The subscription is active and generating payments                                       |\n| `paused`    | The subscription have been manually paused and won't generate payments until is resumed. |\n| `cancelled` | The subscription have been manually cancelled.                                           |\n| `finished`  | The subscription is completed: all the payments were collected succ                      |\n### HTTP Methods\n\nThis API uses HTTP verbs (methods) as following:\n\n-   `GET` - _Read_ - used to **read** (or retrieve) a representation of a resource,\n-   `POST` - _Create_ - used to **create** new resources. In particular, it's used to create subordinate resources.\n-   `PUT` - _Update/Replace_ - used for **update** capabilities, PUT-ing to a known resource URI with the request body containing the newly-updated representation of the original resource. On successful request, replaces identified resource with the request body.\n-   `PATCH` - _Update/Modify_ - used for **modify** capabilities. The PATCH request only needs to contain the changes to the resource, not the complete resource.\n-   `DELETE` - _Delete_ - used to **delete** a resource identified by a URI.\n### Notational Conventions\n\nThe key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC2119](https://www.ietf.org/rfc/rfc2119).\n### Representation of Date and Time\n\nAll exchange of date and time-related data MUST be done according to ISO 8601 standard and stored in UTC.\n\nWhen returning date and time-related data `YYYY-MM-DDThh:mm:ss.SSSZ` format MUST be used.\n### Resource IDs\n\nThis API uses short non-sequential url-friendly unique ids. Every resource id MUST consists of 12 url-friendly characters: `A-Z`, `a-z`, `0-9`, `_` and `-`.\n\n#### Example\n\n`PY6b3Rr6nRMo`\n#### Filtering, Ordering, Pagination & Searching\n\n##### Filtering\n\nSome endpoints can be filtered by adding query parameters to the request. This is specified on each resource page.\n\n##### Pagination\n\nThis API uses the [Link header - RFC 5988](http://tools.ietf.org/html/rfc5988#page-6) to include pagination details.\n\nAn example of a Link header is described in [GitHub documentation](https://developer.github.com/guides/traversing-with-pagination/).\n\nBy default, each page contains `25` elements. It can be requested up to `100` elements per page adding the `limit` parameter. For example adding `?limit=100&page=2` will return the second page of `100` elements.\n### Status Codes and Errors\n\nThis API uses HTTP status codes to communicate with the API consumer.\n\n-   `200 OK` - Response to a successful GET, PUT, PATCH or DELETE.\n-   `201 Created` - Response to a POST that results in a creation.\n-   `204 No Content` - Response to a successful request that won't be returning a body (like a DELETE request).\n-   `400 Bad Request` - Malformed request; form validation errors.\n-   `401 Unauthorized` - When no or invalid authentication details are provided.\n-   `403 Forbidden` - When authentication succeeded but authenticated user doesn't have access to the resource.\n-   `404 Not Found` - When a non-existent resource is requested.\n-   `405 Method Not Allowed` - Method not allowed.\n-   `406 Not Acceptable` - Could not satisfy the request Accept header.\n-   `415 Unsupported Media Type` - Unsupported media type in request.\n\n#### Error response\n\nThis API returns both, machine-readable error codes and human-readable error messages in response body when an error is encountered.\n\n##### Example\n\n###### Validation Error\n\n```json\n{\n    \"message\": \"The given data was invalid.\",\n    \"errors\": {\n        \"organization_name\": [\"El campo debe tener algún valor.\"],\n        \"mobile_number\": [\"El campo debe tener algún valor.\"],\n        \"province\": [\"El campo debe tener algún valor.\"],\n        \"locality\": [\"El campo debe tener algún valor.\"],\n        \"address\": [\"El campo debe tener algún valor.\"]\n    }\n}\n```\n\n###### Generic Error\n\n```json\n{\n    \"message\": \"Unauthenticated.\"\n}\n```\n### Versioning\n\nThis API uses `Api-Version` header to identify requested version. Every **minor** version SHOULD be backward compatible. However, **major** versions MAY introduce _breaking changes_.\n\n`Api-Version: v1`\n\nThis header SHOULD be present in every request. If not, API MUST use the newest available major release.\n\nIf requested version is not available, API SHOULD try to fall back to the next available minor release.\n","termsOfService":"http://swagger.io/terms/","externalDocs":{"description":"TuCuota Docs.","url":"https://tucuota.com/docs"},"contact":{"name":"TuCuota Devs","email":"devs@tucuota.com","url":"https://tucuota.com/docs/api"},"x-logo":{"url":"https://tucuota.com/img/TuCuota.svg","altText":"TuCuota"},"version":"2022-02-14"},"servers":[{"url":"https://api.tucuota.com/"}],"components":{"securitySchemes":{"basicAuth":{"description":"Basic HTTP authentication. Allowed headers-- Authorization: Basic <api_key> | Authorization: Basic <base64 hash of `api_key:`>","scheme":"basic","type":"http"},"bearerAuth":{"bearerFormat":"auth-scheme","description":"Bearer HTTP authentication. Allowed headers-- Authorization: Bearer <api_key>","scheme":"bearer","type":"http"}}},"tags":[{"name":"Customers"},{"name":"Events"},{"name":"Gateways"},{"name":"Imports"},{"name":"Links"},{"name":"Payment Methods"},{"name":"Payments"},{"name":"Sessions","description":"A Checkout Session represents your customer's session as they pay for one-time purchases or subscriptions through our hosted Checkout page. We recommend creating a new Session each time your customer attempts to pay or subscribe. Once payment or subscription is successful, the Checkout Session will contain a reference to the resource created. You can create a Checkout Session on your server and pass its ID or redirect to the url, to let your customer to begin the Checkout. After completed your customer will be redirected to the success_url provided when creating the Session."},{"name":"Subscriptions"},{"name":"Mandates"},{"name":"User"},{"name":"Webhook"}],"paths":{"/v1/customers":{"get":{"tags":["Customers"],"summary":"List customers","description":"By default newest customers will be first on the list.","operationId":"List customers","x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url 'https://api.tucuota.com//v1/customers?page=SOME_NUMBER_VALUE&limit=SOME_NUMBER_VALUE&sort=SOME_STRING_VALUE&all=SOME_NUMBER_VALUE'"},{"lang":"Node + Native","source":"const http = require(\"https\");\n\nconst options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.tucuota.com\",\n  \"port\": null,\n  \"path\": \"//v1/customers?page=SOME_NUMBER_VALUE&limit=SOME_NUMBER_VALUE&sort=SOME_STRING_VALUE&all=SOME_NUMBER_VALUE\",\n  \"headers\": {}\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tucuota.com//v1/customers?page=SOME_NUMBER_VALUE&limit=SOME_NUMBER_VALUE&sort=SOME_STRING_VALUE&all=SOME_NUMBER_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.tucuota.com\")\n\nconn.request(\"GET\", \"//v1/customers?page=SOME_NUMBER_VALUE&limit=SOME_NUMBER_VALUE&sort=SOME_STRING_VALUE&all=SOME_NUMBER_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Java + Unirest","source":"HttpResponse<String> response = Unirest.get(\"https://api.tucuota.com//v1/customers?page=SOME_NUMBER_VALUE&limit=SOME_NUMBER_VALUE&sort=SOME_STRING_VALUE&all=SOME_NUMBER_VALUE\")\n  .asString();"}],"parameters":[{"name":"page","in":"query","description":"Cursor value to paginate response.","schema":{"type":"number"},"example":"10"},{"name":"limit","in":"query","description":"Number of records to return.","schema":{"type":"number"},"example":"1"},{"name":"sort","in":"query","description":"By default newest customers will be first on the list. Allowed values (`name`, `approved_payments_count`, `approved_payments_sum`, `rejected_payments_count`, `rejected_payments_sum`, `active_subscriptions_count`, `active_subscriptions_sum`, `cancelled_subscriptions_count`, `finished_subscriptions_count`, `paused_subscriptions_count`).","schema":{"type":"string"},"example":"name"},{"name":"all","in":"query","description":"Show archived customers.","schema":{"type":"number"},"example":"0"}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"required":["data"],"type":"object","properties":{"data":{"type":"array","items":{"required":["created_at","deleted_at","email","id","identification_number","identification_type","livemode","mobile_number","name","object","updated_at"],"type":"object","properties":{"object":{"type":"string","description":"Description."},"created_at":{"type":"string","description":"Description."},"deleted_at":{"type":"string","description":"Description."},"email":{"type":"string","description":"Description."},"gateway_identifier":{"type":"string","description":"Description."},"id":{"type":"string","description":"Description."},"identification_number":{"type":"string","description":"Description."},"identification_type":{"type":"string","description":"Description."},"livemode":{"type":"boolean","description":"Description."},"metadata":{"type":"object","properties":{"name":{"type":"string"}},"description":"Reference, additional information (max 3 keys, 100 chars each)."},"mobile_number":{"type":"string","description":"Description."},"name":{"type":"string","description":"Description."},"updated_at":{"type":"string","description":"Description."}}}},"links":{"type":"object","properties":{"first":{"type":"string"},"last":{"type":"string"},"next":{"type":"string"},"prev":{"type":"string"}}},"meta":{"required":["current_page","from","last_page","path","per_page","to","total"],"type":"object","properties":{"current_page":{"type":"number"},"from":{"type":"number"},"last_page":{"type":"number"},"path":{"type":"string"},"per_page":{"type":"number"},"to":{"type":"number"},"total":{"type":"number"}}}}},"example":{"data":[{"id":"CS9PL8eeo8aB","object":"customer","gateway_identifier":"001234","name":"Heroku","email":"heroku@gmail.com","identification_type":"","identification_number":"","mobile_number":"","metadata":[],"livemode":false,"updated_at":"2019-05-11T10:16:43-0300","created_at":"2019-05-11T10:16:43-0300","approved_payments_count":0,"approved_payments_sum":0,"rejected_payments_count":0,"rejected_payments_sum":0,"active_subscriptions_count":0,"active_subscriptions_sum":0,"paused_subscriptions_count":0,"cancelled_subscriptions_count":0,"finished_subscriptions_count":0}],"links":{"first":"https://tucuota.com/api/customers?page=1","last":"https://tucuota.com/api/customers?page=1"},"meta":{"current_page":1,"from":1,"last_page":1,"path":"https://tucuota.com/api/customers","per_page":25,"to":7,"total":7}}}}}}},"post":{"tags":["Customers"],"summary":"Create a customer","description":"#### Body Parameters\n\n|                         |                  |                                                                 |\n| ----------------------- | ---------------- | --------------------------------------------------------------- |\n| `gateway_identifier`    | string, optional | Gateway identifier                                              |\n| `name`                  | string, optional | Name of your customer                                           |\n| `email`                 | string, optional | Email of your customer                                          |\n| `identification_type`   | string, optional | Kind of identification Example: DNI                             |\n| `identification_number` | string, optional | identification. Example: 31.022.123                             |\n| `mobile_number`         | string, optional | Complete mobile phone number Example: +54 351 425 5666          |\n| `metadata`              | array, optional  | Reference, additional information (max 3 keys, 100 chars each). |","operationId":"Create a customer","requestBody":{"content":{"*/*":{"schema":{"type":"object","properties":{"name":{"type":"string"},"email":{"type":"string"},"gateway_identifier":{"type":"string"},"identification_type":{"type":"string"},"identification_number":{"type":"number"}},"example":{"name":"Pedro Lombardo","email":"pedrolombardo@email.com","gateway_identifier":"001234","identification_type":"DNI","identification_number":237767265}}}},"required":false},"responses":{"200":{"description":"OK","content":{"application/json":{"example":{"data":{"id":"CS6awXyY4DRn","object":"customer","gateway_identifier":"001234","name":"Pedro Lombardo","email":"pedrolombardo@email.com","identification_type":"DNI","identification_number":"237767265","mobile_number":"","livemode":false,"updated_at":"2020-08-09T22:46:49-0300","created_at":"2020-08-09T22:46:49-0300"}}}}}},"x-codegen-request-body-name":"body","x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request POST \\\n  --url https://api.tucuota.com//v1/customers \\\n  --header 'content-type: */*'"},{"lang":"Node + Native","source":"const http = require(\"https\");\n\nconst options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.tucuota.com\",\n  \"port\": null,\n  \"path\": \"//v1/customers\",\n  \"headers\": {\n    \"content-type\": \"*/*\"\n  }\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tucuota.com//v1/customers\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => [\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.tucuota.com\")\n\nheaders = { 'content-type': \"*/*\" }\n\nconn.request(\"POST\", \"//v1/customers\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Java + Unirest","source":"HttpResponse<String> response = Unirest.post(\"https://api.tucuota.com//v1/customers\")\n  .header(\"content-type\", \"*/*\")\n  .asString();"}]}},"/v1/customers/{id}":{"get":{"tags":["Customers"],"summary":"Show","operationId":"Show","parameters":[{"name":"id","in":"path","description":"Customer ID.","required":true,"schema":{"type":"string"},"example":"CS9PL8eeo8aB"}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"data":{"required":["created_at","deleted_at","email","id","identification_number","identification_type","livemode","mobile_number","name","object","updated_at"],"type":"object","properties":{"object":{"type":"string","description":"Description."},"created_at":{"type":"string","description":"Description."},"deleted_at":{"type":"string","description":"Description."},"email":{"type":"string","description":"Description."},"gateway_identifier":{"type":"string","description":"Description."},"id":{"type":"string","description":"Description."},"identification_number":{"type":"string","description":"Description."},"identification_type":{"type":"string","description":"Description."},"livemode":{"type":"boolean","description":"Description."},"metadata":{"type":"object","properties":{"name":{"type":"string"}},"description":"Reference, additional information (max 3 keys, 100 chars each)."},"mobile_number":{"type":"string","description":"Description."},"name":{"type":"string","description":"Description."},"updated_at":{"type":"string","description":"Description."}}}}},"example":{"data":{"created_at":"2019-05-11T10:16:43-0300","email":"heroku@gmail.com","gateway_identifier":"001234","id":"CS9PL8eeo8aB","identification_number":"","identification_type":"","livemode":false,"metadata":[],"mobile_number":"","name":"Heroku","object":"customer","updated_at":"2019-05-11T10:16:43-0300"}}}}}},"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url https://api.tucuota.com//v1/customers/CS9PL8eeo8aB"},{"lang":"Node + Native","source":"const http = require(\"https\");\n\nconst options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.tucuota.com\",\n  \"port\": null,\n  \"path\": \"//v1/customers/CS9PL8eeo8aB\",\n  \"headers\": {}\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tucuota.com//v1/customers/CS9PL8eeo8aB\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.tucuota.com\")\n\nconn.request(\"GET\", \"//v1/customers/CS9PL8eeo8aB\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Java + Unirest","source":"HttpResponse<String> response = Unirest.get(\"https://api.tucuota.com//v1/customers/CS9PL8eeo8aB\")\n  .asString();"}]},"put":{"tags":["Customers"],"summary":"Update a customer","description":"#### Body Parameters\n\n|                         |                  |                                                                |\n| ----------------------- | ---------------- | -------------------------------------------------------------- |\n| `name`                  | string, optional | Name of the customer                                           |\n| `email`                 | string, optional | Email                                                          |\n| `identification_type`   | string, optional | Kind of identification                                         |\n| `identification_number` | string, optional | Kind of identification                                         |\n| `mobile_number`         | string, optional | Complete mobile phone number                                   |\n| `metadata`              | array, optional  | Reference, additional information (max 3 keys, 100 chars each) |","operationId":"Update a customer","parameters":[{"name":"id","in":"path","description":"Gateway ID.","required":true,"schema":{"type":"string"},"example":"CS9PL8eeo8aB"}],"requestBody":{"content":{"*/*":{"schema":{"required":["created_at","deleted_at","email","id","identification_number","identification_type","livemode","mobile_number","name","updated_at"],"type":"object","properties":{"created_at":{"type":"string","description":"Description."},"deleted_at":{"type":"string","description":"Description."},"email":{"type":"string","description":"Description."},"gateway_identifier":{"type":"string","description":"Description."},"id":{"type":"string","description":"Description."},"identification_number":{"type":"string","description":"Description."},"identification_type":{"type":"string","description":"Description."},"livemode":{"type":"boolean","description":"Description."},"metadata":{"type":"object","properties":{"name":{"type":"string"}},"description":"Reference, additional information (max 3 keys, 100 chars each)."},"mobile_number":{"type":"string","description":"Description."},"name":{"type":"string","description":"Description."},"updated_at":{"type":"string","description":"Description."}},"example":{"created_at":"2019-05-11T10:16:43-0300","deleted_at":"2019-05-11T10:16:43-0300","email":"heroku@gmail.com","gateway_identifier":"001234","id":"CS9PL8eeo8aB","identification_number":"12312312","identification_type":"DNI","livemode":false,"metadata":{"name":"John Doe"},"mobile_number":543816370806,"name":"Juan Pérez","updated_at":"2019-05-11T10:16:43-0300"}}}},"required":false},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"data":{"required":["created_at","deleted_at","email","id","identification_number","identification_type","livemode","mobile_number","name","object","updated_at"],"type":"object","properties":{"object":{"type":"string","description":"Description."},"created_at":{"type":"string","description":"Description."},"deleted_at":{"type":"string","description":"Description."},"email":{"type":"string","description":"Description."},"gateway_identifier":{"type":"string","description":"Description."},"id":{"type":"string","description":"Description."},"identification_number":{"type":"string","description":"Description."},"identification_type":{"type":"string","description":"Description."},"livemode":{"type":"boolean","description":"Description."},"metadata":{"type":"object","properties":{"name":{"type":"string"}},"description":"Reference, additional information (max 3 keys, 100 chars each)."},"mobile_number":{"type":"string","description":"Description."},"name":{"type":"string","description":"Description."},"updated_at":{"type":"string","description":"Description."}}}}},"example":{"data":{"object":"customer","created_at":"2019-05-11T10:16:43-0300","deleted_at":"2019-05-11T10:16:43-0300","email":"heroku@gmail.com","gateway_identifier":"001234","id":"CS9PL8eeo8aB","identification_number":"12312312","identification_type":"DNI","livemode":false,"metadata":{"name":"John Doe"},"mobile_number":543816370806,"name":"Juan Pérez","updated_at":"2019-05-11T10:16:43-0300"}}}}}},"x-codegen-request-body-name":"body","x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request PUT \\\n  --url https://api.tucuota.com//v1/customers/CS9PL8eeo8aB \\\n  --header 'content-type: */*'"},{"lang":"Node + Native","source":"const http = require(\"https\");\n\nconst options = {\n  \"method\": \"PUT\",\n  \"hostname\": \"api.tucuota.com\",\n  \"port\": null,\n  \"path\": \"//v1/customers/CS9PL8eeo8aB\",\n  \"headers\": {\n    \"content-type\": \"*/*\"\n  }\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tucuota.com//v1/customers/CS9PL8eeo8aB\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PUT\",\n  CURLOPT_HTTPHEADER => [\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.tucuota.com\")\n\nheaders = { 'content-type': \"*/*\" }\n\nconn.request(\"PUT\", \"//v1/customers/CS9PL8eeo8aB\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Java + Unirest","source":"HttpResponse<String> response = Unirest.put(\"https://api.tucuota.com//v1/customers/CS9PL8eeo8aB\")\n  .header(\"content-type\", \"*/*\")\n  .asString();"}]}},"/v1/customers/{id}/actions/archive":{"post":{"tags":["Customers"],"summary":"Archive a customer","description":"Archive the customer and cancel subscriptions and payments in process.","operationId":"Archive a customer","parameters":[{"name":"id","in":"path","description":"Hash or external ID.","required":true,"schema":{"type":"string"},"example":"CS9PL8eeo8aB"}],"responses":{"200":{"description":"OK","content":{"application/json":{"example":{"message":"Archived successfully"}}}}},"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request POST \\\n  --url https://api.tucuota.com//v1/customers/CS9PL8eeo8aB/actions/archive"},{"lang":"Node + Native","source":"const http = require(\"https\");\n\nconst options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.tucuota.com\",\n  \"port\": null,\n  \"path\": \"//v1/customers/CS9PL8eeo8aB/actions/archive\",\n  \"headers\": {}\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tucuota.com//v1/customers/CS9PL8eeo8aB/actions/archive\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.tucuota.com\")\n\nconn.request(\"POST\", \"//v1/customers/CS9PL8eeo8aB/actions/archive\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Java + Unirest","source":"HttpResponse<String> response = Unirest.post(\"https://api.tucuota.com//v1/customers/CS9PL8eeo8aB/actions/archive\")\n  .asString();"}]}},"/v1/customers/{id}/actions/restore":{"post":{"tags":["Customers"],"summary":"Restore a customer","description":"Immediately restore the customer.","operationId":"Restore a customer","parameters":[{"name":"id","in":"path","description":"Hash or external ID.","required":true,"schema":{"type":"string"},"example":"CS9PL8eeo8aB"}],"responses":{"200":{"description":"OK","content":{"application/json":{"example":{"message":"Restored successfully"}}}}},"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request POST \\\n  --url https://api.tucuota.com//v1/customers/CS9PL8eeo8aB/actions/restore"},{"lang":"Node + Native","source":"const http = require(\"https\");\n\nconst options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.tucuota.com\",\n  \"port\": null,\n  \"path\": \"//v1/customers/CS9PL8eeo8aB/actions/restore\",\n  \"headers\": {}\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tucuota.com//v1/customers/CS9PL8eeo8aB/actions/restore\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.tucuota.com\")\n\nconn.request(\"POST\", \"//v1/customers/CS9PL8eeo8aB/actions/restore\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Java + Unirest","source":"HttpResponse<String> response = Unirest.post(\"https://api.tucuota.com//v1/customers/CS9PL8eeo8aB/actions/restore\")\n  .asString();"}]}},"/v1/events":{"get":{"tags":["Events"],"summary":"List events","description":"Returns a cursor-paginated list of your events.","operationId":"List events","parameters":[{"name":"page","in":"query","description":"Cursor value to paginate response.","schema":{"type":"number"},"example":"10"},{"name":"limit","in":"query","description":"Number of records to return.","schema":{"type":"number"},"example":"1"},{"name":"search","in":"query","description":"Search.","schema":{"type":"string"},"example":"foo@bar.com"}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"required":["data"],"type":"object","properties":{"data":{"type":"array","items":{"required":["created_at","data","delivered_at","id","livemode","object","resource","resource_id","type"],"type":"object","properties":{"id":{"type":"string","description":"Event ID."},"object":{"type":"string"},"created_at":{"type":"string","description":"Description."},"data":{"type":"object","properties":{"object":{"required":["created_at","deleted_at","email","id","identification_number","identification_type","livemode","mobile_number","name","object","updated_at"],"type":"object","properties":{"object":{"type":"string","description":"Description."},"created_at":{"type":"string","description":"Description."},"deleted_at":{"type":"string","description":"Description."},"email":{"type":"string","description":"Description."},"gateway_identifier":{"type":"string","description":"Description."},"id":{"type":"string","description":"Description."},"identification_number":{"type":"string","description":"Description."},"identification_type":{"type":"string","description":"Description."},"livemode":{"type":"boolean","description":"Description."},"metadata":{"type":"object","properties":{"name":{"type":"string"}},"description":"Reference, additional information (max 3 keys, 100 chars each)."},"mobile_number":{"type":"string","description":"Description."},"name":{"type":"string","description":"Description."},"updated_at":{"type":"string","description":"Description."}}}},"description":"Event object."},"delivered_at":{"type":"string","description":"Description."},"livemode":{"type":"boolean","description":"Description."},"resource":{"type":"string"},"resource_id":{"type":"string"},"type":{"type":"string"}}}},"links":{"type":"object","properties":{"first":{"type":"string"},"last":{"type":"string"},"next":{"type":"string"},"prev":{"type":"string"}}},"meta":{"required":["current_page","from","last_page","path","per_page","to","total"],"type":"object","properties":{"current_page":{"type":"number"},"from":{"type":"number"},"last_page":{"type":"number"},"path":{"type":"string"},"per_page":{"type":"number"},"to":{"type":"number"},"total":{"type":"number"}}}}},"example":{"data":[{"id":"EVBPkWovwk0y","object":"event","created_at":"2019-09-16T21:41:14-0300","data":{"object":{"id":"PY4VzyoavkDg","paid":false,"amount":200,"object":"payment","status":"cancelled","gateway":"GWd1e9nQwK7v","currency":"ARS","customer":{"id":"CS9PL8eeo8aB","name":"3","email":"sergchain@gmail.com","object":"customer","livemode":true,"metadata":[],"created_at":"2019-09-16T21:37:23-0300","updated_at":"2019-09-16T21:37:23-0300","gateway_identifier":"3","mobile_number":"","identification_type":"","identification_number":""},"livemode":true,"metadata":[],"retryable":true,"created_at":"2019-09-16T21:37:24-0300","updated_at":"2019-09-16T21:41:13-0300","charge_date":"2019-09-16T00:00:00.000Z","description":"aporte","payment_method":{"id":"PMloarXPKk86","bank":"","brand":"visa-credito","object":"payment_method","livemode":true,"created_at":"2019-09-16T21:37:24-0300","updated_at":"2019-09-16T21:37:24-0300","last_four_digits":"8892"},"updated_status":"2019-09-16T00:00:00.000Z","response_message":""}},"delivered_at":"2019-09-16T21:41:14-0300","livemode":false,"resource":"payment","resource_id":"PY4VzyoavkDg","type":"payment.cancelled"}],"links":{"first":"https://tucuota.com/api/events?page=1","last":"https://tucuota.com/api/events?page=15","next":"https://tucuota.com/api/events?page=2"},"meta":{"current_page":1,"from":1,"last_page":15,"path":"https://tucuota.com/api/events","per_page":25,"to":25,"total":354}}}}}},"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url 'https://api.tucuota.com//v1/events?page=SOME_NUMBER_VALUE&limit=SOME_NUMBER_VALUE&search=SOME_STRING_VALUE'"},{"lang":"Node + Native","source":"const http = require(\"https\");\n\nconst options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.tucuota.com\",\n  \"port\": null,\n  \"path\": \"//v1/events?page=SOME_NUMBER_VALUE&limit=SOME_NUMBER_VALUE&search=SOME_STRING_VALUE\",\n  \"headers\": {}\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tucuota.com//v1/events?page=SOME_NUMBER_VALUE&limit=SOME_NUMBER_VALUE&search=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.tucuota.com\")\n\nconn.request(\"GET\", \"//v1/events?page=SOME_NUMBER_VALUE&limit=SOME_NUMBER_VALUE&search=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Java + Unirest","source":"HttpResponse<String> response = Unirest.get(\"https://api.tucuota.com//v1/events?page=SOME_NUMBER_VALUE&limit=SOME_NUMBER_VALUE&search=SOME_STRING_VALUE\")\n  .asString();"}]}},"/v1/gateways":{"get":{"tags":["Gateways"],"summary":"List gateways","operationId":"List gateways","parameters":[{"name":"page","in":"query","description":"Cursor value to paginate response.","schema":{"type":"number"},"example":"10"},{"name":"limit","in":"query","description":"Number of records to return.","schema":{"type":"number"},"example":"1"}],"responses":{"200":{"description":"-   Attributes + data: (array, fixed-type, required) + webhook (Gateway Full) + links (object) + meta (object)","content":{"application/json":{"example":{"data":[{"id":"GWd1e9nQwK7v","object":"gateway","gatewaykind":"visaD","number":3751484,"username":"fernandodelperal@gmail.com","disabled":false,"brand_list":[],"livemode":false,"updated_at":"2019-03-19T13:32:18-0300","created_at":"2019-01-28T15:25:38-0300"}],"links":{"first":"https://tucuota.com/api/gateways?page=1","last":"https://tucuota.com/api/gateways?page=1"},"meta":{"current_page":1,"from":1,"last_page":1,"path":"https://tucuota.com/api/gateways","per_page":25,"to":4,"total":4}}}}}},"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url 'https://api.tucuota.com//v1/gateways?page=SOME_NUMBER_VALUE&limit=SOME_NUMBER_VALUE'"},{"lang":"Node + Native","source":"const http = require(\"https\");\n\nconst options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.tucuota.com\",\n  \"port\": null,\n  \"path\": \"//v1/gateways?page=SOME_NUMBER_VALUE&limit=SOME_NUMBER_VALUE\",\n  \"headers\": {}\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tucuota.com//v1/gateways?page=SOME_NUMBER_VALUE&limit=SOME_NUMBER_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.tucuota.com\")\n\nconn.request(\"GET\", \"//v1/gateways?page=SOME_NUMBER_VALUE&limit=SOME_NUMBER_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Java + Unirest","source":"HttpResponse<String> response = Unirest.get(\"https://api.tucuota.com//v1/gateways?page=SOME_NUMBER_VALUE&limit=SOME_NUMBER_VALUE\")\n  .asString();"}]},"post":{"tags":["Gateways"],"summary":"Create a gateway","operationId":"Create a gateway","parameters":[{"name":"page","in":"query","description":"Cursor value to paginate response.","schema":{"type":"number"},"example":"10"}],"responses":{"200":{"description":"OK","content":{}}},"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request POST \\\n  --url 'https://api.tucuota.com//v1/gateways?page=SOME_NUMBER_VALUE'"},{"lang":"Node + Native","source":"const http = require(\"https\");\n\nconst options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.tucuota.com\",\n  \"port\": null,\n  \"path\": \"//v1/gateways?page=SOME_NUMBER_VALUE\",\n  \"headers\": {}\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tucuota.com//v1/gateways?page=SOME_NUMBER_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.tucuota.com\")\n\nconn.request(\"POST\", \"//v1/gateways?page=SOME_NUMBER_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Java + Unirest","source":"HttpResponse<String> response = Unirest.post(\"https://api.tucuota.com//v1/gateways?page=SOME_NUMBER_VALUE\")\n  .asString();"}]}},"/v1/gateways/{id}":{"get":{"tags":["Gateways"],"summary":"Show","operationId":"Show","parameters":[{"name":"id","in":"path","description":"Gateway ID.","required":true,"schema":{"type":"string"},"example":"GWd1e9nQwK7v"}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"data":{"required":["brand_list","code_length","created_at","disabled","gatewaykind","id","livemode","number","number_bank_retries","object","updated_at","username"],"type":"object","properties":{"id":{"type":"string","description":"Description."},"object":{"type":"string","description":"Description."},"gatewaykind":{"type":"string","description":"Description."},"number":{"type":"string","description":"Description."},"username":{"type":"string","description":"Description."},"number_bank_retries":{"type":"string","description":"Description."},"code_length":{"type":"string","description":"Description."},"disabled":{"type":"string","description":"Description."},"brand_list":{"type":"string","description":"Description."},"livemode":{"type":"string","description":"Description."},"updated_at":{"type":"string","description":"Description."},"created_at":{"type":"string","description":"Description."}}}}},"example":{"data":{"id":"GWd1e9nQwK7v","object":"gateway","gatewaykind":"naranja","number":10012341234,"username":"fernandodelperal@gmail.com","disabled":false,"brand_list":["naranja"],"livemode":false,"updated_at":"2019-07-16T22:41:43-0300","created_at":"2019-07-16T22:41:43-0300"}}}}}},"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url https://api.tucuota.com//v1/gateways/GWd1e9nQwK7v"},{"lang":"Node + Native","source":"const http = require(\"https\");\n\nconst options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.tucuota.com\",\n  \"port\": null,\n  \"path\": \"//v1/gateways/GWd1e9nQwK7v\",\n  \"headers\": {}\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tucuota.com//v1/gateways/GWd1e9nQwK7v\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.tucuota.com\")\n\nconn.request(\"GET\", \"//v1/gateways/GWd1e9nQwK7v\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Java + Unirest","source":"HttpResponse<String> response = Unirest.get(\"https://api.tucuota.com//v1/gateways/GWd1e9nQwK7v\")\n  .asString();"}]},"post":{"tags":["Gateways"],"summary":"Update","operationId":"Update","parameters":[{"name":"id","in":"path","description":"Gateway ID.","required":true,"schema":{"type":"string"},"example":"GWd1e9nQwK7v"}],"responses":{"200":{"description":"OK","content":{}}},"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request POST \\\n  --url https://api.tucuota.com//v1/gateways/GWd1e9nQwK7v"},{"lang":"Node + Native","source":"const http = require(\"https\");\n\nconst options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.tucuota.com\",\n  \"port\": null,\n  \"path\": \"//v1/gateways/GWd1e9nQwK7v\",\n  \"headers\": {}\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tucuota.com//v1/gateways/GWd1e9nQwK7v\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.tucuota.com\")\n\nconn.request(\"POST\", \"//v1/gateways/GWd1e9nQwK7v\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Java + Unirest","source":"HttpResponse<String> response = Unirest.post(\"https://api.tucuota.com//v1/gateways/GWd1e9nQwK7v\")\n  .asString();"}]}},"/v1/gateways/{id}/actions/disable":{"post":{"tags":["Gateways"],"summary":"Disable a gateway","operationId":"Disable a gateway","parameters":[{"name":"id","in":"path","description":"Gateway ID.","required":true,"schema":{"type":"string"},"example":"GWd1e9nQwK7v"}],"responses":{"200":{"description":"OK","content":{"application/json":{"example":{"message":"Disabled successfully"}}}}},"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request POST \\\n  --url https://api.tucuota.com//v1/gateways/GWd1e9nQwK7v/actions/disable"},{"lang":"Node + Native","source":"const http = require(\"https\");\n\nconst options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.tucuota.com\",\n  \"port\": null,\n  \"path\": \"//v1/gateways/GWd1e9nQwK7v/actions/disable\",\n  \"headers\": {}\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tucuota.com//v1/gateways/GWd1e9nQwK7v/actions/disable\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.tucuota.com\")\n\nconn.request(\"POST\", \"//v1/gateways/GWd1e9nQwK7v/actions/disable\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Java + Unirest","source":"HttpResponse<String> response = Unirest.post(\"https://api.tucuota.com//v1/gateways/GWd1e9nQwK7v/actions/disable\")\n  .asString();"}]}},"/v1/imports":{"get":{"tags":["Imports"],"summary":"List Imports","description":"Returns a list of all your imports.","operationId":"List Imports","parameters":[{"name":"page","in":"query","description":"Cursor value to paginate response.","schema":{"type":"number"},"example":"10"},{"name":"limit","in":"query","description":"Number of records to return.","schema":{"type":"number"},"example":"1"},{"name":"search","in":"query","description":"Search.","schema":{"type":"string"},"example":"foo@bar.com"},{"name":"status","in":"query","description":"Allowed values (`pending`, `ready`, `invalid`, `cancelled`, `processing`, `processed`).","schema":{"type":"string"},"example":"ready"}],"responses":{"200":{"description":"OK","content":{"application/json":{"example":{"data":[{"id":"IMKd7zlGJAna","type":"customers","status":"invalid","livemode":false,"rows_count":2,"valid_rows_count":0,"invalid_rows_count":2,"created_at":"2020-11-20T02:38:14-0300","updated_at":"2020-11-20T02:38:14-0300","invalid_at":"2020-11-20T02:38:14-0300"},{"id":"IMGdOz9vReVZ","type":"customers","status":"ready","livemode":false,"rows_count":2,"valid_rows_count":2,"invalid_rows_count":0,"created_at":"2020-11-20T02:37:48-0300","updated_at":"2020-11-20T02:37:49-0300","ready_at":"2020-11-20T02:37:49-0300"}],"links":{"first":"https://tucuota.test/api/imports?page=1","last":"https://tucuota.test/api/imports?page=1"},"meta":{"current_page":1,"from":1,"last_page":1,"path":"https://tucuota.test/api/imports","per_page":25,"to":2,"total":2}}}}}},"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url 'https://api.tucuota.com//v1/imports?page=SOME_NUMBER_VALUE&limit=SOME_NUMBER_VALUE&search=SOME_STRING_VALUE&status=SOME_STRING_VALUE'"},{"lang":"Node + Native","source":"const http = require(\"https\");\n\nconst options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.tucuota.com\",\n  \"port\": null,\n  \"path\": \"//v1/imports?page=SOME_NUMBER_VALUE&limit=SOME_NUMBER_VALUE&search=SOME_STRING_VALUE&status=SOME_STRING_VALUE\",\n  \"headers\": {}\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tucuota.com//v1/imports?page=SOME_NUMBER_VALUE&limit=SOME_NUMBER_VALUE&search=SOME_STRING_VALUE&status=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.tucuota.com\")\n\nconn.request(\"GET\", \"//v1/imports?page=SOME_NUMBER_VALUE&limit=SOME_NUMBER_VALUE&search=SOME_STRING_VALUE&status=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Java + Unirest","source":"HttpResponse<String> response = Unirest.get(\"https://api.tucuota.com//v1/imports?page=SOME_NUMBER_VALUE&limit=SOME_NUMBER_VALUE&search=SOME_STRING_VALUE&status=SOME_STRING_VALUE\")\n  .asString();"}]},"post":{"tags":["Imports"],"summary":"Create an import","operationId":"Create an import","requestBody":{"content":{"*/*":{"schema":{"type":"object","properties":{"type":{"type":"string"},"data":{"type":"array","items":{"required":["email","metadata","name"],"type":"object","properties":{"name":{"type":"string"},"email":{"type":"string"},"metadata":{"type":"object","properties":{"dni":{"type":"string"}}}}}}},"example":{"type":"customers","data":[{"name":"Juan Pérez","email":"juan@perez.com","metadata":{"dni":"12345678"}},{"name":"Josefina Gomez","email":"josefina@gomez.com","metadata":{"dni":"12678345"}}]}}}},"required":false},"responses":{"200":{"description":"OK","content":{"application/json":{"example":{"data":{"id":"IMO27J2pRBn5","type":"customers","status":"pending","livemode":false,"rows_count":0,"valid_rows_count":0,"invalid_rows_count":0,"created_at":"2020-11-20T02:54:03-0300","updated_at":"2020-11-20T02:54:03-0300"}}}}}},"x-codegen-request-body-name":"body","x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request POST \\\n  --url https://api.tucuota.com//v1/imports \\\n  --header 'content-type: */*'"},{"lang":"Node + Native","source":"const http = require(\"https\");\n\nconst options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.tucuota.com\",\n  \"port\": null,\n  \"path\": \"//v1/imports\",\n  \"headers\": {\n    \"content-type\": \"*/*\"\n  }\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tucuota.com//v1/imports\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => [\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.tucuota.com\")\n\nheaders = { 'content-type': \"*/*\" }\n\nconn.request(\"POST\", \"//v1/imports\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Java + Unirest","source":"HttpResponse<String> response = Unirest.post(\"https://api.tucuota.com//v1/imports\")\n  .header(\"content-type\", \"*/*\")\n  .asString();"}]}},"/v1/imports/{id}":{"get":{"tags":["Imports"],"summary":"Show","operationId":"Show","parameters":[{"name":"id","in":"path","description":"Import ID.","required":true,"schema":{"type":"string"},"example":"IMKd7zlGJAna"}],"responses":{"200":{"description":"OK","content":{"application/json":{"example":{"data":{"id":"IMKd7zlGJAna","type":"customers","status":"invalid","livemode":false,"rows_count":2,"valid_rows_count":0,"invalid_rows_count":2,"created_at":"2020-11-20T02:38:14-0300","updated_at":"2020-11-20T02:38:14-0300","invalid_at":"2020-11-20T02:38:14-0300"}}}}}},"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url https://api.tucuota.com//v1/imports/IMKd7zlGJAna"},{"lang":"Node + Native","source":"const http = require(\"https\");\n\nconst options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.tucuota.com\",\n  \"port\": null,\n  \"path\": \"//v1/imports/IMKd7zlGJAna\",\n  \"headers\": {}\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tucuota.com//v1/imports/IMKd7zlGJAna\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.tucuota.com\")\n\nconn.request(\"GET\", \"//v1/imports/IMKd7zlGJAna\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Java + Unirest","source":"HttpResponse<String> response = Unirest.get(\"https://api.tucuota.com//v1/imports/IMKd7zlGJAna\")\n  .asString();"}]}},"/v1/imports/{id}/rows":{"get":{"tags":["Imports"],"summary":"List","operationId":"List","parameters":[{"name":"id","in":"path","description":"Import ID.","required":true,"schema":{"type":"string"},"example":"IMKd7zlGJAna"},{"name":"page","in":"query","description":"Cursor value to paginate response.","schema":{"type":"number"},"example":"10"},{"name":"limit","in":"query","description":"Number of records to return.","schema":{"type":"number"},"example":"1"},{"name":"filter","in":"query","description":"\n**Validation**. _Example: valid_. Allows values: valid, invalid.\n","schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"example":{"data":[]}}}}},"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url 'https://api.tucuota.com//v1/imports/IMKd7zlGJAna/rows?page=SOME_NUMBER_VALUE&limit=SOME_NUMBER_VALUE&filter=SOME_STRING_VALUE'"},{"lang":"Node + Native","source":"const http = require(\"https\");\n\nconst options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.tucuota.com\",\n  \"port\": null,\n  \"path\": \"//v1/imports/IMKd7zlGJAna/rows?page=SOME_NUMBER_VALUE&limit=SOME_NUMBER_VALUE&filter=SOME_STRING_VALUE\",\n  \"headers\": {}\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tucuota.com//v1/imports/IMKd7zlGJAna/rows?page=SOME_NUMBER_VALUE&limit=SOME_NUMBER_VALUE&filter=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.tucuota.com\")\n\nconn.request(\"GET\", \"//v1/imports/IMKd7zlGJAna/rows?page=SOME_NUMBER_VALUE&limit=SOME_NUMBER_VALUE&filter=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Java + Unirest","source":"HttpResponse<String> response = Unirest.get(\"https://api.tucuota.com//v1/imports/IMKd7zlGJAna/rows?page=SOME_NUMBER_VALUE&limit=SOME_NUMBER_VALUE&filter=SOME_STRING_VALUE\")\n  .asString();"}]}},"/v1/links":{"get":{"tags":["Links"],"summary":"List links","description":"Returns a list of all your links.","operationId":"List links","parameters":[{"name":"page","in":"query","description":"Cursor value to paginate response.","schema":{"type":"number"},"example":"10"},{"name":"limit","in":"query","description":"Number of records to return.","schema":{"type":"number"},"example":"1"},{"name":"search","in":"query","description":"Search.","schema":{"type":"string"},"example":"foo@bar.com"}],"responses":{"200":{"description":"OK","content":{"application/json":{"example":{"data":[{"amount":"10.00","body":"alkdfas","brands":["argencard","cbu","diners-club","lider","maestro","mastercard","mastercard-debit","nativa","visa-credito","visa-debito"],"button_text":"Pagar","created_at":"2019-09-17T21:57:25.000Z","description":"cuota","editable_amount":false,"editable_count":false,"enabled":true,"id":"22359750-d996-11e9-a922-dbb84f060cf5","installments":1,"interval":1,"interval_unit":"monthly","kind":"payment","livemode":false,"object":"link","public_uri":"https://tucuota.com/link/22359750-d996-11e9-a922-dbb84f060cf5","title":"prueba","updated_at":"2019-09-17T21:57:25.000Z","user":{"country":"AR","currency":"ARS","organization_name":"TuCuota"}}],"links":{"first":"https://tucuota.com/api/links?page=1","last":"https://tucuota.com/api/links?page=1"},"meta":{"current_page":1,"from":1,"last_page":1,"path":"https://tucuota.com/api/links","per_page":25,"to":1,"total":1}}}}}},"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url 'https://api.tucuota.com//v1/links?page=SOME_NUMBER_VALUE&limit=SOME_NUMBER_VALUE&search=SOME_STRING_VALUE'"},{"lang":"Node + Native","source":"const http = require(\"https\");\n\nconst options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.tucuota.com\",\n  \"port\": null,\n  \"path\": \"//v1/links?page=SOME_NUMBER_VALUE&limit=SOME_NUMBER_VALUE&search=SOME_STRING_VALUE\",\n  \"headers\": {}\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tucuota.com//v1/links?page=SOME_NUMBER_VALUE&limit=SOME_NUMBER_VALUE&search=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.tucuota.com\")\n\nconn.request(\"GET\", \"//v1/links?page=SOME_NUMBER_VALUE&limit=SOME_NUMBER_VALUE&search=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Java + Unirest","source":"HttpResponse<String> response = Unirest.get(\"https://api.tucuota.com//v1/links?page=SOME_NUMBER_VALUE&limit=SOME_NUMBER_VALUE&search=SOME_STRING_VALUE\")\n  .asString();"}]},"post":{"tags":["Links"],"summary":"Create a link","operationId":"Create a link","responses":{"200":{"description":"OK","content":{}}},"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request POST \\\n  --url https://api.tucuota.com//v1/links"},{"lang":"Node + Native","source":"const http = require(\"https\");\n\nconst options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.tucuota.com\",\n  \"port\": null,\n  \"path\": \"//v1/links\",\n  \"headers\": {}\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tucuota.com//v1/links\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.tucuota.com\")\n\nconn.request(\"POST\", \"//v1/links\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Java + Unirest","source":"HttpResponse<String> response = Unirest.post(\"https://api.tucuota.com//v1/links\")\n  .asString();"}]}},"/v1/links/{id}":{"get":{"tags":["Links"],"summary":"Show","operationId":"Show","parameters":[{"name":"id","in":"path","description":"Gateway ID.","required":true,"schema":{"type":"string"},"example":"GWd1e9nQwK7v"}],"responses":{"200":{"description":"OK","content":{"application/json":{"example":{"data":{"id":"GWd1e9nQwK7v","object":"gateway","gatewaykind":"naranja","number":10012341234,"username":"fernandodelperal@gmail.com","disabled":false,"brand_list":["naranja"],"livemode":false,"updated_at":"2019-07-16T22:41:43-0300","created_at":"2019-07-16T22:41:43-0300"}}}}}},"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url https://api.tucuota.com//v1/links/GWd1e9nQwK7v"},{"lang":"Node + Native","source":"const http = require(\"https\");\n\nconst options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.tucuota.com\",\n  \"port\": null,\n  \"path\": \"//v1/links/GWd1e9nQwK7v\",\n  \"headers\": {}\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tucuota.com//v1/links/GWd1e9nQwK7v\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.tucuota.com\")\n\nconn.request(\"GET\", \"//v1/links/GWd1e9nQwK7v\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Java + Unirest","source":"HttpResponse<String> response = Unirest.get(\"https://api.tucuota.com//v1/links/GWd1e9nQwK7v\")\n  .asString();"}]},"put":{"tags":["Links"],"summary":"Update","operationId":"Update","parameters":[{"name":"id","in":"path","description":"Gateway ID.","required":true,"schema":{"type":"string"},"example":"GWd1e9nQwK7v"}],"responses":{"200":{"description":"OK","content":{}}},"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request PUT \\\n  --url https://api.tucuota.com//v1/links/GWd1e9nQwK7v"},{"lang":"Node + Native","source":"const http = require(\"https\");\n\nconst options = {\n  \"method\": \"PUT\",\n  \"hostname\": \"api.tucuota.com\",\n  \"port\": null,\n  \"path\": \"//v1/links/GWd1e9nQwK7v\",\n  \"headers\": {}\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tucuota.com//v1/links/GWd1e9nQwK7v\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PUT\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.tucuota.com\")\n\nconn.request(\"PUT\", \"//v1/links/GWd1e9nQwK7v\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Java + Unirest","source":"HttpResponse<String> response = Unirest.put(\"https://api.tucuota.com//v1/links/GWd1e9nQwK7v\")\n  .asString();"}]},"post":{"tags":["Links"],"summary":"Update","operationId":"Update","parameters":[{"name":"id","in":"path","description":"Gateway ID.","required":true,"schema":{"type":"string"},"example":"GWd1e9nQwK7v"}],"responses":{"200":{"description":"OK","content":{}}},"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request POST \\\n  --url https://api.tucuota.com//v1/links/GWd1e9nQwK7v"},{"lang":"Node + Native","source":"const http = require(\"https\");\n\nconst options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.tucuota.com\",\n  \"port\": null,\n  \"path\": \"//v1/links/GWd1e9nQwK7v\",\n  \"headers\": {}\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tucuota.com//v1/links/GWd1e9nQwK7v\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.tucuota.com\")\n\nconn.request(\"POST\", \"//v1/links/GWd1e9nQwK7v\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Java + Unirest","source":"HttpResponse<String> response = Unirest.post(\"https://api.tucuota.com//v1/links/GWd1e9nQwK7v\")\n  .asString();"}]}},"/v1/payment_methods":{"get":{"tags":["Payment Methods"],"summary":"List","description":"Returns a list of payment methods.","operationId":"List","parameters":[{"name":"page","in":"query","description":"Cursor value to paginate response.","schema":{"type":"number"},"example":"10"},{"name":"limit","in":"query","description":"Number of records to return.","schema":{"type":"number"},"example":"1"},{"name":"customer_id","in":"query","description":"Show only payment methods from a given customer.","schema":{"type":"string"},"example":"CS9PL8eeo8aB"}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"required":["data"],"type":"object","properties":{"data":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","description":"One of: cbu, card."},"card":{"type":"object","properties":{"bank":{"type":"string"},"brand":{"type":"string"},"country":{"type":"string"},"expiration_month":{"type":"number"},"expiration_year":{"type":"number"},"fingerprint":{"type":"string"},"last_four_digits":{"type":"string"}}},"cbu":{"type":"object","properties":{"bank":{"type":"string"},"country":{"type":"string"},"fingerprint":{"type":"string"},"last_four_digits":{"type":"string"}}},"created_at":{"type":"string"},"id":{"type":"string"},"livemode":{"type":"boolean"},"object":{"type":"string"},"updated_at":{"type":"string"}}}},"links":{"type":"object","properties":{"first":{"type":"string"},"last":{"type":"string"},"next":{"type":"string"},"prev":{"type":"string"}}},"meta":{"required":["current_page","from","last_page","path","per_page","to","total"],"type":"object","properties":{"current_page":{"type":"number"},"from":{"type":"number"},"last_page":{"type":"number"},"path":{"type":"string"},"per_page":{"type":"number"},"to":{"type":"number"},"total":{"type":"number"}}}}},"example":{"data":[{"type":"card","card":{"bank":"Santander","brand":"visa-debito","fingerprint":"782uy3h1983gy7sl","last_four_digits":"1481"},"created_at":"2019-01-28T15:27:29-0300","id":"PMVdYaYwkqOw","livemode":false,"object":"payment_method","updated_at":"2019-05-23T20:30:01-0300"}],"links":{"first":"https://tucuota.com/api/payment_methods?page=1","last":"https://tucuota.com/api/payment_methods?page=2","next":"https://tucuota.com/api/payment_methods?page=2"},"meta":{"current_page":1,"from":1,"last_page":2,"path":"https://tucuota.com/api/payment_methods","per_page":25,"to":25,"total":34}}}}}},"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url 'https://api.tucuota.com//v1/payment_methods?page=SOME_NUMBER_VALUE&limit=SOME_NUMBER_VALUE&customer_id=SOME_STRING_VALUE'"},{"lang":"Node + Native","source":"const http = require(\"https\");\n\nconst options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.tucuota.com\",\n  \"port\": null,\n  \"path\": \"//v1/payment_methods?page=SOME_NUMBER_VALUE&limit=SOME_NUMBER_VALUE&customer_id=SOME_STRING_VALUE\",\n  \"headers\": {}\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tucuota.com//v1/payment_methods?page=SOME_NUMBER_VALUE&limit=SOME_NUMBER_VALUE&customer_id=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.tucuota.com\")\n\nconn.request(\"GET\", \"//v1/payment_methods?page=SOME_NUMBER_VALUE&limit=SOME_NUMBER_VALUE&customer_id=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Java + Unirest","source":"HttpResponse<String> response = Unirest.get(\"https://api.tucuota.com//v1/payment_methods?page=SOME_NUMBER_VALUE&limit=SOME_NUMBER_VALUE&customer_id=SOME_STRING_VALUE\")\n  .asString();"}]},"post":{"tags":["Payment Methods"],"summary":"Create Payment Method","description":"#### Body Parameters\n\n|                         |                   |                                                                               |\n| ----------------------- | ----------------- | ----------------------------------------------------------------------------- |\n| `type`                  | string, required  | \"card\"                                                                        |\n| `card.number`           | string, required  | The credit card's number. Required if type: card.                             |\n| `card.expiration_year`  | integer, optional | The credit card's year of expiration. This field is only required in Panamá.  |\n| `card.expiration_month` | integer, optional | The credit card's month of expiration. This field is only required in Panamá. |","operationId":"Create Payment Method","requestBody":{"content":{"*/*":{"schema":{"type":"object","properties":{"type":{"type":"string"},"card":{"type":"object","properties":{"number":{"type":"string"},"expiration_year":{"type":"number"},"expiration_month":{"type":"number"}}}},"example":{"type":"card","card":{"number":"4242424242424242","expiration_year":5,"expiration_month":2027}}}}},"required":false},"responses":{"201":{"description":"Created","content":{"application/json":{"example":{"data":{"bank":"Visa","brand":"visa-credito","card":{"bank":"Visa","brand":"visa-credito","country":"AR","expiration_month":5,"expiration_year":2027,"fingerprint":"0sZQikKp4lImAgIo","funding":"credit","last_four_digits":"4242"},"created_at":"2022-01-23T19:45:04.000Z","id":"PMnGkL5Nr3Wd","livemode":false,"object":"payment_method","type":"card","updated_at":"2022-01-23T19:45:04.000Z"}}}}}},"x-codegen-request-body-name":"body","x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request POST \\\n  --url https://api.tucuota.com//v1/payment_methods \\\n  --header 'content-type: */*'"},{"lang":"Node + Native","source":"const http = require(\"https\");\n\nconst options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.tucuota.com\",\n  \"port\": null,\n  \"path\": \"//v1/payment_methods\",\n  \"headers\": {\n    \"content-type\": \"*/*\"\n  }\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tucuota.com//v1/payment_methods\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => [\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.tucuota.com\")\n\nheaders = { 'content-type': \"*/*\" }\n\nconn.request(\"POST\", \"//v1/payment_methods\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Java + Unirest","source":"HttpResponse<String> response = Unirest.post(\"https://api.tucuota.com//v1/payment_methods\")\n  .header(\"content-type\", \"*/*\")\n  .asString();"}]}},"/v1/payment_methods/{id}":{"get":{"tags":["Payment Methods"],"summary":"Show","description":"Returns a payment method.","operationId":"Show","parameters":[{"name":"id","in":"path","description":"Payment method ID.","required":true,"schema":{"type":"string"},"example":"PMVA0W8y1aQO"}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"data":{"type":"object","properties":{"type":{"type":"string","description":"One of: cbu, card."},"card":{"type":"object","properties":{"bank":{"type":"string"},"brand":{"type":"string"},"country":{"type":"string"},"expiration_month":{"type":"number"},"expiration_year":{"type":"number"},"fingerprint":{"type":"string"},"last_four_digits":{"type":"string"}}},"cbu":{"type":"object","properties":{"bank":{"type":"string"},"country":{"type":"string"},"fingerprint":{"type":"string"},"last_four_digits":{"type":"string"}}},"created_at":{"type":"string"},"id":{"type":"string"},"livemode":{"type":"boolean"},"object":{"type":"string"},"updated_at":{"type":"string"}}}}},"example":{"data":{"bank":"","brand":"visa-credito","created_at":"2019-05-11T10:22:36-0300","id":"PMVA0W8y1aQO","last_four_digits":"0637","livemode":false,"object":"payment_method","updated_at":"2019-05-23T22:15:03-0300"}}}}}},"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url https://api.tucuota.com//v1/payment_methods/PMVA0W8y1aQO"},{"lang":"Node + Native","source":"const http = require(\"https\");\n\nconst options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.tucuota.com\",\n  \"port\": null,\n  \"path\": \"//v1/payment_methods/PMVA0W8y1aQO\",\n  \"headers\": {}\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tucuota.com//v1/payment_methods/PMVA0W8y1aQO\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.tucuota.com\")\n\nconn.request(\"GET\", \"//v1/payment_methods/PMVA0W8y1aQO\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Java + Unirest","source":"HttpResponse<String> response = Unirest.get(\"https://api.tucuota.com//v1/payment_methods/PMVA0W8y1aQO\")\n  .asString();"}]}},"/v1/payments":{"get":{"tags":["Payments"],"summary":"List payments","description":"Newest payments will be first on the list.","operationId":"List payments","parameters":[{"name":"page","in":"query","description":"Cursor value to paginate response.","schema":{"type":"number"},"example":"10"},{"name":"limit","in":"query","description":"Number of records to return.","schema":{"type":"number"},"example":"1"},{"name":"search","in":"query","description":"Search.","schema":{"type":"string"},"example":"foo@bar.com"},{"name":"customer_id","in":"query","description":"Show only payment methods from a given customer.","schema":{"type":"string"},"example":"CS9PL8eeo8aB"},{"name":"subscription_id","in":"query","description":"Show only payment methods from a given subscription.","schema":{"type":"string"},"example":"SBmX1MrZ77Mwq3"}],"responses":{"200":{"description":"OK","content":{}}},"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url 'https://api.tucuota.com//v1/payments?page=SOME_NUMBER_VALUE&limit=SOME_NUMBER_VALUE&search=SOME_STRING_VALUE&customer_id=SOME_STRING_VALUE&subscription_id=SOME_STRING_VALUE'"},{"lang":"Node + Native","source":"const http = require(\"https\");\n\nconst options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.tucuota.com\",\n  \"port\": null,\n  \"path\": \"//v1/payments?page=SOME_NUMBER_VALUE&limit=SOME_NUMBER_VALUE&search=SOME_STRING_VALUE&customer_id=SOME_STRING_VALUE&subscription_id=SOME_STRING_VALUE\",\n  \"headers\": {}\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tucuota.com//v1/payments?page=SOME_NUMBER_VALUE&limit=SOME_NUMBER_VALUE&search=SOME_STRING_VALUE&customer_id=SOME_STRING_VALUE&subscription_id=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.tucuota.com\")\n\nconn.request(\"GET\", \"//v1/payments?page=SOME_NUMBER_VALUE&limit=SOME_NUMBER_VALUE&search=SOME_STRING_VALUE&customer_id=SOME_STRING_VALUE&subscription_id=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Java + Unirest","source":"HttpResponse<String> response = Unirest.get(\"https://api.tucuota.com//v1/payments?page=SOME_NUMBER_VALUE&limit=SOME_NUMBER_VALUE&search=SOME_STRING_VALUE&customer_id=SOME_STRING_VALUE&subscription_id=SOME_STRING_VALUE\")\n  .asString();"}]},"post":{"tags":["Payments"],"summary":"Create","description":"#### Body Parameters\n\n|                                   |                   |                                                                                                                                  |\n| --------------------------------- | ----------------- | -------------------------------------------------------------------------------------------------------------------------------- |\n| `amount`                          | float, required   | The amount of the payment                                                                                                        |\n| `description`                     | string, required  | The title of the payment                                                                                                         |\n| `customer_id`                     | string, required  | TuCuota customer_id. Example: CSgaZlLaPMZO                                                                                       |\n| `payment_method_number`           | string, optional  | The number of the card or cbu for each payment of the subscription. This field is required if payment_method_id is not given.    |\n| `payment_method_expiration_year`  | integer, optional | The card year of expiration. This field is only required in Panamá and when payment_method_id is not given.                      |\n| `payment_method_expiration_month` | integer, optional | The card month of expiration. This field is only required in Panamá and when payment_method_id is not given.                     |\n| `payment_method_id`               | string, optional  | The token of the card or cbu for each payment of the subscription. This field is required if payment_method_number is not given. |\n| `charge_date`                     | date, optional    | A future date on which the payment should be collected. If not specified, the payment will be collected as soon as possible      |\n| `can_auto_retry_until`            | date, optional    | The maximum date the payment could be retried automatically.                                                                     |\n| `auto_retries_max_attempts`       | integer, optional | The maximum amount of times the payment could be retried automatically.                                                          |\n| `gateway_identifier`              | string, optional  | Gateway identifier for your payment                                                                                              |\n| `metadata`                        | array, optional   | Reference, additional information (max 3 keys, 100 chars each).                                                                  |","operationId":"Create","requestBody":{"content":{"*/*":{"schema":{"type":"object","properties":{"amount":{"type":"number"},"description":{"type":"string"},"gateway_identifier":{"type":"string"},"customer_id":{"type":"string"},"payment_method_number":{"type":"string"}},"example":{"amount":100,"description":"Unique payment","gateway_identifier":"001234","customer_id":"CSr7Dg3LkDP2","payment_method_number":"4024007127322104"}}}},"required":false},"responses":{"201":{"description":"Created","content":{"application/json":{"example":{"data":{"id":"PYnZRPX89R0V","object":"payment","amount":100,"currency":"ARS","description":"Unique payment","status":"pending_submission","response_message":"","paid":false,"retryable":false,"livemode":false,"created_at":"2019-11-27T17:30:42-0300","charge_date":"2019-11-27T00:00:00.000Z","updated_at":"2019-11-27T17:30:42-0300","customer":{"id":"CSr7Dg3LkDP2","object":"customer","name":"John","email":"john@doe.com","identification_type":"","identification_number":"","mobile_number":"","livemode":false,"updated_at":"2019-11-27T17:28:33-0300","created_at":"2019-11-27T17:28:33-0300"},"gateway":"GW1L49Jr79RW","payment_method":{"id":"PMPVWR55pkgj","object":"payment_method","last_four_digits":"2104","brand":"visa-credito","bank":"","livemode":false,"updated_at":"2019-11-27T17:28:33-0300","created_at":"2019-11-27T17:28:33-0300"},"gateway_identifier":"001234"}}}}}},"x-codegen-request-body-name":"body","x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request POST \\\n  --url https://api.tucuota.com//v1/payments \\\n  --header 'content-type: */*'"},{"lang":"Node + Native","source":"const http = require(\"https\");\n\nconst options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.tucuota.com\",\n  \"port\": null,\n  \"path\": \"//v1/payments\",\n  \"headers\": {\n    \"content-type\": \"*/*\"\n  }\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tucuota.com//v1/payments\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => [\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.tucuota.com\")\n\nheaders = { 'content-type': \"*/*\" }\n\nconn.request(\"POST\", \"//v1/payments\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Java + Unirest","source":"HttpResponse<String> response = Unirest.post(\"https://api.tucuota.com//v1/payments\")\n  .header(\"content-type\", \"*/*\")\n  .asString();"}]}},"/v1/payments/{id}":{"get":{"tags":["Payments"],"summary":"Show","operationId":"Show","parameters":[{"name":"id","in":"path","description":"Payment ID.","required":true,"schema":{"type":"string"},"example":"PYdOz9bgVReV"}],"responses":{"200":{"description":"OK","content":{"application/json":{"example":{"data":{"id":"PYdOz9bgVReV","object":"payment","amount":100,"currency":"ARS","description":"Unique payment","status":"pending_submission","response_message":"","paid":false,"retryable":false,"livemode":false,"created_at":"2019-11-27T17:47:27-0300","charge_date":"2019-11-27T00:00:00.000Z","updated_at":"2019-11-27T17:47:27-0300","customer":{"id":"CSr7Dg3LkDP2","object":"customer","gateway_identifier":"001234","name":"John","email":"john@doe.com","identification_type":"","identification_number":"","mobile_number":"","livemode":false,"updated_at":"2019-11-27T17:28:33-0300","created_at":"2019-11-27T17:28:33-0300"},"gateway":"GW1L49Jr79RW","payment_method":{"id":"PMPVWR55pkgj","object":"payment_method","last_four_digits":"2104","brand":"visa-credito","bank":"","livemode":false,"updated_at":"2019-11-27T17:28:33-0300","created_at":"2019-11-27T17:28:33-0300"},"logs":[{"processed_at":"2019-11-27T17:47:27-0300","action":"created","status":"pending_submission","response_message":"","response_code":""}]}}}}}},"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url https://api.tucuota.com//v1/payments/PYdOz9bgVReV"},{"lang":"Node + Native","source":"const http = require(\"https\");\n\nconst options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.tucuota.com\",\n  \"port\": null,\n  \"path\": \"//v1/payments/PYdOz9bgVReV\",\n  \"headers\": {}\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tucuota.com//v1/payments/PYdOz9bgVReV\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.tucuota.com\")\n\nconn.request(\"GET\", \"//v1/payments/PYdOz9bgVReV\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Java + Unirest","source":"HttpResponse<String> response = Unirest.get(\"https://api.tucuota.com//v1/payments/PYdOz9bgVReV\")\n  .asString();"}]},"put":{"tags":["Payments"],"summary":"Update","description":"#### Body Parameters\n\n|                                   |                   |                                                                                                              |\n| --------------------------------- | ----------------- | ------------------------------------------------------------------------------------------------------------ |\n| `amount`                          | float, optional   | The new amount of the payment                                                                                |\n| `description`                     | string, optional  | The new title of the payment                                                                                 |\n| `charge_date`                     | date, optional    | A future date on which the payment should be collected.                                                      |\n| `can_auto_retry_until`            | date, optional    | The maximum date the payment could be retried automatically.                                                 |\n| `auto_retries_max_attempts`       | integer, optional | The maximum amount of times the payment could be retried automatically.                                      |\n| `metadata`                        | array, optional   | Reference, additional information (max 3 keys, 100 chars each).                                              |\n| `payment_method_number`           | string, optional  | The number of the card or cbu for the payment. This field is required if payment_method_id is not given      |\n| `payment_method_expiration_year`  | integer, optional | The card year of expiration. This field is only required in Panamá and when payment_method_id is not given.  |\n| `payment_method_expiration_month` | integer, optional | The card month of expiration. This field is only required in Panamá and when payment_method_id is not given. |\n| `payment_method_id`               | string, optional  | The token of the card or cbu for the payment. This field is required if payment_method_number is not given   |","operationId":"Update","parameters":[{"name":"id","in":"path","description":"Payment ID.","required":true,"schema":{"type":"string"},"example":"PYdOz9bgVReV"}],"requestBody":{"content":{"*/*":{"schema":{"type":"object","properties":{"description":{"type":"string"}},"example":{"description":"New payment title"}}}},"required":false},"responses":{"200":{"description":"OK","content":{"application/json":{"example":{"data":{"id":"PYdOz9bgVReV","object":"payment","amount":100,"currency":"ARS","description":"New payment title","status":"pending_submission","response_message":"","paid":false,"retryable":false,"livemode":false,"created_at":"2019-11-27T17:47:27-0300","charge_date":"2019-11-27T00:00:00.000Z","updated_at":"2019-11-27T18:49:14-0300","customer":{"id":"CSr7Dg3LkDP2","object":"customer","gateway_identifier":"1234","name":"John","email":"john@doe.com","identification_type":"","identification_number":"","mobile_number":"","livemode":false,"updated_at":"2019-11-27T17:28:33-0300","created_at":"2019-11-27T17:28:33-0300"},"gateway":"GW1L49Jr79RW","payment_method":{"id":"PMPVWR55pkgj","object":"payment_method","last_four_digits":"2104","brand":"visa-credito","bank":"","livemode":false,"updated_at":"2019-11-27T17:28:33-0300","created_at":"2019-11-27T17:28:33-0300"}}}}}}},"x-codegen-request-body-name":"body","x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request PUT \\\n  --url https://api.tucuota.com//v1/payments/PYdOz9bgVReV \\\n  --header 'content-type: */*'"},{"lang":"Node + Native","source":"const http = require(\"https\");\n\nconst options = {\n  \"method\": \"PUT\",\n  \"hostname\": \"api.tucuota.com\",\n  \"port\": null,\n  \"path\": \"//v1/payments/PYdOz9bgVReV\",\n  \"headers\": {\n    \"content-type\": \"*/*\"\n  }\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tucuota.com//v1/payments/PYdOz9bgVReV\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PUT\",\n  CURLOPT_HTTPHEADER => [\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.tucuota.com\")\n\nheaders = { 'content-type': \"*/*\" }\n\nconn.request(\"PUT\", \"//v1/payments/PYdOz9bgVReV\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Java + Unirest","source":"HttpResponse<String> response = Unirest.put(\"https://api.tucuota.com//v1/payments/PYdOz9bgVReV\")\n  .header(\"content-type\", \"*/*\")\n  .asString();"}]}},"/v1/payments/{id}/actions/cancel":{"post":{"tags":["Payments"],"summary":"Cancel","operationId":"Cancel","parameters":[{"name":"id","in":"path","description":"Payment ID.","required":true,"schema":{"type":"string"},"example":"PYdOz9bgVReV"}],"responses":{"201":{"description":"Created","content":{"application/json":{"example":{"message":"Cancelled successfully"}}}}},"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request POST \\\n  --url https://api.tucuota.com//v1/payments/PYdOz9bgVReV/actions/cancel"},{"lang":"Node + Native","source":"const http = require(\"https\");\n\nconst options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.tucuota.com\",\n  \"port\": null,\n  \"path\": \"//v1/payments/PYdOz9bgVReV/actions/cancel\",\n  \"headers\": {}\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tucuota.com//v1/payments/PYdOz9bgVReV/actions/cancel\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.tucuota.com\")\n\nconn.request(\"POST\", \"//v1/payments/PYdOz9bgVReV/actions/cancel\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Java + Unirest","source":"HttpResponse<String> response = Unirest.post(\"https://api.tucuota.com//v1/payments/PYdOz9bgVReV/actions/cancel\")\n  .asString();"}]}},"/v1/payments/{id}/actions/retry":{"post":{"tags":["Payments"],"summary":"Retry","operationId":"Retry","parameters":[{"name":"id","in":"path","description":"Payment ID.","required":true,"schema":{"type":"string"},"example":"PYdOz9bgVReV"}],"responses":{"201":{"description":"Created","content":{"application/json":{"example":{"message":"Retried successfully"}}}}},"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request POST \\\n  --url https://api.tucuota.com//v1/payments/PYdOz9bgVReV/actions/retry"},{"lang":"Node + Native","source":"const http = require(\"https\");\n\nconst options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.tucuota.com\",\n  \"port\": null,\n  \"path\": \"//v1/payments/PYdOz9bgVReV/actions/retry\",\n  \"headers\": {}\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tucuota.com//v1/payments/PYdOz9bgVReV/actions/retry\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.tucuota.com\")\n\nconn.request(\"POST\", \"//v1/payments/PYdOz9bgVReV/actions/retry\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Java + Unirest","source":"HttpResponse<String> response = Unirest.post(\"https://api.tucuota.com//v1/payments/PYdOz9bgVReV/actions/retry\")\n  .asString();"}]}},"/v1/sessions":{"post":{"tags":["Sessions"],"summary":"Create new session","description":"|                    |                   |                                                                                                                                                                                                                                                                               |\n| ------------------ | ----------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `kind`             | string, required  | One of payment, subscription or mandate                                                                                                                                                                                                                                       |\n| `success_url`      | string, required  | The uri on which your customer will be redirected after completing the checkout                                                                                                                                                                                               |\n| `amount`           | float, required   | The amount of the payment or subscription                                                                                                                                                                                                                                     |\n| `description`      | string, required  | The title of the payment or subscription                                                                                                                                                                                                                                      |\n| `customer_id`      | string, required  | TuCuota customer_id if exists en TuCuota. Example: CSgaZlLaPMZO                                                                                                                                                                                                               |\n| `customer_name`    | string            | Name of your customer. You can fill it or ask the customer to fill this field in the checkout process                                                                                                                                                                         |\n| `customer_email`   | string            | Email of your customer. You can fill it or ask the customer to fill this field in the checkout process                                                                                                                                                                        |\n| `editable_amount`  | boolean           | Allow the customer to set the amount, useful for donations                                                                                                                                                                                                                    |\n| `installments`     | integer           | Only for payments, quantity of payments on which the amount will be splitted                                                                                                                                                                                                  |\n| `max_installments` | integer           | Only for payments, allow the customer to choose how many installments can split the payment                                                                                                                                                                                   |\n| `interval_unit`    | string, required  | Only for subscriptions, the unit of time between customer charge dates. One of weekly, monthly or yearly                                                                                                                                                                      |\n| `interval`         | integer, required | Only for subscriptions, the number of interval_units between customer charge dates. Must be greater than to 1. If interval_unit is weekly and interval is 2, then the customer will be charged every two weeks. Defaults to 1                                                 |\n| `day_of_month`     | integer           | Only for subscriptions, the day of month, from 1 to 28. Use only if you need the subscription to start in a specyfic date. In most cases this should be null, therefore TuCuota will use the date of the moment when the user completes the checkout.                         |\n| `day_of_week`      | integer           | Only for subscriptions, the day of week number, from 0 (Sunday) to 6 (Saturday). Use only if you need the subscription to start in a specyfic date. In most cases this should be null, therefore TuCuota will use the date of the moment when the user completes the checkout |\n| `count`            | integer           | Only for subscriptions, the total number of payments that should be taken by this subscription. If not specified the subscription will continue until you cancel it                                                                                                           |\n| `editable_count`   | boolean           | Only for subscriptions, allow the customer to set the duration of the subscriptions, useful for donations                                                                                                                                                                     |\n| `metadata`         | array             | Reference, additional information (max 3 keys, 100 chars each)                                                                                                                                                                                                                |","operationId":"Create new session","requestBody":{"content":{"*/*":{"schema":{"type":"object","properties":{"kind":{"type":"string"},"success_url":{"type":"string"},"amount":{"type":"string"},"description":{"type":"string"}},"example":{"kind":"payment","success_url":"http://example.com/success","amount":"200.50","description":"Summer school"}}}},"required":false},"responses":{"200":{"description":"OK","content":{"application/json":{"example":{"data":{"id":"20163ed0-115f-11ea-85ab-9de75099ec18","object":"session","description":"Summer school","amount":"200.50","kind":"payment","day_of_month":27,"day_of_week":3,"created_at":"2019-11-27T21:44:44.000Z","updated_at":"2019-11-27T21:44:44.000Z","livemode":false,"brands":["visa-debito","mastercard","argencard","diners-club","mastercard-debit","nativa","maestro","lider","cbu","visa-credito","naranja","amex"],"public_uri":"https://tucuota.com/checkout/20163ed0-115f-11ea-85ab-9de75099ec18","user":{"country":"AR","organization_name":"TuCuota","currency":"ARS"}}}}}}},"x-codegen-request-body-name":"body","x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request POST \\\n  --url https://api.tucuota.com//v1/sessions \\\n  --header 'content-type: */*'"},{"lang":"Node + Native","source":"const http = require(\"https\");\n\nconst options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.tucuota.com\",\n  \"port\": null,\n  \"path\": \"//v1/sessions\",\n  \"headers\": {\n    \"content-type\": \"*/*\"\n  }\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tucuota.com//v1/sessions\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => [\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.tucuota.com\")\n\nheaders = { 'content-type': \"*/*\" }\n\nconn.request(\"POST\", \"//v1/sessions\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Java + Unirest","source":"HttpResponse<String> response = Unirest.post(\"https://api.tucuota.com//v1/sessions\")\n  .header(\"content-type\", \"*/*\")\n  .asString();"}]}},"/v1/sessions/{id}":{"get":{"tags":["Sessions"],"summary":"Show","operationId":"Show","parameters":[{"name":"id","in":"path","description":"Session UUID.","required":true,"schema":{"type":"string"},"example":"58fa2240-d996-11e9-a698-09ff9b98c35f"}],"responses":{"200":{"description":"OK","content":{"application/json":{"example":{"data":{"id":"58fa2240-d996-11e9-a698-09ff9b98c35f","object":"session","description":"cuota","amount":"10.00","kind":"payment","editable_amount":false,"installments":1,"interval_unit":"monthly","interval":1,"editable_count":false,"created_at":"2019-09-17T18:58:57.000Z","updated_at":"2019-09-17T18:58:57.000Z","livemode":false,"brands":["visa-debito","mastercard","argencard","diners-club","mastercard-debit","nativa","maestro","lider","cbu","visa-credito","naranja","amex"],"public_uri":"https://tucuota.com/checkout/58fa2240-d996-11e9-a698-09ff9b98c35f","link_id":"22359750-d996-11e9-a922-dbb84f060cf5","user":{"country":"AR","organization_name":"TuCuota","currency":"ARS"}}}}}}},"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url https://api.tucuota.com//v1/sessions/58fa2240-d996-11e9-a698-09ff9b98c35f"},{"lang":"Node + Native","source":"const http = require(\"https\");\n\nconst options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.tucuota.com\",\n  \"port\": null,\n  \"path\": \"//v1/sessions/58fa2240-d996-11e9-a698-09ff9b98c35f\",\n  \"headers\": {}\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tucuota.com//v1/sessions/58fa2240-d996-11e9-a698-09ff9b98c35f\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.tucuota.com\")\n\nconn.request(\"GET\", \"//v1/sessions/58fa2240-d996-11e9-a698-09ff9b98c35f\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Java + Unirest","source":"HttpResponse<String> response = Unirest.get(\"https://api.tucuota.com//v1/sessions/58fa2240-d996-11e9-a698-09ff9b98c35f\")\n  .asString();"}]}},"/v1/subscriptions":{"get":{"tags":["Subscriptions"],"summary":"List","operationId":"List","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"required":["data"],"type":"object","properties":{"data":{"type":"array","items":{"type":"object"}},"links":{"type":"object","properties":{"first":{"type":"string"},"last":{"type":"string"},"next":{"type":"string"},"prev":{"type":"string"}}},"meta":{"required":["current_page","from","last_page","path","per_page","to","total"],"type":"object","properties":{"current_page":{"type":"number"},"from":{"type":"number"},"last_page":{"type":"number"},"path":{"type":"string"},"per_page":{"type":"number"},"to":{"type":"number"},"total":{"type":"number"}}}}},"example":{"data":[{"id":"SBnJR9Yzdwx6Lv","object":"subscription","amount":13,"description":"Test","currency":"ARS","status":"active","count":3,"start_date":"2019-11-19T00:00:00.000Z","interval_unit":"monthly","interval":1,"day_of_month":19,"day_of_week":2,"livemode":false,"created_at":"2019-11-19T05:50:17-0300","updated_at":"2019-11-28T12:36:59-0300","first_date":"2019-11-19T00:00:00.000Z","upcoming_dates":["2019-12-19T00:00:00.000Z","2020-01-19T00:00:00.000Z"],"customer":{"id":"CSobDJkEa8p6","object":"customer","gateway_identifier":"001234","name":"prueba","email":"lasfd@lgf.com","identification_type":"","identification_number":"","mobile_number":"","livemode":false,"updated_at":"2019-11-19T05:49:32-0300","created_at":"2019-11-19T05:49:32-0300"},"payment_method":{"id":"PMlMkpBBPaey","object":"payment_method","last_four_digits":"2555","brand":"visa-credito","bank":"","livemode":false,"updated_at":"2019-11-19T05:51:00-0300","created_at":"2019-11-19T05:50:17-0300"},"payments_created":1,"approved_payments_count":0,"approved_payments_sum":0,"rejected_payments_count":0,"rejected_payments_sum":0}],"links":{"first":"https://tucuota.com/api/subscriptions?page=1","last":"https://tucuota.com/api/subscriptions?page=1"},"meta":{"current_page":1,"from":1,"last_page":1,"path":"https://tucuota.com/api/subscriptions","per_page":25,"to":3,"total":3}}}}}},"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url https://api.tucuota.com//v1/subscriptions"},{"lang":"Node + Native","source":"const http = require(\"https\");\n\nconst options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.tucuota.com\",\n  \"port\": null,\n  \"path\": \"//v1/subscriptions\",\n  \"headers\": {}\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tucuota.com//v1/subscriptions\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.tucuota.com\")\n\nconn.request(\"GET\", \"//v1/subscriptions\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Java + Unirest","source":"HttpResponse<String> response = Unirest.get(\"https://api.tucuota.com//v1/subscriptions\")\n  .asString();"}]},"post":{"tags":["Subscriptions"],"summary":"Create","description":"#### Body Parameters\n\n|                                   |                   |                                                                                                                                                                                                   |\n| --------------------------------- | ----------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `amount`                          | float, required   | The amount of each payment of the subscription.                                                                                                                                                   |\n| `description`                     | string, required  | The title of each payment of the subscription.                                                                                                                                                    |\n| `count`                           | integer, optional | The total number of payments that should be taken by this subscription. If not specified the subscription will continue until you cancel it.                                                      |\n| `customer_id`                     | string, required  | TuCuota customer_id. Example: CSgaZlLaPMZO                                                                                                                                                        |\n| `payment_method_number`           | string, optional  | The number of the card or cbu for each payment of the subscription. This field is required if payment_method_id is not given.                                                                     |\n| `payment_method_expiration_year`  | integer, optional | The card year of expiration. This field is only required in Panamá and when payment_method_id is not given.                                                                                       |\n| `payment_method_expiration_month` | integer, optional | The card month of expiration. This field is only required in Panamá and when payment_method_id is not given.                                                                                      |\n| `payment_method_id`               | string, optional  | The token of the card or cbu for each payment of the subscription. This field is required if payment_method_number is not given.                                                                  |\n| `start_date`                      | date, optional    | A future date on which the first payment of the subscription should be collected. If not specified, the first payment will be collected as soon as possible.                                      |\n| `interval_unit`                   | string, required  | The unit of time between customer charge dates. One of weekly, monthly or yearly.                                                                                                                 |\n| `interval`                        | integer, required | Number of interval_units between customer charge dates. Must be greater than to 1. If interval_unit is weekly and interval is 2, then the customer will be charged every two weeks. Defaults to 1 |\n| `day_of_month`                    | integer, optional | Day of month, from 1 to 28. This field is required if interval_unit is set to monthly. Defaults to 1.                                                                                             |\n| `day_of_week`                     | integer, optional | Day of week number, from 0 (Sunday) to 6 (Saturday). This field is required if interval_unit is set to weekly.                                                                                    |\n| `metadata`                        | array, optional   | Reference, additional information (max 3 keys, 100 chars each).                                                                                                                                   |","operationId":"Create","requestBody":{"content":{"*/*":{"schema":{"required":["amount","customer_id","description","interval","interval_unit"],"type":"object","properties":{"amount":{"type":"number"},"description":{"type":"string"},"count":{"type":"number"},"customer_id":{"type":"string"},"payment_method_number":{"type":"string"},"payment_method_expiration_year":{"type":"string"},"payment_method_expiration_month":{"type":"string"},"payment_method_id":{"type":"string"},"start_date":{"type":"string","description":"A future date on which the first payment of the subscription should be collected. If not specified, the first payment will be collected as soon as possible."},"interval_unit":{"type":"string","description":"The unit of time between customer charge dates. One of weekly, monthly or yearly. Example monthly"},"interval":{"type":"number","description":"Number of interval_units between customer charge dates. Must be greater than to 1. If interval_unit is weekly and interval is 2, then the customer will be charged every two weeks. Defaults to 1. Example 1"},"day_of_month":{"type":"number","description":"Day of month, from 1 to 28. This field is required if interval_unit is set to monthly. Defaults to 1."},"day_of_week":{"type":"number","description":"Day of week number, from 0 (Sunday) to 6 (Saturday). This field is required if interval_unit is set to weekly."},"metadata":{"type":"object","properties":{"name":{"type":"string"}},"description":"Reference, additional information (max 3 keys, 100 chars each)."}},"example":{"amount":100,"description":"Some subscription description","customer_id":"CS9PL8eeo8aB","payment_method_number":"4024007127322104","interval_unit":"monthly","day_of_month":1,"metadata":{"some":"metadata"}}}}},"required":false},"responses":{"201":{"description":"Created","content":{"application/json":{"schema":{"type":"object","properties":{"data":{"required":["amount","approved_payments_count","approved_payments_sum","created_at","currency","customer","customer_id","description","first_date","id","interval","interval_unit","livemode","object","payment_method","rejected_payments_count","rejected_payments_sum","start_date","status","upcoming_dates","updated_at"],"type":"object","properties":{"created_at":{"type":"string"},"currency":{"type":"string"},"approved_payments_count":{"type":"number"},"approved_payments_sum":{"type":"number"},"customer":{"required":["created_at","deleted_at","email","id","identification_number","identification_type","livemode","mobile_number","name","object","updated_at"],"type":"object","properties":{"object":{"type":"string","description":"Description."},"created_at":{"type":"string","description":"Description."},"deleted_at":{"type":"string","description":"Description."},"email":{"type":"string","description":"Description."},"gateway_identifier":{"type":"string","description":"Description."},"id":{"type":"string","description":"Description."},"identification_number":{"type":"string","description":"Description."},"identification_type":{"type":"string","description":"Description."},"livemode":{"type":"boolean","description":"Description."},"metadata":{"type":"object","properties":{"name":{"type":"string"}},"description":"Reference, additional information (max 3 keys, 100 chars each)."},"mobile_number":{"type":"string","description":"Description."},"name":{"type":"string","description":"Description."},"updated_at":{"type":"string","description":"Description."}}},"first_date":{"type":"string"},"id":{"type":"string"},"livemode":{"type":"boolean"},"object":{"type":"string"},"payment_method":{"type":"object","properties":{"type":{"type":"string","description":"One of: cbu, card."},"card":{"type":"object","properties":{"bank":{"type":"string"},"brand":{"type":"string"},"country":{"type":"string"},"expiration_month":{"type":"number"},"expiration_year":{"type":"number"},"fingerprint":{"type":"string"},"last_four_digits":{"type":"string"}}},"cbu":{"type":"object","properties":{"bank":{"type":"string"},"country":{"type":"string"},"fingerprint":{"type":"string"},"last_four_digits":{"type":"string"}}},"created_at":{"type":"string"},"id":{"type":"string"},"livemode":{"type":"boolean"},"object":{"type":"string"},"updated_at":{"type":"string"}}},"rejected_payments_count":{"type":"number"},"rejected_payments_sum":{"type":"number"},"status":{"type":"string"},"upcoming_dates":{"type":"array","items":{"type":"object"}},"updated_at":{"type":"string"},"amount":{"type":"number"},"description":{"type":"string"},"count":{"type":"number"},"customer_id":{"type":"string"},"payment_method_number":{"type":"string"},"payment_method_expiration_year":{"type":"string"},"payment_method_expiration_month":{"type":"string"},"payment_method_id":{"type":"string"},"start_date":{"type":"string","description":"A future date on which the first payment of the subscription should be collected. If not specified, the first payment will be collected as soon as possible."},"interval_unit":{"type":"string","description":"The unit of time between customer charge dates. One of weekly, monthly or yearly. Example monthly"},"interval":{"type":"number","description":"Number of interval_units between customer charge dates. Must be greater than to 1. If interval_unit is weekly and interval is 2, then the customer will be charged every two weeks. Defaults to 1. Example 1"},"day_of_month":{"type":"number","description":"Day of month, from 1 to 28. This field is required if interval_unit is set to monthly. Defaults to 1."},"day_of_week":{"type":"number","description":"Day of week number, from 0 (Sunday) to 6 (Saturday). This field is required if interval_unit is set to weekly."},"metadata":{"type":"object","properties":{"name":{"type":"string"}},"description":"Reference, additional information (max 3 keys, 100 chars each)."}}}}},"example":{"data":{"amount":100,"created_at":"2019-09-21T01:02:01-0300","currency":"ARS","customer":{"created_at":"2019-09-21T01:02:01-0300","email":"john@doe.com","id":"CS9PL8eeo8aB","identification_number":"","identification_type":"","livemode":false,"metadata":[],"mobile_number":"","name":"John","object":"customer","updated_at":"2019-09-21T01:02:01-0300"},"day_of_month":1,"day_of_week":0,"description":"Some subscription description","first_date":"2019-10-01T00:00:00.000Z","id":"SBEnWOMegRx0YD","interval":1,"interval_unit":"monthly","livemode":false,"metadata":{"some":"metadata"},"object":"subscription","payment_method":{"bank":"","brand":"visa-credito","created_at":"2019-09-21T01:02:01-0300","id":"PMMVaQoz7kpm","last_four_digits":"2104","livemode":false,"object":"payment_method","updated_at":"2019-09-21T01:02:01-0300"},"start_date":"2019-09-21T00:00:00.000Z","status":"active","upcoming_dates":["2019-10-01T00:00:00.000Z","2019-11-01T00:00:00.000Z","2019-12-01T00:00:00.000Z","2020-01-01T00:00:00.000Z","2020-02-01T00:00:00.000Z"],"updated_at":"2019-09-21T01:02:01-0300"}}}}}},"x-codegen-request-body-name":"body","x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request POST \\\n  --url https://api.tucuota.com//v1/subscriptions \\\n  --header 'content-type: */*'"},{"lang":"Node + Native","source":"const http = require(\"https\");\n\nconst options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.tucuota.com\",\n  \"port\": null,\n  \"path\": \"//v1/subscriptions\",\n  \"headers\": {\n    \"content-type\": \"*/*\"\n  }\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tucuota.com//v1/subscriptions\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => [\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.tucuota.com\")\n\nheaders = { 'content-type': \"*/*\" }\n\nconn.request(\"POST\", \"//v1/subscriptions\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Java + Unirest","source":"HttpResponse<String> response = Unirest.post(\"https://api.tucuota.com//v1/subscriptions\")\n  .header(\"content-type\", \"*/*\")\n  .asString();"}]}},"/v1/subscriptions/{id}":{"get":{"tags":["Subscriptions"],"summary":"Show","operationId":"Show","parameters":[{"name":"id","in":"path","description":"Subscription ID.","required":true,"schema":{"type":"string"},"example":"SBmX1MrZ77Mwq3"}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"data":{"required":["amount","approved_payments_count","approved_payments_sum","created_at","currency","customer","customer_id","description","first_date","id","interval","interval_unit","livemode","object","payment_method","rejected_payments_count","rejected_payments_sum","start_date","status","upcoming_dates","updated_at"],"type":"object","properties":{"created_at":{"type":"string"},"currency":{"type":"string"},"approved_payments_count":{"type":"number"},"approved_payments_sum":{"type":"number"},"customer":{"required":["created_at","deleted_at","email","id","identification_number","identification_type","livemode","mobile_number","name","object","updated_at"],"type":"object","properties":{"object":{"type":"string","description":"Description."},"created_at":{"type":"string","description":"Description."},"deleted_at":{"type":"string","description":"Description."},"email":{"type":"string","description":"Description."},"gateway_identifier":{"type":"string","description":"Description."},"id":{"type":"string","description":"Description."},"identification_number":{"type":"string","description":"Description."},"identification_type":{"type":"string","description":"Description."},"livemode":{"type":"boolean","description":"Description."},"metadata":{"type":"object","properties":{"name":{"type":"string"}},"description":"Reference, additional information (max 3 keys, 100 chars each)."},"mobile_number":{"type":"string","description":"Description."},"name":{"type":"string","description":"Description."},"updated_at":{"type":"string","description":"Description."}}},"first_date":{"type":"string"},"id":{"type":"string"},"livemode":{"type":"boolean"},"object":{"type":"string"},"payment_method":{"type":"object","properties":{"type":{"type":"string","description":"One of: cbu, card."},"card":{"type":"object","properties":{"bank":{"type":"string"},"brand":{"type":"string"},"country":{"type":"string"},"expiration_month":{"type":"number"},"expiration_year":{"type":"number"},"fingerprint":{"type":"string"},"last_four_digits":{"type":"string"}}},"cbu":{"type":"object","properties":{"bank":{"type":"string"},"country":{"type":"string"},"fingerprint":{"type":"string"},"last_four_digits":{"type":"string"}}},"created_at":{"type":"string"},"id":{"type":"string"},"livemode":{"type":"boolean"},"object":{"type":"string"},"updated_at":{"type":"string"}}},"rejected_payments_count":{"type":"number"},"rejected_payments_sum":{"type":"number"},"status":{"type":"string"},"upcoming_dates":{"type":"array","items":{"type":"object"}},"updated_at":{"type":"string"},"amount":{"type":"number"},"description":{"type":"string"},"count":{"type":"number"},"customer_id":{"type":"string"},"payment_method_number":{"type":"string"},"payment_method_expiration_year":{"type":"string"},"payment_method_expiration_month":{"type":"string"},"payment_method_id":{"type":"string"},"start_date":{"type":"string","description":"A future date on which the first payment of the subscription should be collected. If not specified, the first payment will be collected as soon as possible."},"interval_unit":{"type":"string","description":"The unit of time between customer charge dates. One of weekly, monthly or yearly. Example monthly"},"interval":{"type":"number","description":"Number of interval_units between customer charge dates. Must be greater than to 1. If interval_unit is weekly and interval is 2, then the customer will be charged every two weeks. Defaults to 1. Example 1"},"day_of_month":{"type":"number","description":"Day of month, from 1 to 28. This field is required if interval_unit is set to monthly. Defaults to 1."},"day_of_week":{"type":"number","description":"Day of week number, from 0 (Sunday) to 6 (Saturday). This field is required if interval_unit is set to weekly."},"metadata":{"type":"object","properties":{"name":{"type":"string"}},"description":"Reference, additional information (max 3 keys, 100 chars each)."}}}}},"example":{"data":{"id":"SBWEa9ypAgMXKR","object":"subscription","amount":100,"description":"New subscription","currency":"ARS","status":"active","start_date":"2019-11-28T00:00:00.000Z","interval_unit":"monthly","interval":1,"day_of_month":1,"day_of_week":0,"livemode":false,"created_at":"2019-11-28T13:57:56-0300","updated_at":"2019-11-28T13:58:05-0300","first_date":"2019-12-01T00:00:00.000Z","upcoming_dates":["2019-12-01T00:00:00.000Z","2020-01-01T00:00:00.000Z","2020-02-01T00:00:00.000Z","2020-03-01T00:00:00.000Z","2020-04-01T00:00:00.000Z"],"customer":{"id":"CSr7Dg3LkDP2","object":"customer","gateway_identifier":"001234","name":"John","email":"john@doe.com","identification_type":"","identification_number":"","mobile_number":"","livemode":false,"updated_at":"2019-11-27T17:28:33-0300","created_at":"2019-11-27T17:28:33-0300"},"payment_method":{"id":"PMPVWR55pkgj","object":"payment_method","last_four_digits":"2104","brand":"visa-credito","bank":"","livemode":false,"updated_at":"2019-11-27T17:28:33-0300","created_at":"2019-11-27T17:28:33-0300"},"metadata":{"some":"metadata"},"payments_created":1,"approved_payments_count":0,"approved_payments_sum":0,"rejected_payments_count":0,"rejected_payments_sum":0}}}}}},"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url https://api.tucuota.com//v1/subscriptions/SBmX1MrZ77Mwq3"},{"lang":"Node + Native","source":"const http = require(\"https\");\n\nconst options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.tucuota.com\",\n  \"port\": null,\n  \"path\": \"//v1/subscriptions/SBmX1MrZ77Mwq3\",\n  \"headers\": {}\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tucuota.com//v1/subscriptions/SBmX1MrZ77Mwq3\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.tucuota.com\")\n\nconn.request(\"GET\", \"//v1/subscriptions/SBmX1MrZ77Mwq3\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Java + Unirest","source":"HttpResponse<String> response = Unirest.get(\"https://api.tucuota.com//v1/subscriptions/SBmX1MrZ77Mwq3\")\n  .asString();"}]},"put":{"tags":["Subscriptions"],"summary":"Update","description":"#### Body Parameters\n\n|                                   |                   |                                                                                                                                                                                                              |\n| --------------------------------- | ----------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| `amount`                          | float, filled     | The amount of each payment of the subscription.                                                                                                                                                              |\n| `description`                     | string, filled    | The title of each payment of the subscription.                                                                                                                                                               |\n| `payment_method_number`           | string, optional  | The number of the card or cbu for each payment of the subscription. This field is required if payment_method_id is not given.                                                                                |\n| `payment_method_expiration_year`  | integer, optional | The card year of expiration. This field is only required in Panamá and when payment_method_id is not given.                                                                                                  |\n| `payment_method_expiration_month` | integer, optional | The card month of expiration. This field is only required in Panamá and when payment_method_id is not given.                                                                                                 |\n| `payment_method_id`               | string, optional  | The token of the card or cbu for each payment of the subscription. This field is required if payment_method_number is not given.                                                                             |\n| `start_date`                      | date, optional    | A future date on which the first payment of the subscription should be collected. If not specified, the first payment will be collected as soon as possible.                                                 |\n| `interval`                        | integer, required | Number of interval_units between customer charge dates. Must be greater than to 1. If interval_unit is weekly and interval is 2, then the customer will be charged every two weeks. Defaults to 1. Example 1 |\n| `day_of_month`                    | integer, optional | Day of month, from 1 to 28. This field is required if interval_unit is set to monthly. Defaults to 1.                                                                                                        |\n| `day_of_week`                     | integer, optional | Day of week number, from 0 (Sunday) to 6 (Saturday). This field is required if interval_unit is set to weekly.                                                                                               |\n| `metadata`                        | array, optional   | Reference, additional information (max 3 keys, 100 chars each).                                                                                                                                              |","operationId":"Update","parameters":[{"name":"id","in":"path","description":"Subscription ID.","required":true,"schema":{"type":"string"},"example":"SBmX1MrZ77Mwq3"}],"requestBody":{"content":{"*/*":{"schema":{"type":"object","properties":{"amount":{"type":"number"},"description":{"type":"string"}},"example":{"amount":100,"description":"New subscription name"}}}},"required":false},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"data":{"required":["amount","approved_payments_count","approved_payments_sum","created_at","currency","customer","customer_id","description","first_date","id","interval","interval_unit","livemode","object","payment_method","rejected_payments_count","rejected_payments_sum","start_date","status","upcoming_dates","updated_at"],"type":"object","properties":{"created_at":{"type":"string"},"currency":{"type":"string"},"approved_payments_count":{"type":"number"},"approved_payments_sum":{"type":"number"},"customer":{"required":["created_at","deleted_at","email","id","identification_number","identification_type","livemode","mobile_number","name","object","updated_at"],"type":"object","properties":{"object":{"type":"string","description":"Description."},"created_at":{"type":"string","description":"Description."},"deleted_at":{"type":"string","description":"Description."},"email":{"type":"string","description":"Description."},"gateway_identifier":{"type":"string","description":"Description."},"id":{"type":"string","description":"Description."},"identification_number":{"type":"string","description":"Description."},"identification_type":{"type":"string","description":"Description."},"livemode":{"type":"boolean","description":"Description."},"metadata":{"type":"object","properties":{"name":{"type":"string"}},"description":"Reference, additional information (max 3 keys, 100 chars each)."},"mobile_number":{"type":"string","description":"Description."},"name":{"type":"string","description":"Description."},"updated_at":{"type":"string","description":"Description."}}},"first_date":{"type":"string"},"id":{"type":"string"},"livemode":{"type":"boolean"},"object":{"type":"string"},"payment_method":{"type":"object","properties":{"type":{"type":"string","description":"One of: cbu, card."},"card":{"type":"object","properties":{"bank":{"type":"string"},"brand":{"type":"string"},"country":{"type":"string"},"expiration_month":{"type":"number"},"expiration_year":{"type":"number"},"fingerprint":{"type":"string"},"last_four_digits":{"type":"string"}}},"cbu":{"type":"object","properties":{"bank":{"type":"string"},"country":{"type":"string"},"fingerprint":{"type":"string"},"last_four_digits":{"type":"string"}}},"created_at":{"type":"string"},"id":{"type":"string"},"livemode":{"type":"boolean"},"object":{"type":"string"},"updated_at":{"type":"string"}}},"rejected_payments_count":{"type":"number"},"rejected_payments_sum":{"type":"number"},"status":{"type":"string"},"upcoming_dates":{"type":"array","items":{"type":"object"}},"updated_at":{"type":"string"},"amount":{"type":"number"},"description":{"type":"string"},"count":{"type":"number"},"customer_id":{"type":"string"},"payment_method_number":{"type":"string"},"payment_method_expiration_year":{"type":"string"},"payment_method_expiration_month":{"type":"string"},"payment_method_id":{"type":"string"},"start_date":{"type":"string","description":"A future date on which the first payment of the subscription should be collected. If not specified, the first payment will be collected as soon as possible."},"interval_unit":{"type":"string","description":"The unit of time between customer charge dates. One of weekly, monthly or yearly. Example monthly"},"interval":{"type":"number","description":"Number of interval_units between customer charge dates. Must be greater than to 1. If interval_unit is weekly and interval is 2, then the customer will be charged every two weeks. Defaults to 1. Example 1"},"day_of_month":{"type":"number","description":"Day of month, from 1 to 28. This field is required if interval_unit is set to monthly. Defaults to 1."},"day_of_week":{"type":"number","description":"Day of week number, from 0 (Sunday) to 6 (Saturday). This field is required if interval_unit is set to weekly."},"metadata":{"type":"object","properties":{"name":{"type":"string"}},"description":"Reference, additional information (max 3 keys, 100 chars each)."}}}}},"example":{"data":{"id":"SBWEa9ypAgMXKR","object":"subscription","amount":100,"description":"New subscription name","currency":"ARS","status":"active","start_date":"2019-11-28T00:00:00.000Z","interval_unit":"monthly","interval":1,"day_of_month":1,"day_of_week":0,"livemode":false,"created_at":"2019-11-28T13:57:56-0300","updated_at":"2019-11-28T13:58:05-0300","first_date":"2019-12-01T00:00:00.000Z","upcoming_dates":["2019-12-01T00:00:00.000Z","2020-01-01T00:00:00.000Z","2020-02-01T00:00:00.000Z","2020-03-01T00:00:00.000Z","2020-04-01T00:00:00.000Z"],"customer":{"id":"CSr7Dg3LkDP2","object":"customer","gateway_identifier":"001234","name":"John","email":"john@doe.com","identification_type":"","identification_number":"","mobile_number":"","livemode":false,"updated_at":"2019-11-27T17:28:33-0300","created_at":"2019-11-27T17:28:33-0300"},"payment_method":{"id":"PMPVWR55pkgj","object":"payment_method","last_four_digits":"2104","brand":"visa-credito","bank":"","livemode":false,"updated_at":"2019-11-27T17:28:33-0300","created_at":"2019-11-27T17:28:33-0300"},"metadata":{"some":"metadata"},"payments_created":1,"approved_payments_count":0,"approved_payments_sum":0,"rejected_payments_count":0,"rejected_payments_sum":0}}}}}},"x-codegen-request-body-name":"body","x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request PUT \\\n  --url https://api.tucuota.com//v1/subscriptions/SBmX1MrZ77Mwq3 \\\n  --header 'content-type: */*'"},{"lang":"Node + Native","source":"const http = require(\"https\");\n\nconst options = {\n  \"method\": \"PUT\",\n  \"hostname\": \"api.tucuota.com\",\n  \"port\": null,\n  \"path\": \"//v1/subscriptions/SBmX1MrZ77Mwq3\",\n  \"headers\": {\n    \"content-type\": \"*/*\"\n  }\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tucuota.com//v1/subscriptions/SBmX1MrZ77Mwq3\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PUT\",\n  CURLOPT_HTTPHEADER => [\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.tucuota.com\")\n\nheaders = { 'content-type': \"*/*\" }\n\nconn.request(\"PUT\", \"//v1/subscriptions/SBmX1MrZ77Mwq3\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Java + Unirest","source":"HttpResponse<String> response = Unirest.put(\"https://api.tucuota.com//v1/subscriptions/SBmX1MrZ77Mwq3\")\n  .header(\"content-type\", \"*/*\")\n  .asString();"}]}},"/v1/subscriptions/{id}/actions/cancel":{"post":{"tags":["Subscriptions"],"summary":"Cancel","description":"This action cancels and archive the subscription. Also cancel the payments related to it.","operationId":"Cancel","parameters":[{"name":"id","in":"path","description":"Subscription ID.","required":true,"schema":{"type":"string"},"example":"SBmX1MrZ77Mwq3"}],"responses":{"201":{"description":"Created","content":{"application/json":{"schema":{"type":"object","properties":{"data":{"required":["amount","approved_payments_count","approved_payments_sum","created_at","currency","customer","customer_id","description","first_date","id","interval","interval_unit","livemode","object","payment_method","rejected_payments_count","rejected_payments_sum","start_date","status","upcoming_dates","updated_at"],"type":"object","properties":{"created_at":{"type":"string"},"currency":{"type":"string"},"approved_payments_count":{"type":"number"},"approved_payments_sum":{"type":"number"},"customer":{"required":["created_at","deleted_at","email","id","identification_number","identification_type","livemode","mobile_number","name","object","updated_at"],"type":"object","properties":{"object":{"type":"string","description":"Description."},"created_at":{"type":"string","description":"Description."},"deleted_at":{"type":"string","description":"Description."},"email":{"type":"string","description":"Description."},"gateway_identifier":{"type":"string","description":"Description."},"id":{"type":"string","description":"Description."},"identification_number":{"type":"string","description":"Description."},"identification_type":{"type":"string","description":"Description."},"livemode":{"type":"boolean","description":"Description."},"metadata":{"type":"object","properties":{"name":{"type":"string"}},"description":"Reference, additional information (max 3 keys, 100 chars each)."},"mobile_number":{"type":"string","description":"Description."},"name":{"type":"string","description":"Description."},"updated_at":{"type":"string","description":"Description."}}},"first_date":{"type":"string"},"id":{"type":"string"},"livemode":{"type":"boolean"},"object":{"type":"string"},"payment_method":{"type":"object","properties":{"type":{"type":"string","description":"One of: cbu, card."},"card":{"type":"object","properties":{"bank":{"type":"string"},"brand":{"type":"string"},"country":{"type":"string"},"expiration_month":{"type":"number"},"expiration_year":{"type":"number"},"fingerprint":{"type":"string"},"last_four_digits":{"type":"string"}}},"cbu":{"type":"object","properties":{"bank":{"type":"string"},"country":{"type":"string"},"fingerprint":{"type":"string"},"last_four_digits":{"type":"string"}}},"created_at":{"type":"string"},"id":{"type":"string"},"livemode":{"type":"boolean"},"object":{"type":"string"},"updated_at":{"type":"string"}}},"rejected_payments_count":{"type":"number"},"rejected_payments_sum":{"type":"number"},"status":{"type":"string"},"upcoming_dates":{"type":"array","items":{"type":"object"}},"updated_at":{"type":"string"},"amount":{"type":"number"},"description":{"type":"string"},"count":{"type":"number"},"customer_id":{"type":"string"},"payment_method_number":{"type":"string"},"payment_method_expiration_year":{"type":"string"},"payment_method_expiration_month":{"type":"string"},"payment_method_id":{"type":"string"},"start_date":{"type":"string","description":"A future date on which the first payment of the subscription should be collected. If not specified, the first payment will be collected as soon as possible."},"interval_unit":{"type":"string","description":"The unit of time between customer charge dates. One of weekly, monthly or yearly. Example monthly"},"interval":{"type":"number","description":"Number of interval_units between customer charge dates. Must be greater than to 1. If interval_unit is weekly and interval is 2, then the customer will be charged every two weeks. Defaults to 1. Example 1"},"day_of_month":{"type":"number","description":"Day of month, from 1 to 28. This field is required if interval_unit is set to monthly. Defaults to 1."},"day_of_week":{"type":"number","description":"Day of week number, from 0 (Sunday) to 6 (Saturday). This field is required if interval_unit is set to weekly."},"metadata":{"type":"object","properties":{"name":{"type":"string"}},"description":"Reference, additional information (max 3 keys, 100 chars each)."}}}}},"example":{"message":"Cancelled successfully"}}}}},"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request POST \\\n  --url https://api.tucuota.com//v1/subscriptions/SBmX1MrZ77Mwq3/actions/cancel"},{"lang":"Node + Native","source":"const http = require(\"https\");\n\nconst options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.tucuota.com\",\n  \"port\": null,\n  \"path\": \"//v1/subscriptions/SBmX1MrZ77Mwq3/actions/cancel\",\n  \"headers\": {}\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tucuota.com//v1/subscriptions/SBmX1MrZ77Mwq3/actions/cancel\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.tucuota.com\")\n\nconn.request(\"POST\", \"//v1/subscriptions/SBmX1MrZ77Mwq3/actions/cancel\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Java + Unirest","source":"HttpResponse<String> response = Unirest.post(\"https://api.tucuota.com//v1/subscriptions/SBmX1MrZ77Mwq3/actions/cancel\")\n  .asString();"}]}},"/v1/subscriptions/{id}/actions/pause":{"post":{"tags":["Subscriptions"],"summary":"Pause","operationId":"Pause","parameters":[{"name":"id","in":"path","description":"Subscription ID.","required":true,"schema":{"type":"string"},"example":"SBmX1MrZ77Mwq3"}],"responses":{"201":{"description":"Created","content":{"application/json":{"schema":{"type":"object","properties":{"data":{"required":["amount","approved_payments_count","approved_payments_sum","created_at","currency","customer","customer_id","description","first_date","id","interval","interval_unit","livemode","object","payment_method","rejected_payments_count","rejected_payments_sum","start_date","status","upcoming_dates","updated_at"],"type":"object","properties":{"created_at":{"type":"string"},"currency":{"type":"string"},"approved_payments_count":{"type":"number"},"approved_payments_sum":{"type":"number"},"customer":{"required":["created_at","deleted_at","email","id","identification_number","identification_type","livemode","mobile_number","name","object","updated_at"],"type":"object","properties":{"object":{"type":"string","description":"Description."},"created_at":{"type":"string","description":"Description."},"deleted_at":{"type":"string","description":"Description."},"email":{"type":"string","description":"Description."},"gateway_identifier":{"type":"string","description":"Description."},"id":{"type":"string","description":"Description."},"identification_number":{"type":"string","description":"Description."},"identification_type":{"type":"string","description":"Description."},"livemode":{"type":"boolean","description":"Description."},"metadata":{"type":"object","properties":{"name":{"type":"string"}},"description":"Reference, additional information (max 3 keys, 100 chars each)."},"mobile_number":{"type":"string","description":"Description."},"name":{"type":"string","description":"Description."},"updated_at":{"type":"string","description":"Description."}}},"first_date":{"type":"string"},"id":{"type":"string"},"livemode":{"type":"boolean"},"object":{"type":"string"},"payment_method":{"type":"object","properties":{"type":{"type":"string","description":"One of: cbu, card."},"card":{"type":"object","properties":{"bank":{"type":"string"},"brand":{"type":"string"},"country":{"type":"string"},"expiration_month":{"type":"number"},"expiration_year":{"type":"number"},"fingerprint":{"type":"string"},"last_four_digits":{"type":"string"}}},"cbu":{"type":"object","properties":{"bank":{"type":"string"},"country":{"type":"string"},"fingerprint":{"type":"string"},"last_four_digits":{"type":"string"}}},"created_at":{"type":"string"},"id":{"type":"string"},"livemode":{"type":"boolean"},"object":{"type":"string"},"updated_at":{"type":"string"}}},"rejected_payments_count":{"type":"number"},"rejected_payments_sum":{"type":"number"},"status":{"type":"string"},"upcoming_dates":{"type":"array","items":{"type":"object"}},"updated_at":{"type":"string"},"amount":{"type":"number"},"description":{"type":"string"},"count":{"type":"number"},"customer_id":{"type":"string"},"payment_method_number":{"type":"string"},"payment_method_expiration_year":{"type":"string"},"payment_method_expiration_month":{"type":"string"},"payment_method_id":{"type":"string"},"start_date":{"type":"string","description":"A future date on which the first payment of the subscription should be collected. If not specified, the first payment will be collected as soon as possible."},"interval_unit":{"type":"string","description":"The unit of time between customer charge dates. One of weekly, monthly or yearly. Example monthly"},"interval":{"type":"number","description":"Number of interval_units between customer charge dates. Must be greater than to 1. If interval_unit is weekly and interval is 2, then the customer will be charged every two weeks. Defaults to 1. Example 1"},"day_of_month":{"type":"number","description":"Day of month, from 1 to 28. This field is required if interval_unit is set to monthly. Defaults to 1."},"day_of_week":{"type":"number","description":"Day of week number, from 0 (Sunday) to 6 (Saturday). This field is required if interval_unit is set to weekly."},"metadata":{"type":"object","properties":{"name":{"type":"string"}},"description":"Reference, additional information (max 3 keys, 100 chars each)."}}}}},"example":{"message":"Paused successfully"}}}}},"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request POST \\\n  --url https://api.tucuota.com//v1/subscriptions/SBmX1MrZ77Mwq3/actions/pause"},{"lang":"Node + Native","source":"const http = require(\"https\");\n\nconst options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.tucuota.com\",\n  \"port\": null,\n  \"path\": \"//v1/subscriptions/SBmX1MrZ77Mwq3/actions/pause\",\n  \"headers\": {}\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tucuota.com//v1/subscriptions/SBmX1MrZ77Mwq3/actions/pause\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.tucuota.com\")\n\nconn.request(\"POST\", \"//v1/subscriptions/SBmX1MrZ77Mwq3/actions/pause\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Java + Unirest","source":"HttpResponse<String> response = Unirest.post(\"https://api.tucuota.com//v1/subscriptions/SBmX1MrZ77Mwq3/actions/pause\")\n  .asString();"}]}},"/v1/subscriptions/{id}/actions/resume":{"post":{"tags":["Subscriptions"],"summary":"Resume","operationId":"Resume","parameters":[{"name":"id","in":"path","description":"Subscription ID.","required":true,"schema":{"type":"string"},"example":"SBmX1MrZ77Mwq3"}],"responses":{"201":{"description":"Created","content":{"application/json":{"schema":{"type":"object","properties":{"data":{"required":["amount","approved_payments_count","approved_payments_sum","created_at","currency","customer","customer_id","description","first_date","id","interval","interval_unit","livemode","object","payment_method","rejected_payments_count","rejected_payments_sum","start_date","status","upcoming_dates","updated_at"],"type":"object","properties":{"created_at":{"type":"string"},"currency":{"type":"string"},"approved_payments_count":{"type":"number"},"approved_payments_sum":{"type":"number"},"customer":{"required":["created_at","deleted_at","email","id","identification_number","identification_type","livemode","mobile_number","name","object","updated_at"],"type":"object","properties":{"object":{"type":"string","description":"Description."},"created_at":{"type":"string","description":"Description."},"deleted_at":{"type":"string","description":"Description."},"email":{"type":"string","description":"Description."},"gateway_identifier":{"type":"string","description":"Description."},"id":{"type":"string","description":"Description."},"identification_number":{"type":"string","description":"Description."},"identification_type":{"type":"string","description":"Description."},"livemode":{"type":"boolean","description":"Description."},"metadata":{"type":"object","properties":{"name":{"type":"string"}},"description":"Reference, additional information (max 3 keys, 100 chars each)."},"mobile_number":{"type":"string","description":"Description."},"name":{"type":"string","description":"Description."},"updated_at":{"type":"string","description":"Description."}}},"first_date":{"type":"string"},"id":{"type":"string"},"livemode":{"type":"boolean"},"object":{"type":"string"},"payment_method":{"type":"object","properties":{"type":{"type":"string","description":"One of: cbu, card."},"card":{"type":"object","properties":{"bank":{"type":"string"},"brand":{"type":"string"},"country":{"type":"string"},"expiration_month":{"type":"number"},"expiration_year":{"type":"number"},"fingerprint":{"type":"string"},"last_four_digits":{"type":"string"}}},"cbu":{"type":"object","properties":{"bank":{"type":"string"},"country":{"type":"string"},"fingerprint":{"type":"string"},"last_four_digits":{"type":"string"}}},"created_at":{"type":"string"},"id":{"type":"string"},"livemode":{"type":"boolean"},"object":{"type":"string"},"updated_at":{"type":"string"}}},"rejected_payments_count":{"type":"number"},"rejected_payments_sum":{"type":"number"},"status":{"type":"string"},"upcoming_dates":{"type":"array","items":{"type":"object"}},"updated_at":{"type":"string"},"amount":{"type":"number"},"description":{"type":"string"},"count":{"type":"number"},"customer_id":{"type":"string"},"payment_method_number":{"type":"string"},"payment_method_expiration_year":{"type":"string"},"payment_method_expiration_month":{"type":"string"},"payment_method_id":{"type":"string"},"start_date":{"type":"string","description":"A future date on which the first payment of the subscription should be collected. If not specified, the first payment will be collected as soon as possible."},"interval_unit":{"type":"string","description":"The unit of time between customer charge dates. One of weekly, monthly or yearly. Example monthly"},"interval":{"type":"number","description":"Number of interval_units between customer charge dates. Must be greater than to 1. If interval_unit is weekly and interval is 2, then the customer will be charged every two weeks. Defaults to 1. Example 1"},"day_of_month":{"type":"number","description":"Day of month, from 1 to 28. This field is required if interval_unit is set to monthly. Defaults to 1."},"day_of_week":{"type":"number","description":"Day of week number, from 0 (Sunday) to 6 (Saturday). This field is required if interval_unit is set to weekly."},"metadata":{"type":"object","properties":{"name":{"type":"string"}},"description":"Reference, additional information (max 3 keys, 100 chars each)."}}}}},"example":{"message":"Resumed successfully"}}}}},"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request POST \\\n  --url https://api.tucuota.com//v1/subscriptions/SBmX1MrZ77Mwq3/actions/resume"},{"lang":"Node + Native","source":"const http = require(\"https\");\n\nconst options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.tucuota.com\",\n  \"port\": null,\n  \"path\": \"//v1/subscriptions/SBmX1MrZ77Mwq3/actions/resume\",\n  \"headers\": {}\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tucuota.com//v1/subscriptions/SBmX1MrZ77Mwq3/actions/resume\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.tucuota.com\")\n\nconn.request(\"POST\", \"//v1/subscriptions/SBmX1MrZ77Mwq3/actions/resume\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Java + Unirest","source":"HttpResponse<String> response = Unirest.post(\"https://api.tucuota.com//v1/subscriptions/SBmX1MrZ77Mwq3/actions/resume\")\n  .asString();"}]}},"/v1/mandates":{"get":{"tags":["Mandates"],"summary":"List mandates","description":"Returns a list of all your mandates.","operationId":"List mandates","parameters":[{"name":"page","in":"query","description":"Cursor value to paginate response.","schema":{"type":"number"},"example":"10"},{"name":"limit","in":"query","description":"Number of records to return.","schema":{"type":"number"},"example":"1"}],"responses":{"200":{"description":"OK","content":{}}},"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url 'https://api.tucuota.com//v1/mandates?page=SOME_NUMBER_VALUE&limit=SOME_NUMBER_VALUE'"},{"lang":"Node + Native","source":"const http = require(\"https\");\n\nconst options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.tucuota.com\",\n  \"port\": null,\n  \"path\": \"//v1/mandates?page=SOME_NUMBER_VALUE&limit=SOME_NUMBER_VALUE\",\n  \"headers\": {}\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tucuota.com//v1/mandates?page=SOME_NUMBER_VALUE&limit=SOME_NUMBER_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.tucuota.com\")\n\nconn.request(\"GET\", \"//v1/mandates?page=SOME_NUMBER_VALUE&limit=SOME_NUMBER_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Java + Unirest","source":"HttpResponse<String> response = Unirest.get(\"https://api.tucuota.com//v1/mandates?page=SOME_NUMBER_VALUE&limit=SOME_NUMBER_VALUE\")\n  .asString();"}]},"post":{"tags":["Mandates"],"summary":"Create mandate","description":"#### Body Parameters\n\n|                                   |                   |                                                                                                                                  |\n| --------------------------------- | ----------------- | -------------------------------------------------------------------------------------------------------------------------------- |\n| `customer_id`                     | string, required  | Reference of your customer.                                                                                                      |\n| `payment_method_number`           | string, required  | The number of the card or cbu for each payment of the subscription. This field is required if payment_method_id is not given.    |\n| `payment_method_expiration_year`  | integer, optional | The card year of expiration. This field is only required in Panamá and when payment_method_id is not given.                      |\n| `payment_method_expiration_month` | integer, optional | The card month of expiration. This field is only required in Panamá and when payment_method_id is not given.                     |\n| `payment_method_id`               | string, optional  | The token of the card or cbu for each payment of the subscription. This field is required if payment_method_number is not given. |\n| `metadata`                        | array, optional   | Reference, additional information (max 3 keys, 100 chars each).                                                                  |","operationId":"Create mandate","requestBody":{"content":{"*/*":{"schema":{"type":"object","properties":{"customer_id":{"type":"string"},"payment_method_number":{"type":"string"}},"example":{"customer_id":"CS3oDRqz9wzB","payment_method_number":"4024007127322104"}}}},"required":false},"responses":{"201":{"description":"Created","content":{"application/json":{"example":{"data":{"id":"3d48eb80-a5a3-11ea-8439-bdd053d1a65b","object":"mandate","livemode":false,"status":"active","created_at":"2020-06-03T11:05:11-0300","updated_at":"2020-06-03T11:05:11-0300","customer":{"id":"CS3oDRqz9wzB","object":"customer","gateway_identifier":"1234","name":"John","email":"john@doe.com","identification_type":"","identification_number":"","mobile_number":"","livemode":false,"updated_at":"2020-06-03T11:05:11-0300","created_at":"2020-06-03T11:05:11-0300"},"payment_method":{"id":"PMyYW9rJ3alN","object":"payment_method","last_four_digits":"2104","brand":"visa-credito","bank":"","livemode":false,"updated_at":"2020-06-03T11:05:11-0300","created_at":"2020-06-03T11:05:11-0300"}}}}}}},"x-codegen-request-body-name":"body","x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request POST \\\n  --url https://api.tucuota.com//v1/mandates \\\n  --header 'content-type: */*'"},{"lang":"Node + Native","source":"const http = require(\"https\");\n\nconst options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.tucuota.com\",\n  \"port\": null,\n  \"path\": \"//v1/mandates\",\n  \"headers\": {\n    \"content-type\": \"*/*\"\n  }\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tucuota.com//v1/mandates\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => [\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.tucuota.com\")\n\nheaders = { 'content-type': \"*/*\" }\n\nconn.request(\"POST\", \"//v1/mandates\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Java + Unirest","source":"HttpResponse<String> response = Unirest.post(\"https://api.tucuota.com//v1/mandates\")\n  .header(\"content-type\", \"*/*\")\n  .asString();"}]}},"/v1/mandates/{id}":{"get":{"tags":["Mandates"],"summary":"Show mandate","operationId":"Show mandate","parameters":[{"name":"id","in":"path","description":"Mandate ID.","required":true,"schema":{"type":"string"},"example":"85641980-8a28-11ea-a926-d51efa41533d"}],"responses":{"200":{"description":"OK","content":{"application/json":{"example":{"data":{"id":"85641980-8a28-11ea-a926-d51efa41533d","object":"mandate","livemode":false,"status":"active","created_at":"2020-04-29T13:48:42-0300","updated_at":"2020-04-29T13:48:42-0300","customer":{"id":"CSEo8ogoP864","object":"customer","gateway_identifier":"001234","name":"Preur","email":"lasdf@gla.com","identification_type":"","identification_number":"","mobile_number":"","livemode":false,"updated_at":"2020-04-29T13:48:42-0300","created_at":"2020-04-29T13:48:42-0300"},"payment_method":{"id":"PMnGkL4LAkdL","object":"payment_method","last_four_digits":"5908","brand":"visa-credito","bank":"","livemode":false,"updated_at":"2020-04-29T13:48:42-0300","created_at":"2020-04-29T13:48:42-0300"},"metadata":{"age":"10"}}}}}}},"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url https://api.tucuota.com//v1/mandates/85641980-8a28-11ea-a926-d51efa41533d"},{"lang":"Node + Native","source":"const http = require(\"https\");\n\nconst options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.tucuota.com\",\n  \"port\": null,\n  \"path\": \"//v1/mandates/85641980-8a28-11ea-a926-d51efa41533d\",\n  \"headers\": {}\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tucuota.com//v1/mandates/85641980-8a28-11ea-a926-d51efa41533d\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.tucuota.com\")\n\nconn.request(\"GET\", \"//v1/mandates/85641980-8a28-11ea-a926-d51efa41533d\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Java + Unirest","source":"HttpResponse<String> response = Unirest.get(\"https://api.tucuota.com//v1/mandates/85641980-8a28-11ea-a926-d51efa41533d\")\n  .asString();"}]}},"/v1/mandates/{id}/actions/revoke":{"post":{"tags":["Mandates"],"summary":"Revoke mandate","description":"This action will revoke the mandate and also cancel all the cancellable subscriptions attached to the same `customer` and `payment method`.","operationId":"Revoke mandate","parameters":[{"name":"id","in":"path","description":"Mandate ID.","required":true,"schema":{"type":"string"},"example":"85641980-8a28-11ea-a926-d51efa41533d"}],"responses":{"202":{"description":"Accepted","content":{}}},"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request POST \\\n  --url https://api.tucuota.com//v1/mandates/85641980-8a28-11ea-a926-d51efa41533d/actions/revoke"},{"lang":"Node + Native","source":"const http = require(\"https\");\n\nconst options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.tucuota.com\",\n  \"port\": null,\n  \"path\": \"//v1/mandates/85641980-8a28-11ea-a926-d51efa41533d/actions/revoke\",\n  \"headers\": {}\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tucuota.com//v1/mandates/85641980-8a28-11ea-a926-d51efa41533d/actions/revoke\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.tucuota.com\")\n\nconn.request(\"POST\", \"//v1/mandates/85641980-8a28-11ea-a926-d51efa41533d/actions/revoke\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Java + Unirest","source":"HttpResponse<String> response = Unirest.post(\"https://api.tucuota.com//v1/mandates/85641980-8a28-11ea-a926-d51efa41533d/actions/revoke\")\n  .asString();"}]}},"/v1/mandates/{id}/actions/restore":{"post":{"tags":["Mandates"],"summary":"Restore mandate","description":"This action will restore the revoked mandate.","operationId":"Restore mandate","parameters":[{"name":"id","in":"path","description":"Mandate ID.","required":true,"schema":{"type":"string"},"example":"85641980-8a28-11ea-a926-d51efa41533d"}],"responses":{"202":{"description":"Accepted","content":{}}},"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request POST \\\n  --url https://api.tucuota.com//v1/mandates/85641980-8a28-11ea-a926-d51efa41533d/actions/restore"},{"lang":"Node + Native","source":"const http = require(\"https\");\n\nconst options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.tucuota.com\",\n  \"port\": null,\n  \"path\": \"//v1/mandates/85641980-8a28-11ea-a926-d51efa41533d/actions/restore\",\n  \"headers\": {}\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tucuota.com//v1/mandates/85641980-8a28-11ea-a926-d51efa41533d/actions/restore\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.tucuota.com\")\n\nconn.request(\"POST\", \"//v1/mandates/85641980-8a28-11ea-a926-d51efa41533d/actions/restore\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Java + Unirest","source":"HttpResponse<String> response = Unirest.post(\"https://api.tucuota.com//v1/mandates/85641980-8a28-11ea-a926-d51efa41533d/actions/restore\")\n  .asString();"}]}},"/v1/user":{"get":{"tags":["User"],"summary":"Show","operationId":"Show","responses":{"200":{"description":"OK","content":{"application/json":{"example":{"address":"","country":"AR","currency":"ARS","display":"Fernando del Peral","email":"fernandodelperal@gmail.com","is_loading_demo":false,"locality":"","mobile_number":"","name":"Fernando del Peral","organization_name":"TuCuota","province":""}}}}},"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url https://api.tucuota.com//v1/user"},{"lang":"Node + Native","source":"const http = require(\"https\");\n\nconst options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.tucuota.com\",\n  \"port\": null,\n  \"path\": \"//v1/user\",\n  \"headers\": {}\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tucuota.com//v1/user\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.tucuota.com\")\n\nconn.request(\"GET\", \"//v1/user\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Java + Unirest","source":"HttpResponse<String> response = Unirest.get(\"https://api.tucuota.com//v1/user\")\n  .asString();"}]},"put":{"tags":["User"],"summary":"Update","operationId":"Update","requestBody":{"content":{"*/*":{"schema":{"type":"object","properties":{"address":{"type":"string"},"country":{"type":"string"},"currency":{"type":"string"},"display":{"type":"string"},"email":{"type":"string"},"locality":{"type":"string"},"mobile_number":{"type":"string"},"name":{"type":"string"},"organization_name":{"type":"string"},"province":{"type":"string"}},"example":{"address":"Av. de los Incas 1234","country":"AR","currency":"ARS","display":"Fernando del Peral","email":"fernandodelperal@gmail.com","locality":"Capital Federal","mobile_number":543816234112,"name":"Fernando del Peral","organization_name":"TuCuota","province":"Capital Federal"}}}},"required":false},"responses":{"204":{"description":"No Content","content":{}},"422":{"description":"Unprocessable Entity","content":{"application/json":{"example":{"errors":{"address":["El campo debe tener algún valor."],"locality":["El campo debe tener algún valor."],"mobile_number":["Número inválido."],"province":["El campo debe tener algún valor."]},"message":"The given data was invalid."}}}}},"x-codegen-request-body-name":"body","x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request PUT \\\n  --url https://api.tucuota.com//v1/user \\\n  --header 'content-type: */*'"},{"lang":"Node + Native","source":"const http = require(\"https\");\n\nconst options = {\n  \"method\": \"PUT\",\n  \"hostname\": \"api.tucuota.com\",\n  \"port\": null,\n  \"path\": \"//v1/user\",\n  \"headers\": {\n    \"content-type\": \"*/*\"\n  }\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tucuota.com//v1/user\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PUT\",\n  CURLOPT_HTTPHEADER => [\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.tucuota.com\")\n\nheaders = { 'content-type': \"*/*\" }\n\nconn.request(\"PUT\", \"//v1/user\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Java + Unirest","source":"HttpResponse<String> response = Unirest.put(\"https://api.tucuota.com//v1/user\")\n  .header(\"content-type\", \"*/*\")\n  .asString();"}]}},"/v1/webhooks":{"get":{"tags":["Webhook"],"summary":"List webhooks","description":"Returns a list of your webhooks.","operationId":"List webhooks","parameters":[{"name":"page","in":"query","description":"Cursor value to paginate response.","schema":{"type":"number"},"example":"10"}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"required":["data"],"type":"object","properties":{"data":{"type":"array","items":{"type":"object"}},"links":{"type":"object","properties":{}},"meta":{"type":"object","properties":{}}}},"example":{"data":[{"created_at":"2019-09-21T03:10:24.000Z","enabled":true,"enabled_events":["*"],"id":"WHq4VzyAzDgB","livemode":false,"object":"webhook","secret":"DmUeH9E9yJ7ax9IYQVm9HpQ3VWvIx0","updated_at":"2019-09-21T03:10:24.000Z","url":"http://google.com"}],"links":{"first":"https://tucuota.com/api/webhooks?page=1","last":"https://tucuota.com/api/webhooks?page=1"},"meta":{"current_page":1,"from":1,"last_page":1,"path":"https://tucuota.com/api/webhooks","per_page":25,"to":1,"total":1}}}}}},"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url 'https://api.tucuota.com//v1/webhooks?page=SOME_NUMBER_VALUE'"},{"lang":"Node + Native","source":"const http = require(\"https\");\n\nconst options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.tucuota.com\",\n  \"port\": null,\n  \"path\": \"//v1/webhooks?page=SOME_NUMBER_VALUE\",\n  \"headers\": {}\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tucuota.com//v1/webhooks?page=SOME_NUMBER_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.tucuota.com\")\n\nconn.request(\"GET\", \"//v1/webhooks?page=SOME_NUMBER_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Java + Unirest","source":"HttpResponse<String> response = Unirest.get(\"https://api.tucuota.com//v1/webhooks?page=SOME_NUMBER_VALUE\")\n  .asString();"}]},"post":{"tags":["Webhook"],"summary":"Create a Webhook","description":"#### Body Parameters\n\n|                  |                    |                                                                      |\n| ---------------- | ------------------ | -------------------------------------------------------------------- |\n| `enabled_events` | array, optional    | The list of events to enable for this endpoint (defaults to `['*']`) |\n| `url`            | required, optional | The URL of the endpoint                                              |","operationId":"Create a Webhook","requestBody":{"content":{"*/*":{"schema":{"type":"object"}}},"required":false},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"data":{"required":["created_at","enabled","id","livemode","object","secret","updated_at","url"],"type":"object","properties":{"id":{"type":"string","description":"Webhook ID."},"url":{"type":"string","description":"Webhook URL."},"enabled_events":{"type":"array","description":"Webhook Events.","items":{"type":"object"}},"livemode":{"type":"boolean"},"enabled":{"type":"boolean"},"object":{"type":"string","enum":["webhook"]},"secret":{"type":"string","description":"Active secret."},"created_at":{"type":"string","description":"Description."},"updated_at":{"type":"string","description":"Description."}}}}},"example":{"data":{"created_at":"2019-09-21T03:10:24.000Z","enabled":true,"enabled_events":["*"],"id":"WHq4VzyAzDgB","livemode":false,"object":"webhook","secret":"DmUeH9E9yJ7ax9IYQVm9HpQ3VWvIx0","updated_at":"2019-09-21T03:10:24.000Z","url":"https://site.com/webhook"}}}}},"422":{"description":"Unprocessable Entity","content":{"application/json":{"example":{"errors":{"url":["El formato del campo es inválido."]},"message":"The given data was invalid."}}}}},"x-codegen-request-body-name":"body","x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request POST \\\n  --url https://api.tucuota.com//v1/webhooks \\\n  --header 'content-type: */*'"},{"lang":"Node + Native","source":"const http = require(\"https\");\n\nconst options = {\n  \"method\": \"POST\",\n  \"hostname\": \"api.tucuota.com\",\n  \"port\": null,\n  \"path\": \"//v1/webhooks\",\n  \"headers\": {\n    \"content-type\": \"*/*\"\n  }\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tucuota.com//v1/webhooks\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => [\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.tucuota.com\")\n\nheaders = { 'content-type': \"*/*\" }\n\nconn.request(\"POST\", \"//v1/webhooks\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Java + Unirest","source":"HttpResponse<String> response = Unirest.post(\"https://api.tucuota.com//v1/webhooks\")\n  .header(\"content-type\", \"*/*\")\n  .asString();"}]}},"/v1/webhooks/{id}":{"get":{"tags":["Webhook"],"summary":"Show","operationId":"Show","parameters":[{"name":"id","in":"path","description":"Webhook ID.","required":true,"schema":{"type":"string"},"example":"WHq4VzyAzDgB"}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"object","properties":{"data":{"required":["created_at","enabled","id","livemode","object","secret","updated_at","url"],"type":"object","properties":{"id":{"type":"string","description":"Webhook ID."},"url":{"type":"string","description":"Webhook URL."},"enabled_events":{"type":"array","description":"Webhook Events.","items":{"type":"object"}},"livemode":{"type":"boolean"},"enabled":{"type":"boolean"},"object":{"type":"string","enum":["webhook"]},"secret":{"type":"string","description":"Active secret."},"created_at":{"type":"string","description":"Description."},"updated_at":{"type":"string","description":"Description."}}}}},"example":{"data":{"created_at":"2019-09-21T03:10:24.000Z","enabled":true,"enabled_events":["*"],"id":"WHq4VzyAzDgB","livemode":false,"object":"webhook","secret":"DmUeH9E9yJ7ax9IYQVm9HpQ3VWvIx0","updated_at":"2019-09-21T03:10:24.000Z","url":"http://google.com"}}}}}},"x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url https://api.tucuota.com//v1/webhooks/WHq4VzyAzDgB"},{"lang":"Node + Native","source":"const http = require(\"https\");\n\nconst options = {\n  \"method\": \"GET\",\n  \"hostname\": \"api.tucuota.com\",\n  \"port\": null,\n  \"path\": \"//v1/webhooks/WHq4VzyAzDgB\",\n  \"headers\": {}\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tucuota.com//v1/webhooks/WHq4VzyAzDgB\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.tucuota.com\")\n\nconn.request(\"GET\", \"//v1/webhooks/WHq4VzyAzDgB\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Java + Unirest","source":"HttpResponse<String> response = Unirest.get(\"https://api.tucuota.com//v1/webhooks/WHq4VzyAzDgB\")\n  .asString();"}]},"put":{"tags":["Webhook"],"summary":"Update","description":"#### Body Parameters\n\n|                  |                    |                                                                      |\n| ---------------- | ------------------ | -------------------------------------------------------------------- |\n| `enabled_events` | array, optional    | The list of events to enable for this endpoint (defaults to `['*']`) |\n| `url`            | required, optional | The URL of the endpoint                                              |","operationId":"Update","parameters":[{"name":"id","in":"path","description":"Webhook ID.","required":true,"schema":{"type":"string"},"example":"WHq4VzyAzDgB"}],"requestBody":{"content":{"*/*":{"schema":{"type":"object","properties":{"url":{"type":"string"}},"example":{"url":"http://somesite.com"}}}},"required":false},"responses":{"200":{"description":"OK","content":{"application/json":{"example":{"data":{"created_at":"2019-09-21T03:10:24.000Z","enabled":true,"enabled_events":["*"],"id":"WHq4VzyAzDgB","livemode":false,"object":"webhook","secret":"DmUeH9E9yJ7ax9IYQVm9HpQ3VWvIx0","updated_at":"2019-09-21T03:48:19.000Z","url":"http://somesite.com"}}}}},"422":{"description":"Unprocessable Entity","content":{"application/json":{"example":{"errors":{"url":["El campo es obligatorio."]},"message":"The given data was invalid."}}}}},"x-codegen-request-body-name":"body","x-codeSamples":[{"lang":"Shell + Curl","source":"curl --request PUT \\\n  --url https://api.tucuota.com//v1/webhooks/WHq4VzyAzDgB \\\n  --header 'content-type: */*'"},{"lang":"Node + Native","source":"const http = require(\"https\");\n\nconst options = {\n  \"method\": \"PUT\",\n  \"hostname\": \"api.tucuota.com\",\n  \"port\": null,\n  \"path\": \"//v1/webhooks/WHq4VzyAzDgB\",\n  \"headers\": {\n    \"content-type\": \"*/*\"\n  }\n};\n\nconst req = http.request(options, function (res) {\n  const chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    const body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"},{"lang":"Php + Curl","source":"<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, [\n  CURLOPT_URL => \"https://api.tucuota.com//v1/webhooks/WHq4VzyAzDgB\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PUT\",\n  CURLOPT_HTTPHEADER => [\n    \"content-type: */*\"\n  ],\n]);\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"api.tucuota.com\")\n\nheaders = { 'content-type': \"*/*\" }\n\nconn.request(\"PUT\", \"//v1/webhooks/WHq4VzyAzDgB\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"},{"lang":"Java + Unirest","source":"HttpResponse<String> response = Unirest.put(\"https://api.tucuota.com//v1/webhooks/WHq4VzyAzDgB\")\n  .header(\"content-type\", \"*/*\")\n  .asString();"}]}}}}
